% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-
\section{Preliminaries}

<<Preliminaries>>=
begin :: Preliminaries

<<Definition: valid radix>>

<<Cluster: existence of valid radix real number>>

<<Cluster: existence of a valid radix natural number>>

<<Registration: valid radix implies positive>>

<<Register: $x^{y}$ is positive>>

<<Theorem: $x\leq y$ and $z>1$ implies $z^{x}\leq z^{y}$>>

<<Theorem: $x,y\in\NN$ implies $x^{y}\in\NN$>>

<<Reserve: $b$ refers to a valid radix real number>>

<<Theorem: exponent for $b$-expansion of $x$ is $\lfloor\log_{b}(x)\rfloor$>>

<<Theorem: $1\leq x b^{-\lfloor\log_{b}(x)\rfloor}<b$>>

<<Theorem: existence of canonical $b$-expansion of $x$>>

<<Theorem: for each $\varepsilon>0$ there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$>>

<<Theorem: convergence and limit of $b$-expansion>>

<<Definition: $b$-expansion of $x$>>

<<Theorem: $b$-expansion of $x$ produces sequence of natural numbers not greater than $b$>>

<<Theorem: $b$-expansion vanishes after $r_{k}=0$>>

<<Theorem: $b$-expansion of $0$>>

<<Theorem: $b$-expansion of 1>>

<<Subsection: Defining the extended integers>>
@

\subsection{Valid radix for a non-integer base of numeration}
We will give a generalization of the positional numeral system for a
radix $\beta\in\RR$ such that $\beta>1$. Mizar formalizes positional
number systems in \texttt{[NUMERAL1]}, and we will be consistent with
the notation taken there.

Before getting ahead of ourselves, we need to formalize the notion that
a real number is a valid radix --- that is to say, that $\beta>1$.

\begin{definition}
Let $\beta\in\RR$. We define the attribute $\beta$ is a \define{Valid Radix}
if $\beta>1$.
\end{definition}

\begin{def-remark}
It might be worth exploring the idea that a non-zero non-unit (see
[[ANPROJ10:def 1]] for [[unit]]) natural number is automatically a valid
radix. Right now, I am avoiding ``forcing'' floating-point numbers to
use a valid radix so I can define the basic float formats without
complications.

At the moment, using [[unit]] might be necessary for a completely
different reason. We cannot convince Mizar of the existence of
subnormal floating-point numbers for nonzero non-unit precisions, which
would prevent us from using [[subnormal]] as an adjective.
\end{def-remark}

<<Definition: valid radix>>=
definition
  let IT be Real;
  attr IT is valid_radix means :Def1:
  IT > 1;
end;
@ %def valid_radix

\begin{voc}
We need to add [[valid_radix]] as an attribute to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
Vvalid_radix
@ 

\begin{registration}
We observe that there exists a valid radix real number (which allows us
to use [[valid_radix]] as an adjective).
\end{registration}

A ``registration'' in Mizar is a theorem that instructs Mizar to
automatically process attributes for us. In this case, this is an
existence theorem, and it allows us to use [[valid_radix]] as an
adjective for the [[Real]] type --- so we can work with [[valid_radix Real]]
numbers.

\begin{proof}[Proof sketch]
We just need to prove there exists a real number $x$ such that $x$ is a
valid radix. For example, $x=2$ is such a number.
\end{proof}

<<Cluster: existence of valid radix real number>>=
registration
  cluster valid_radix for Real;
  existence
  proof
    take x=2;
    thus thesis by Def1;
  end;
end;
@

\begin{registration}
We observe that there exists a valid radix natural number.
\end{registration}

<<Cluster: existence of a valid radix natural number>>=
registration
  cluster valid_radix for Nat;
  existence
  proof
    take 2;
    thus thesis;
  end;
end;
@ 

\begin{registration}
We observe that valid radix numbers are positive.
\end{registration}

\begin{proof}[Proof sketch]
We just need to prove that for each real number $x$ such that $x$ is a
valid radix that $x$ is positive. But this follows from the definition
of ``positive'' ([[XXREAL_0:def 6]]) and the definition for a valid radix.
\end{proof}

<<Registration: valid radix implies positive>>=
registration
  cluster valid_radix -> positive for Real;
  coherence by Def1, XXREAL_0:def 6;
end;
@

\begin{registration}
Let $x$ be a positive real number, and let $y$ be a real number.
Then $x^{y}$ is positive.
\end{registration}

<<Register: $x^{y}$ is positive>>=
registration
  let x be positive Real;
  let y be Real;
  cluster x to_power y -> positive;
  coherence by POWER:34;
end;
@ 

\begin{theorem}
Let $x$, $y$, $z$ be real numbers. If $x\leq y$ and $z>1$,
then $z^{x}\leq z^{y}$.
\end{theorem}

<<Theorem: $x\leq y$ and $z>1$ implies $z^{x}\leq z^{y}$>>=
theorem Th1:
  for x,y,z being Real
  st x <= y & z > 1
  holds z to_power x <= z to_power y
proof
  let x,y,z be Real;
  assume A1: x <= y;
  assume A2: z > 1;
  x < y or x = y by A1, XXREAL_0:1;
  hence thesis by A2, POWER:39;
end;
@ %def Th1

\begin{theorem}
Let $x$, $y$ be real numbers. If $x\in\NN$ and $y\in\NN$,
then $x^{y}\in\NN$.
\end{theorem}

<<Theorem: $x,y\in\NN$ implies $x^{y}\in\NN$>>=
theorem ThNatPowers:
  for x being Real
  for y being Real
  st x in NAT & y in NAT
  holds x to_power y in NAT
proof
  let x be Real;
  let y be Real;
  assume A1: x in NAT;
  assume A2: y in NAT;
  reconsider X=x, Y=y as Nat by A1,A2;
  X to_power Y = X |^ Y by POWER:41;
  hence x to_power y in NAT by ORDINAL1:def 12;
end;
@ %def ThNatPowers

\subsection{Non-integer base of numeration}
Now, when we consider a non-integer base of numeration $\beta>1$ for a
real number $x\in\RR$, we are considering a [possibly infinite] sequence
of finite expansions
\begin{equation}
x = d_{0}d_{1}\cdots d_{n-1}.d_{n}\cdots d_{n+m-1}\dots
\end{equation}
where the $n^{\text{th}}$ entry in the sequence is
$D_{n} = (d_{0},d_{1},\dots,d_{n-1})$. This describes the truncated expansion to
$n$ digits.

The \textsc{ieee} standard, however, works in scientific notation,
writing something like
\begin{equation}
x = d_{0}.d_{1}\cdots d_{n+m-1}\times\beta^{n-1},
\end{equation}
or as the product of an integer with $\beta^{-m}$,
\begin{equation}
x = d_{0}d_{1}\cdots d_{n+m-1}\times\beta^{-m}.
\end{equation}
How do we determine these digits $d_{j}$?

For any positive real number $x>0$, we observe there exists an
integer $N$ such that $\beta^{N}\leq x<\beta^{N+1}$. Then
\begin{equation}
d_{0}=\lfloor x/\beta^{N}\rfloor,\quad\mbox{and}\quad r_{0}=(x/\beta^{N})-d_{0},
\end{equation}
and inductively, for any natural number $j$,
\begin{equation}
d_{j+1}=\lfloor\beta r_{j}\rfloor,\quad\mbox{and}\quad r_{j+1}=(\beta r_{j})-d_{j+1}.
\end{equation}
This produces a canonical sequence of digits which is precisely the
$\beta$-expansion of $x$:
\begin{equation}
x = \sum^{\infty}_{j=0}d_{j}\beta^{N-j}.
\end{equation}
We need to construct the sequence $\{D_{n}\}_{n\in\NN_{0}}$ consisting
of the finite sequences $D_{n}=(d_{0},\dots,d_{n})$ so we might use it
in determining the floating-point number corresponding to $x$ in base
$\beta$.

Mizar implements $x^{y}$ for any $x,y\in\RR$ as ``[[x to_power y]]'' in
Definition [[POWER:def 2]]. For our interests, we will be considering
$\beta^{n}$ for $n\in\ZZ$, which is implemented as ``[[beta #Z n]]''
as defined in Definition [[PREPOWER:def 3]].

\begin{reserve}
We will use $b$ to refer to any valid radix real number.
\end{reserve}

<<Reserve: $b$ refers to a valid radix real number>>=
reserve b for valid_radix Real;
@

\begin{theorem}
Let $x\in\RR$ be positive, let $N\in\ZZ$.
Then $b^{N}\leq x<b^{N+1}$ if and only if $N=\lfloor\log_{b}(x)\rfloor$.
\end{theorem}

\begin{proof}[Proof sketch]
As this is an ``iff'' proof, we will need to provide two proofs (one for
each direction).

The forward direction is straightforward.
We will prove that $N\leq\log_{b}(x)$ and $\log_{b}(x)<N+1$, which
implies the result by definition of $\lfloor-\rfloor$.

The backwards direction
\end{proof}

<<Theorem: exponent for $b$-expansion of $x$ is $\lfloor\log_{b}(x)\rfloor$>>=
theorem Th1b:
  for x being positive Real
  for N being Integer
  holds (b to_power N <= x & x < b to_power (N + 1))
  iff N = [\ log(b, x) /]
proof
  let x be positive Real;
  let N be Integer;
  thus (b to_power N <= x & x < b to_power (N + 1)) implies N = [\ log(b, x) /]
  proof
    assume A1: b to_power N <= x;
    assume A2: x < b to_power (N + 1);
    A3: b <> 1 & b > 1 by Def1;
    
    A4: N <= log(b, x)
    <<Subproof: $N\leq\log_{b}(x)$>>
    log(b,x) < N + 1
    <<Subproof: $\log_{b}(x)<N+1$>>
    then log(b,x) - 1 < (N + 1) - 1 by XREAL_1:14;
    hence thesis by A4, INT_1:def 6;
  end;
  thus N = [\ log(b, x) /] implies (b to_power N <= x & x < b to_power (N + 1))
  <<Subproof: $N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$>>
end;
@ %def Th1b

\begin{proof}[Subproof ($N\leq\log_{b}(x)$)]
We can consider two cases from the assumption $b^{N}\leq x$: either
$b^{N} = x$ or $b^{N}<x$. In the first case, we find $b^{N}=x$ implies
$N=\log_{b}(x)$ by the definition of the logarithm. In the second case,
when $b^{N}<x$, since $b^{N}>0$, we find $N=\log_{b}(b^{N})$ by the law
of logarithms, and then we obtain the result since Theorem [[POWER:57]]
proves $\alpha>1$ and $\beta>0$ and $\gamma>\beta$ implies
$\log_{\alpha}(\gamma) > \log_{\alpha}(\beta)$.
\end{proof}

<<Subproof: $N\leq\log_{b}(x)$>>=
proof
  b to_power N = x or b to_power N < x by A1, XXREAL_0:1;
  then per cases;
  suppose b to_power N = x;
    hence thesis by A3, POWER:def 3;
  end;
  suppose A5: b to_power N < x;
    A6: b to_power N > 0 by POWER:34;
    then N = log(b, b to_power N) by A3, POWER:def 3;
    hence thesis by A3, A5, A6, POWER:57;
  end;
end;
@ 

\begin{proof}[Subproof ($\log_{b}(x)<N+1$)]
We see that $b>1$, $x>0$, and $x<b^{N+1}$ implies $\log_{b}(x)<N+1$
thanks to Theorem [[POWER:57]].
\end{proof}

<<Subproof: $\log_{b}(x)<N+1$>>=
proof
  b to_power (N + 1) > 0 by POWER:34;
  then N + 1 = log(b, b to_power (N + 1)) by A3, POWER:def 3;
  hence log(b,x) < (N+1) by A2, A3, POWER:57;
end;
@ 

\begin{proof}[Subproof ($N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$)]
Assuming $N=\lfloor\log_{b}(x)\rfloor$, we can see that
$N\leq\lfloor\log_{b}(x)\rfloor<N+1$. Then it's straightforward using
the properties of exponentiation to see the result.
\end{proof}

<<Subproof: $N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$>>=
proof
  assume N = [\ log(b, x) /];
  then N <= log(b, x) & log(b,x) - 1 < N by INT_1:def 6;
  then N <= log(b, x) & log(b,x) - 1 + 1 < N + 1 by XREAL_1:8;
  then A1: N <= log(b, x) & log(b, x) < N + 1;
  A2: b to_power N <= b to_power (log(b,x))
    & b to_power (log(b,x)) < b to_power (N + 1)
  proof
    B1: b > 1 by Def1;
    thus b to_power N <= b to_power (log(b,x))
    proof
      per cases by A1, XXREAL_0:1;
      suppose N = log(b, x);
        hence thesis;
      end;
      suppose N < log(b, x);
        hence thesis by B1, POWER:39;
      end;
    end;
    thus b to_power (log(b,x)) < b to_power (N + 1) by A1, B1, POWER:39;
  end;
  b > 0 & b <> 1 by Def1;
  hence (b to_power N <= x & x < b to_power (N + 1)) by A2, POWER:def 3;
end;
@ 

\begin{theorem}
Let $x\in\RR$ be positive. Let $N=\lfloor\log_{b}(x)\rfloor$.
Then $1\leq x b^{-N}<b$.
\end{theorem}

\begin{proof}[Proof sketch]
Using the previous theorem, we see that $b^{N}\leq x<b^{N+1}$,
so multiplying through by $b^{-N}$ yields the results (using a few
identities involving powers).
\end{proof}

<<Theorem: $1\leq x b^{-\lfloor\log_{b}(x)\rfloor}<b$>>=
theorem Th2:
  for x being positive Real
  holds 1 <= x * (b to_power (-[\ log(b, x) /]))
           & x * (b to_power (-[\ log(b, x) /])) < b
proof
  let x be positive Real;
  set N = [\ log(b, x) /];
  A1: b > 0 & b <> 1 by Def1;
  A2: b to_power N > 0 by POWER:34;
  A3: (b to_power N) * (b to_power (- N))
     = b to_power (N + (- N)) by POWER:27
    .= 1 by POWER:24;

  thus 1 <= x * (b to_power (- N))
  proof
    set z = b to_power N;
    1 / z = b to_power (- N) by POWER:28;
    hence 1 <= x * (b to_power (- N)) by A2, A3, Th1b, XREAL_1:64;
  end;

  thus x * (b to_power (- N)) < b
  proof
    b to_power (N + 1) = (b to_power 1) * (b to_power N) by POWER:27
                      .= b * (b to_power N) by POWER:25;
    then B1: (b to_power (N + 1)) * (b to_power (- N))
     = b * ((b to_power N) * (b to_power (- N)))
    .= b by A3;
    0 < (b to_power (- N)) by POWER:34;
    hence x * (b to_power (- N)) < b by Th1b, B1, XREAL_1:68;
  end;
end;
@ %def Th2

\begin{theorem}
Let $x\in\RR$ be a real number, let $b$ be a valid radix real number.
There exists two sequences of real numbers $\{d_{j}\}_{j=0}$ and $\{r_{j}\}_{j=0}$
such that $d_{0}=\lfloor x/b^{\lfloor\log_{b}(x)\rfloor}\rfloor$
and $r_{0}=(x/b^{\lfloor\log_{b}(x)\rfloor})-d_{0}$, and for each $j\in\NN$
we have $d_{j+1}=\lfloor br_{j}\rfloor$ and $r_{j+1}=\beta r_{j}-\lfloor br_{j}\rfloor$.
\end{theorem}

<<Theorem: existence of canonical $b$-expansion of $x$>>=
theorem ThBetaExpansionExistence:
  for x being Real
  ex d, r being Real_Sequence
  st d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
proof
  let x be Real;
  <<Proof step: construct $r_{j}$>>
  <<Proof step: construct $d_{j}$>>

  take d, r;
  <<Proof step: conclude $d_{j}$ and $r_{j}$ satisfy the desired properties>>
end;
@ %def ThBetaExpansionExistence

\begin{proof}[Proof step (construct $r_{j}$)]
We observe that $r_{0} = xb^{-\lfloor\log_{b}(x)\rfloor} - \lfloor xb^{-\lfloor\log_{b}(x)\rfloor}\rfloor$
is a real number, and we can write $r_{n+1}$ in terms of $r_{n}$ using
the ``scheme'' [theorem parametrized by terms and/or predicates] from
the article formalizing sequences. This is because
$r_{n+1}=br_{n}-\lfloor br_{n}\rfloor=\mathcal{R}[r_{n}]$ generates the
rest of the sequence.
\end{proof}

<<Proof step: construct $r_{j}$>>=
reconsider d0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
as Element of REAL by XREAL_0:def 1;
reconsider r0 = x*(b to_power (-[\ log(b,x) /])) - d0
as Element of REAL by XREAL_0:def 1;
deffunc R0() = r0;
deffunc Rrec(Nat, Real) = In(b*$2 - [\ b*$2 /], REAL);

consider r being sequence of REAL such that
A1: r.0 = R0() & for n being Nat holds r.(n + 1) = Rrec(n, r.n)
from NAT_1:sch 12;
reconsider r as Real_Sequence;
@

\begin{proof}[Proof step (construct $d_{j}$)]
We have constructed $r_{j}$ as a real sequence, now we can construct
$d_{j}$ using the exact same strategy. However, $\lfloor br_{n}\rfloor$
is not automatically interpreted as a real number, so we need to tell
Mizar that \emph{it really is real}. This is handled by writing
[[In(..., REAL)]] to cast it as an element of $\RR$.
\end{proof}

<<Proof step: construct $d_{j}$>>=
deffunc D0() = d0;
deffunc Drec(Nat, Real) = In([\ b*(r.$1) /], REAL);
consider d being sequence of REAL such that
A2: d.0 = D0() & for n being Nat holds d.(n + 1) = Drec(n, d.n)
from NAT_1:sch 12;
@

\begin{proof}[Proof step (conclude $d_{j}$ and $r_{j}$ satisfy the desired properties)]
This amounts to looking at the construction of $r_{j}$ and $d_{j}$ and
saying, ``Look, they really do satisfy the desired properties''.
\end{proof}

<<Proof step: conclude $d_{j}$ and $r_{j}$ satisfy the desired properties>>=
thus d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /] by A2;
thus r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
by A1;
thus for j being Nat
holds d.(j+1) = [\ b*(r.j) /]
& r.(j+1) = b*(r.j) - [\ b*(r.j) /]
proof
  let j be Nat;
  thus d.(j + 1) = In([\ b*(r.j) /], REAL) by A2
                .= [\ b*(r.j) /];
  thus r.(j + 1) = Rrec(j, r.j) by A1
                .= b*(r.j) - [\ b*(r.j) /];
end;
@ 

\begin{theorem}
For each $\varepsilon>0$, there exists a $N\in\NN$ such that $b^{-N}<\varepsilon$.
\end{theorem}

This is necessary for proving the beta-expansion of a number converges.

\begin{proof}[Proof sketch]
There are two possible cases:
\begin{enumerate}
\item $\varepsilon\geq1$: We have $b^{-1}<1$. Hence $b^{-N}<1<\varepsilon$.
\item $0<\varepsilon<1$: We see $\log_{b}(\varepsilon)<0$, so
  $-\log_{b}(\varepsilon)>0$. Taking $N=1+\lceil-\log_{b}(\varepsilon)\rceil$
  yields $N>-\log_{b}(\varepsilon)$, so $-N<\log_{b}(\varepsilon)$ and
  in particular $b^{-N}<\varepsilon$ by the law of logarithms.
\end{enumerate}
Thus concludes the proof.
\end{proof}

<<Theorem: for each $\varepsilon>0$ there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$>>=
theorem ThExistenceOfN:
  for epsilon being Real
  st epsilon > 0
  ex N being Nat
  st b to_power -N < epsilon
proof
  let epsilon be Real;
  assume A1: epsilon > 0;
  per cases;
  suppose A2: epsilon >= 1;
    take N=1;
    -1 < 0 & b > 1 by Def1;
    then b to_power -N < b to_power 0 by POWER:39;
    then b to_power -N < 1 by POWER:24;
    hence thesis by A2, XXREAL_0:2;
  end;
  suppose A2: epsilon < 1;
    A4: 0 < -log(b, epsilon)
    proof
      A3: 0 < epsilon & epsilon < 1 & b > 1 by A1, A2, Def1;
      then log(b,1) > log(b,epsilon) by POWER:57;
      then 0 > log(b, epsilon) by A3, POWER:51;
      hence thesis;
    end;
    consider r being Real such that
    A5: r > -log(b, epsilon)
    by XREAL_1:1;
    [/r\]+1 in NAT
    proof
      [/r\] >= 0 by A4, A5, INT_1:def 7;
      hence [/r\]+1 in NAT by INT_1:3;
    end;
    then reconsider N = [/r\]+1 as Nat;
    take N;
    A6: b > 1 by Def1; then
    A7: b to_power (log(b,epsilon)) = epsilon by A1, POWER:def 3;
    [/r\] >= r by INT_1:def 7;
    then [/r\] > -log(b,epsilon) by A5, XXREAL_0:2;
    then [/r\] + 1 > -log(b,epsilon) by XREAL_1:145;
    then -N < -(-log(b,epsilon)) by XREAL_1:24;
    hence b to_power -N < epsilon by A6,A7,POWER:39;
  end;
end;
@ %def ThExistenceOfN

\begin{theorem}
Let $x$ be a real number.
Using the sequence $d_{j}$, $r_{j}$ from the previous theorem,
we see the series
\[\sum^{\infty}_{n=0}d_{n}b^{-n}\]
converges to $x/b^{\lfloor\log_{b}(x)\rfloor}$.
\end{theorem}

\begin{proof}[Proof outline]
The proof is not hard, just tedious. The heart of the proof is the
recognition that:
\begin{itemize}
\item[$(A_{6})$] $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$ by
induction;
\item[$(A_{7})$] for $k\in\NN$ we have $0<r_{k}<1$ since $r_{0}$ is the
  fractional part of $x/b^{\lfloor\log_{b}(x)\rfloor}$ and $r_{k+1}$ is the fractional
  part of $br_{k}$;
\item[$(A_{8})$] the sequence of partial sums $s_{m}$ converges to $x/b^{\lfloor\log_{b}(x)\rfloor}$.
\end{itemize}
Everything else is just straightforward.
\end{proof}

<<Theorem: convergence and limit of $b$-expansion>>=
theorem ThBetaExpansionLimit:
  for x being Real
  for d, r being Real_Sequence
  st d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & (for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /])
  ex s being Real_Sequence
  st s.0 = d.0
  & (for j being Nat holds s.(j + 1) = (s.j) + ((d.(j + 1)) * (b to_power (-j-1))))
  & s is convergent
  & lim s = x * (b to_power (-[\ log(b, x) /]))
proof
  let x be Real;
  let d, r be Real_Sequence;
  assume A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /];
  assume A2: r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/];
  assume A3: for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /];

  reconsider d0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  as Element of REAL by XREAL_0:def 1;
  reconsider r0 = x*(b to_power (-[\ log(b,x) /])) - d0
  as Element of REAL by XREAL_0:def 1;
  deffunc S0() = d.0;
  deffunc Srec(Nat, Real) = In($2 + ((d.($1 + 1)) * (b to_power (-$1 - 1))),
  REAL);

  consider s being sequence of REAL such that
  A4: s.0 = S0() & for n being Nat holds s.(n + 1) = Srec(n, s.n)
  from NAT_1:sch 12;
  reconsider s as Real_Sequence;

  take s;
  thus s.0 = d.0 by A4;
  thus for j being Nat
  holds s.(j + 1) = (s.j) + ((d.(j + 1)) * (b to_power (-j-1)))
  proof
    let j be Nat;
    thus s.(j + 1) = In((s.j) + ((d.(j + 1)) * (b to_power (-j-1))), REAL) by A4
                  .= (s.j) + ((d.(j + 1)) * (b to_power (-j-1)));
  end;

  A5: for k being Nat
  holds d.(k + 1) + r.(k + 1) = b * (r.k) 
  proof
    let k be Nat;
    thus d.(k + 1) + r.(k + 1) = [\ b*(r.k) /] + r.(k + 1) by A3
                              .= [\ b*(r.k) /] + (b*(r.k)-[\ b*(r.k) /]) by A3
                              .= b * (r.k);
  end;

  A6: for n being Nat
  holds s.n + (r.n) * (b to_power -n) = x * (b to_power (-[\ log(b, x) /]))
  <<Proof: $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$>>

  A7: for k being Nat
  holds 0 <= r.k & r.k < 1
  <<Proof: for $k\in\NN$ we have $0<r_{k}<1$>>

  A8: for epsilon being Real st 0 < epsilon
  ex N being Nat st
  for m being Nat st N <= m
  holds |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < epsilon
  <<Proof: $\forall\varepsilon>0,\exists N\in\NN,\forall m\in\NN,m\geq N\implies|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<\varepsilon$>>

  hence s is convergent by SEQ_2:def 6;
  hence lim s = x * (b to_power (-[\ log(b, x) /])) by A8, SEQ_2:def 7;
end;
@ %def ThBetaExpansionExistence

\begin{proof}[Proof sketch ($s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$)]
  This is a proof by induction.

  The base case ($n=0$):
  $s_{0}+r_{0}b^{-0}=xb^{-\lfloor\log_{b}(x)\rfloor}$
  by definition of the sequences $r_{0}$, $d_{0}$, and $s_{0}$.

  The inductive case ($n\to n+1$): assume this is true for arbitrary $n$.
  Then we see that $d_{n+1}+r_{n+1}=br_{n}$, and
  $s_{n+1}+r_{n+1}b^{-(n+1)}=s_{n}+b^{-(n+1)}(d_{n+1}+r_{n+1})=s_{n}+b^{-n}r_{n}$
  which is precisely the inductive hypothesis.
\end{proof}

<<Proof: $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$>>=
proof
  defpred P[Nat] means
  s.$1 + (r.$1) * (b to_power (- $1)) = x * (b to_power (-[\ log(b, x) /]));

  s.0 + (r.0) * (b to_power (- 0))
  = s.0 + (r.0) * 1 by POWER:24
  .= x * (b to_power (-[\ log(b, x) /])) by A1,A2,A4;
  then B1: P[0];

  B2: for k being Nat st P[k] holds P[k + 1]
  proof
    let k be Nat;
    assume B3: P[k];
      
    s.(k + 1) = In(s.k + (d.(k + 1)) * (b to_power (-k - 1)),REAL) by A4; then
    s.(k + 1) + (r.(k + 1)) * (b to_power (- (k + 1)))
    = s.k + (d.(k + 1) + r.(k + 1)) * (b to_power (-k - 1))
    .= s.k + (b * (r.k)) * (b to_power (-k - 1)) by A5
    .= s.k + (r.k) * (b * (b to_power (-k - 1)))
    .= s.k + (r.k) * ((b to_power 1) * (b to_power (-k - 1))) by POWER:25
    .= s.k + (r.k) * (b to_power (-k - 1 + 1)) by POWER:27
    .= s.k + (r.k) * (b to_power -k);
    hence P[k + 1] by B3;
  end;
  
  thus for k being Nat holds P[k] from NAT_1:sch 2(B1, B2);
end;
@ 

\begin{proof}[Proof sketch ($0<r_{k}<1$)]
We see when $k=0$ that $r_{0}$ is the fractional part of
$xb^{-\lfloor\log_{b}(x)\rfloor}$, which is between zero and one.
For $k>0$, we see that $r_{k}$ is the fractional part of $br_{k-1}$
which is between zero and one.
\end{proof}

<<Proof: for $k\in\NN$ we have $0<r_{k}<1$>>=
proof
  let k be Nat;
  per cases;
  suppose k=0;
    then r.k = frac (x * (b to_power (-[\ log(b, x) /]))) by A2, INT_1:def 8;
    hence thesis by INT_1:43;
  end;
  suppose k > 0;
    then k >= 0 + 1 by INT_1:7;
    then consider j being Nat such that
    B1: k = 1 + j by NAT_1:10;
    r.k = b*(r.j) - [\ b*(r.j) /] by A3,B1
       .= frac (b*(r.j)) by INT_1:def 8;
    hence thesis by INT_1:43;
  end;
end;
@ 

\begin{proof}[Proof sketch (Convergence of $s_{m}$)]
We see that there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$.
We see that $s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}=-r_{m}b^{-m}$ and $0<r_{m}<1$,
so $|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<b^{-m}$. Then by
transitivity of inequalities, the result follows.
\end{proof}

<<Proof: $\forall\varepsilon>0,\exists N\in\NN,\forall m\in\NN,m\geq N\implies|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<\varepsilon$>>=
proof
  let epsilon be Real;
  assume B1: 0 < epsilon;
  then consider N being Nat such that
  B2: b to_power -N < epsilon by ThExistenceOfN;
  take N;
  let m be Nat;
  assume B3: N <= m;
  
  B4: |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < (b to_power -m)
  proof
    s.m + (r.m)*(b to_power -m) - x * (b to_power (-[\ log(b, x) /]))
    = x*(b to_power (-[\log(b, x)/])) - x*(b to_power (-[\log(b,x)/])) by A6
    .= 0;
    then B5: s.m - x * (b to_power (-[\ log(b, x) /]))
    = - (r.m)*(b to_power -m);
    r.m >= 0 & (b to_power -m) >= 0 by A7; then
    ((r.m)*(b to_power -m)) = |.((r.m)*(b to_power -m)).| by COMPLEX1:43
    .= |.-(r.m) * (b to_power -m).|
    by COMPLEX1:52;
    then B6: |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| = (r.m)*(b to_power -m)
    by B5;
    0 < (b to_power -m) & r.m < 1 by A7;
    then (r.m)*(b to_power -m) < 1*(b to_power -m) by XREAL_1:68;
    hence |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < (b to_power -m)
    by B6;
  end;
  -m <= -N & b > 1 by B3,Def1,XREAL_1:24;
  then b to_power -m <= b to_power -N by Th1;
  then b to_power -m < epsilon by B2, XXREAL_0:2;
  hence |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < epsilon
  by B2,B4,XXREAL_0:2;
end;
@ 

\begin{definition}
Let $b>1$ be real, let $x$ be a real number.
We define the \define{$b$-Expansion of $x$} to be the sequence $d_{j}$
satisfying: there exists a sequence $r_{j}$ such that
$d_{0}=\lfloor x/b^{\lfloor\log_{b}(x)\rfloor}\rfloor$ and $r_{0}=xb^{\lfloor\log_{b}(x)\rfloor}-d_{0}$,
and for all $j\in\NN$ we have $d_{j+1}=\lfloor br_{j}\rfloor$ and $r_{j+1}=br_{j}-d_{j+1}$.
\end{definition}

Since we're defining a new logical term [``functor'' in Mizar's
  parlance\footnote{This is a term borrowed from Polish logicians before
  category theory became a field.}], we need to prove it is
well-defined. This requires proving its existence and
uniqueness. Luckily, we have already proven existence, we just need to
prove uniqueness.

<<Definition: $b$-expansion of $x$>>=
:: Digits in base b for x*(b to_power (-[\log(b,x)/])), which is x in
:: scientific notation
definition
  let b;
  let x be Real;
  func b-expansion x -> Real_Sequence means :Def2b:
  ex r being Real_Sequence
  st it.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds it.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /];
  existence by ThBetaExpansionExistence;
  uniqueness
  <<Proof: uniqueness of $b$-expansion of $x$>>
end;
@

\begin{proof}[Proof sketch (uniqueness of $b$-expansion)]
Let $d^{(1)}$, $d^{(2)}$ be two possible $b$-expansions of $x$.
We prove by complete induction that for any natural number $k$ if
for all $n<k$ we have $d^{(1)}_{n}=d^{(2)}_{n}$, then $d^{(1)}_{k}=d^{(2)}_{k}$.
This implies the two possible candidates for the definition are the same
term. 
\end{proof}

<<Proof: uniqueness of $b$-expansion of $x$>>=
proof
  let d1 be Real_Sequence;
  let d2 be Real_Sequence;
  assume ex r1 being Real_Sequence
  st d1.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r1.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d1.(j+1) = [\ b*(r1.j) /]
  & r1.(j+1) = b*(r1.j) - [\ b*(r1.j) /];
  then consider r1 being Real_Sequence such that
  A1: d1.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r1.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d1.(j+1) = [\ b*(r1.j) /]
  & r1.(j+1) = b*(r1.j) - [\ b*(r1.j) /];
  
  assume ex r2 being Real_Sequence
  st d2.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r2.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d2.(j+1) = [\ b*(r2.j) /]
  & r2.(j+1) = b*(r2.j) - [\ b*(r2.j) /];
  then consider r2 being Real_Sequence such that
  A2: d2.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r2.0 = (x*(b to_power (-[\log(b, x)/]))) - [\(x*(b to_power (-[\log(b, x)/])))/]
  & for j being Nat
  holds d2.(j+1) = [\ b*(r2.j) /]
  & r2.(j+1) = b*(r2.j) - [\ b*(r2.j) /];
  
  defpred P[Nat] means d1.$1 = d2.$1 & r1.$1 = r2.$1;
  
  A3: for k being Nat st (for n being Nat st n < k holds P[n]) holds P[k]
  proof
    let k be Nat;
    assume A4: for n being Nat st n < k holds P[n];
    per cases;
    suppose k = 0;
      hence P[k] by A1,A2;
    end;
    suppose k > 0;
      then consider j being Nat such that
      A5: k = j+1 by NAT_1:6;
      j < k by A5, XREAL_1:145;
      then A6: b*(r1.j) = b*(r2.j) by A4;
      then A7: d1.(j+1) = [\b*(r2.j)/] by A1
                       .= d2.(j+1) by A2
                       .= d2.k by A5;
      r1.k = r1.(j + 1) by A5
          .= b*(r1.j) - [\ b*(r1.j) /] by A1
          .= b*(r1.j) - [\ b*(r2.j) /] by A6
          .= b*(r2.j) - [\ b*(r2.j) /] by A6
          .= r2.(j + 1) by A2
          .= r2.k by A5;
      hence P[k] by A5, A7;
    end;
  end;
  for k being Nat holds P[k] from NAT_1:sch 4(A3);
  then for k being Element of NAT holds d1.k = d2.k;
  hence d1 = d2 by FUNCT_2:def 8;
end;
@ 

\begin{voc}
We need to add [[-expansion]] as a term to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
O-expansion
@

\begin{theorem}
Let $x$ be a \emph{positive} real number.
The $b$-expansion of $x$ produces a sequence of digits $\{d_{j}\}$ such
that for each $n\in\NN$ we have $0\leq d_{n}<b$ and $d_{n}\in\NN$.
\end{theorem}

Note that since IEEE floating-point specifically works with non-negative
mantissas, this theorem describes how we produce the digits for the
non-zero floating-point mantissas.

\begin{proof}[Proof sketch]
The key insight is that for each $j\in\NN$ we see that $0\leq r_{j}<1$,
so $0\leq br_{j}<b$ which immediately gives the result for $d_{j+1}$.
The remaining case $d_{0}$ follows immediately by definition.
\end{proof}

<<Theorem: $b$-expansion of $x$ produces sequence of natural numbers not greater than $b$>>=
theorem
  for x being positive Real
  for n being Nat
  holds 0 <= (b-expansion x).n & (b-expansion x).n < b
  & (b-expansion x).n in NAT
proof
  let x be positive Real;
  let n be Nat;
  set d = b-expansion x;
  consider r being Real_Sequence such that
  A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
  by Def2b;
  
  A2: for j being Nat holds 0 <= r.j & r.j < 1
  proof
    let j be Nat;
    per cases;
    suppose j = 0;
      then r.j = frac (x * (b to_power (-[\ log(b, x) /]))) by A1, INT_1:def 8;
      hence thesis by INT_1:43;
    end;
    suppose j > 0;
      then consider k being Nat such that
      B1: j = k + 1 by NAT_1:6;
      r.j = r.(k + 1) by B1
         .= b*(r.k) - [\ b*(r.k) /] by A1
         .= frac (b * (r.k)) by INT_1:def 8;
      hence thesis by INT_1:43;
    end;
  end;
  
  thus 0 <= (b-expansion x).n & (b-expansion x).n < b & (b-expansion x).n in NAT
  proof
    per cases;
    suppose A3: n = 0;
      [\x * (b to_power (-[\ log(b, x) /]))/] <= x * (b to_power (-[\ log(b, x) /]))
      & x * (b to_power (-[\ log(b, x) /])) < b by Th2, INT_1:def 6;
      hence thesis by A1, A3, INT_1:3,54, XXREAL_0:2;
    end;
    suppose n > 0;
      then consider j being Nat such that
      A4: n = j+1 by NAT_1:6;
      b > 1 & 0 <= r.j & r.j < 1 by A2,Def1; then
      A5: 0 <= b*(r.j) & b*(r.j) < b*1 by XREAL_1:68;
      d.(j + 1) = [\b*(r.j)/] by A1;
      then C1: 0 <= d.(j + 1) by A5, INT_1:54;
      [\b*(r.j)/] <= b*(r.j) & b*(r.j) < b by A5, INT_1:def 6;
      then d.(j + 1) <= b*(r.j) & b*(r.j) < b by A1;
      then C2: d.n < b by A4, XXREAL_0:2;
      d.n = [\b*(r.j)/] by A1,A4;
      hence thesis by A4, C1, C2, INT_1:3;
    end;
  end;
end;
@

\begin{theorem}
If during the $b$-expansion of $x$ we have the residual sequence
eventually hit zero --- i.e., there is some $k\in\NN$ [$k$ for
  ``kritical''] such that $r_{k}=0$ --- then for all $n>k$ we see the
digits of the $b$-expansion vanish $d_{n}=0$.
\end{theorem}

\begin{proof}[Proof sketch]
The key insight is that once $r_{k}=0$, then for all $j\in\NN$ we see
$r_{k+j}=0$. This forces $d_{k+j+1}=0$ for all $j\in\NN$.
\end{proof}

<<Theorem: $b$-expansion vanishes after $r_{k}=0$>>=
theorem ThBetaExpansionHitsZero:
  for x being Real
  for r being Real_Sequence st
  ((b-expansion x).0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds (b-expansion x).(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /])
  for j being Nat st r.j = 0
  for k being Nat st k > j
  holds (b-expansion x).k = 0
proof
  let x be Real;
  let r be Real_Sequence;
  assume A1: (b-expansion x).0 = [\ x * (b to_power (-[\ log(b, x) /])) /];
  assume A2: r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/];
  assume A3: for j being Nat
  holds (b-expansion x).(j+1) = [\ b*(r.j) /]
      & r.(j+1) = b*(r.j) - [\ b*(r.j) /];
  let j be Nat;
  assume A4: r.j = 0;

  defpred P[Nat] means r.(j + $1) = 0;
  A5: for n being Nat st (for m being Nat st m < n holds P[m])
  holds P[n]
  <<Proof: if every $m<n$ has $r_{j+m}=0$, then $r_{j+n}=0$>>

  for n being Nat holds P[n] from NAT_1:sch 4(A5);
  then A6: for n being Nat holds r.(j + n) = 0;
  
  let k be Nat;
  assume k > j;
  then k >= j + 1 by INT_1:7;
  then consider ell being Nat such that
  A7: k = j + 1 + ell by NAT_1:10;
  A8: r.(j + ell) = 0 by A6;
  thus (b-expansion x).k = (b-expansion x).(j + ell + 1) by A7
                        .= [\ b*0 /] by A3, A8
                        .= 0;
end;
@ %def ThBetaExpansionHitsZero

\begin{proof}[Proof sketch ($\forall m<n, r_{j+m}=0\implies r_{j+n}=0$)]
We do this by cases. When $n=0$, the result is immediate.
When $n>0$, we can write $n=m'+1$, and then by the inductive hypothesis
$r_{m'}=0$. This means $br_{m'}=0$ and so its fractional part vanishes,
which means $r_{n}=0$.
\end{proof}

<<Proof: if every $m<n$ has $r_{j+m}=0$, then $r_{j+n}=0$>>=
proof
  let n be Nat;
  assume B1: for m being Nat st m < n holds P[m];
  per cases;
  suppose n = 0;
    hence P[n] by A4;
  end;
  suppose n > 0;
    then consider m being Nat such that
    B2: n = m+1 by NAT_1:6;
    m < m + 1 by XREAL_1:145;
    then m < n by B2;
    then P[m] by B1;
    then B3: r.(j + m) = 0;
    r.(j + n) = r.((j + m) + 1) by B2
             .= b*(r.(j + m)) - [\ b*(r.(j + m)) /] by A3
             .= 0 by B3;
    hence P[n];
  end;
end;
@ 

\begin{corollary}
The $b$-expansion of $0$ is just the zero sequence.
\end{corollary}

\begin{proof}[Proof sketch]
We see that $d_{0}=0$ and $r_{0}=0$. But by the previous theorem, this
means that $r_{j}=0$ for all $j$. This forces $d_{j+1}=0$ for all
$j\in\NN$. Taken together, this forces every digit in the $b$-expansion
of zero to vanish.
\end{proof}

<<Theorem: $b$-expansion of $0$>>=
theorem
  for x being zero Real
  for n being Nat
  holds 0 = (b-expansion x).n
proof
  let x be zero Real;
  let n be Nat;
  set d = b-expansion x;
  consider r being Real_Sequence such that
  A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /] by Def2b;

  per cases;
  suppose n = 0;
    hence (b-expansion x).n = (b-expansion x).0
                           .= [\ 0 * (b to_power (-[\ log(b, x) /])) /] by A1
                           .= 0;
  end;
  suppose A2: n > 0;
    r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/] by A1
       .= 0 - [\0/]
       .= 0;
    then A3: for j being Nat st j > 0 holds (b-expansion x).j = 0
    by A1, ThBetaExpansionHitsZero;
    hence thesis by A2;
  end;
end;
@

\begin{corollary}
The $b$-expansion of $1$ is $d_{0}=1$ and $d_{j}=0$ for all $j>0$.
\end{corollary}

\begin{proof}[Proof sketch]
We see that $d_{0}=\lfloor 1b^{\log_{b}(1)}\rfloor=1$ immediately since
$\log_{b}(1)=0$ and $b^{0}=1$.
We also see that $r_{0}=0$. Therefore by the previous theorem spawning
all these corollaries,
for all $j>0$ we must have $d_{j}=0$.
\end{proof}

<<Theorem: $b$-expansion of 1>>=
theorem
  (b-expansion 1).0 = 1
  & for j being Nat st j > 0 holds (b-expansion 1).j = 0
proof
  set d = b-expansion 1;
  consider r being Real_Sequence such that
  A1: d.0 = [\ 1 * (b to_power (-[\ log(b, 1) /])) /]
  & r.0 = (1 * (b to_power (-[\ log(b, 1) /]))) - [\ (1 * (b to_power (-[\ log(b, 1) /])))/]
  & for j being Nat
    holds d.(j+1) = [\ b*(r.j) /]
        & r.(j+1) = b*(r.j) - [\ b*(r.j) /] by Def2b;
  A2: b > 0 & b <> 1 by Def1;
  A3: 1 * (b to_power (-[\ log(b, 1) /])) 
   = b to_power (-[\ 0 /]) by A2, POWER:51 
  .= 1 by POWER:24;
  thus d.0 = 1 by A1, A3;
  let j be Nat;
  assume j > 0;
  hence (b-expansion 1).j = 0 by A1, A3, ThBetaExpansionHitsZero;
end;
@ 

\subsection{Extended Integers}
We will need to define the extended integers for usage as exponents in
floating-point formats. This is in analogy to the extended reals, which
just adjoins infinities to the integers. We will follow the
formalization of extended natural numbers in the Mizar article [[COUNTERS]]
for guidance in which theorems to prove.

<<Subsection: Defining the extended integers>>=
<<Definition: Extended Integers>>

<<Theorem: $\ExtNN\properSubset\ExtZZ$ and $\ExtZZ\properSubset\ExtRR$>>

<<Register: $\ExtZZ$ is nonempty and infinite>>

<<Definition: [[ext-integer]] attribute>>

<<Register: $\pm\infty\in\ExtZZ$, $\ExtNN\subset\ExtZZ\subset\ExtRR$>>

<<Register: zero and nonzero extended integers, applicability of [[ext-integer]] to elements of $\ExtNN$, $\ExtZZ$>>

<<Define: [[ExtInt]] type>>

<<Register: sethood for [[ExtInt]]>>

<<Theorem: $\forall x, x\in\ExtZZ\iff x\in\ZZ\lor x=-\infty\lor x=+\infty$>>

<<Register: 0 is an extended integer, as are integers>>

<<Register: ``natural'' numbers are ``extended integer'' numbers>>

<<Register: positive, negative, non-negative, non-positive are adjectives for extended integers>>

<<Register: negating an extended integer is an extended integer>>

<<Register: Addition, multiplication, maximum, and minimum of extended integers are extended integers.>>

<<Register: subtracting extended integers yields an extended integer>>

<<Register: non-negative extended integers are extended naturals>>

<<Theorem: positive extended integers are either positive integers or $+\infty$>>

<<Theorem: negative extended integers are either negative integers or $-\infty$>>
@ 

\begin{definition}
We define the \define{Extended Integers} to be the subset $\ExtZZ$ of
the extended reals $\ExtRR$ such that $\ExtZZ=\ZZ\cup\{\pm\infty\}$.
\end{definition}

\begin{proof}[Proof (well-definedness)]
Mizar requires we prove newly defined terms are well-defined. For terms
defined using [[equals]], this amounts to showing the type for the
explicitly given term is correct.
We need to prove that this term we construct \emph{really is} a subset
of $\ExtRR$, which boils down to showing $\{\pm\infty\}\subset\ExtRR$
and $\ZZ\subset\ExtRR$, then their union is precisely a subset of $\ExtRR$.
\end{proof}

<<Definition: Extended Integers>>=
definition
  func ExtINT -> Subset of ExtREAL equals
  INT \/ {-infty,+infty};
  coherence
  proof
    INT c= REAL & REAL c= ExtREAL by XBOOLE_0:def 8, NUMBERS:5,31; then
    A1: INT c= ExtREAL by XBOOLE_1:1;
    {-infty,+infty} c= ExtREAL by XBOOLE_1:7, XXREAL_0:def 4;
    hence thesis by A1, XBOOLE_1:8;
  end;
end;
@ %def ExtINT

\begin{voc}
We will tell Mizar to add [[ExtINT]] as a new constant for its lexer to
recognize.
\end{voc}

<<DICT/float-1.voc>>=
OExtINT
@ 

\begin{theorem}
We see that $\ZZ\properSubset\ExtZZ$, $\ExtNN\properSubset\ExtZZ$, and $\ExtZZ\properSubset\ExtRR$.
\end{theorem}

\begin{proof}[Proof sketch]
We see that $+\infty\in\ExtZZ$ but $+\infty\notin\ZZ$, which proves the
first claim. Similarly, we see $-\infty\in\ExtZZ$ but
$-\infty\notin\ExtNN$, which proves the second claim. And there exists
some $x\in\RR$ such that $x\notin\ZZ$, and $x\notin\{\pm\infty\}$, which
gives us some $x\in\ExtRR$ but $x\notin\ExtZZ$ establishing the third claim.
\end{proof}

<<Theorem: $\ExtNN\properSubset\ExtZZ$ and $\ExtZZ\properSubset\ExtRR$>>=
theorem Th2:
  INT c< ExtINT & ExtNAT c< ExtINT & ExtINT c< ExtREAL
proof
  thus INT c< ExtINT
  proof
    +infty in {+infty,-infty} by TARSKI:def 2; then
    A1: +infty in ExtINT by XBOOLE_0:def 3;
    not +infty in INT;
    hence thesis by A1, XBOOLE_0:def 8, XBOOLE_1:7;
  end;
  thus ExtNAT c< ExtINT
  proof
    -1 in INT & not -1 in NAT & not -1 in {+infty} by INT_1:def 1;
    then A2: -1 in ExtINT & not -1 in ExtNAT by XBOOLE_0:def 3;
    NAT c= INT & {+infty} c= {-infty,+infty} by NUMBERS:17, ZFMISC_1:7;
    hence thesis by A2, COUNTERS:def 1, XBOOLE_1:13, XBOOLE_0:def 8;
  end;
  thus ExtINT c< ExtREAL
  proof
    not REAL c= INT by XBOOLE_0:def 10, NUMBERS:15,25;
    then consider x being object such that
    A3: x in REAL & not x in INT
    by TARSKI:def 3; 
    not x in {-infty,+infty} by A3, TARSKI:def 2;
    then x in ExtREAL & not x in ExtINT by A3, XXREAL_0:def 4, XBOOLE_0:def 3;
    hence thesis by XBOOLE_0:def 8;
  end;
end;
@ %def Th2

\begin{registration}
The set $\ExtZZ$ is nonempty and infinite.
\end{registration}

<<Register: $\ExtZZ$ is nonempty and infinite>>=
registration
  cluster ExtINT -> non empty infinite;
  coherence by Th2, FINSET_1:1, XBOOLE_0:def 8;
end;
@

\begin{definition}
Let $x$ be an object. We say $x$ is \define{ext-integer} if $x\in\ExtZZ$.
\end{definition}

<<Definition: [[ext-integer]] attribute>>=
definition
  let x be object;
  attr x is ext-integer means :Def2:
  x in ExtINT;
end;
@ %def ext-integer Def2

\begin{voc}
We will tell Mizar to add [[ext-integer]] as a new attribute for its lexer to
recognize.
\end{voc}

<<DICT/float-1.voc>>=
Vext-integer
@

\begin{registration}
We note that $\pm\infty$ is an extended-integer; extended integers are
also extended reals; and extended naturals are extended integers.
\end{registration}

<<Register: $\pm\infty\in\ExtZZ$, $\ExtNN\subset\ExtZZ\subset\ExtRR$>>=
registration
  cluster +infty -> ext-integer;
  coherence
  proof
    +infty in {+infty,-infty} by TARSKI:def 2;
    hence thesis by XBOOLE_0:def 3;
  end;
  cluster -infty -> ext-integer;
  coherence
  proof
    -infty in {+infty,-infty} by TARSKI:def 2;
    hence thesis by XBOOLE_0:def 3;
  end;
  cluster ext-integer -> ext-real for object;
  coherence;
  cluster ext-natural -> ext-integer for object;
  coherence
  proof
    let x be object;
    assume x is ext-natural;
    then x in ExtNAT by COUNTERS:def 2;
    hence thesis by Th2, TARSKI:def 3, XBOOLE_0:def 8;
  end;
end;
@

\begin{registration}
We observe there are zero and nonzero extended integers, and the
adjective ``extended-integer'' applies to elements of $\ExtNN$ as well
as $\ExtZZ$.
\end{registration}

<<Register: zero and nonzero extended integers, applicability of [[ext-integer]] to elements of $\ExtNN$, $\ExtZZ$>>=
registration
  cluster zero ext-integer for object;
  existence
  proof
    take 0;
    thus thesis;
  end;
  cluster non zero ext-integer for object;
  existence
  proof
    take 1;
    thus thesis;
  end;
  cluster ext-integer for set;
  existence
  proof
    take 0;
    thus thesis;
  end;
  cluster -> ext-integer for Element of ExtINT;
  coherence;
  cluster -> ext-integer for Element of ExtNAT;
  coherence;
end;
@

\begin{definition*}
We now define the shorthand \define{ExtInt} for an extended-integer-like
Extended real number.
\end{definition*}

Note that this is an un-numbered definition to Mizar, because it's
literally an abbreviation.

<<Define: [[ExtInt]] type>>=
definition
  mode ExtInt is ext-integer ExtReal;
end;
@ %def ExtInt

\begin{voc}
We tell Mizar about this new type [[ExtInt]].
\end{voc}

<<DICT/float-1.voc>>=
MExtInt
@

\begin{registration}
We note that the type [[ExtInt]] can be used interchangeably as
``element of Extended Integers'', and thus we instruct Mizar
accordingly. The technical jargon is that [[ExtInt]] has the ``sethood''
property (i.e., there exists a set of all [[ExtInt]]s).
\end{registration}

<<Register: sethood for [[ExtInt]]>>=
registration
  sethood of ExtInt
  proof
    take ExtINT;
    thus thesis by Def2;
  end;
end;
@

\begin{theorem}
Let $x$ be any object. Then $x\in\ExtZZ$ if and only if $x\in\ZZ$ or
$x=+\infty$ or $x=-\infty$.
\end{theorem}

<<Theorem: $\forall x, x\in\ExtZZ\iff x\in\ZZ\lor x=-\infty\lor x=+\infty$>>=
theorem Th4:
  for x being object
  holds x is ExtInt iff (x is Integer or x = -infty or x = +infty)
proof
  let x be object;
  thus x is ExtInt implies (x is Integer or x = -infty or x = +infty)
  proof
    assume A1: x is ExtInt;
    assume A2: not x is Integer & not x = -infty;
    x in INT \/ {-infty, +infty} by A1, Def2;
    then x in INT or x in {-infty, +infty} by XBOOLE_0:def 3;
    hence x = +infty by A2, TARSKI:def 2;
  end;
  thus (x is Integer or x = -infty or x = +infty) implies x is ExtInt
  proof
    assume x is Integer or x = -infty or x = +infty;
    then x in INT or x in {-infty,+infty} by INT_1:def 2, TARSKI:def 2;
    then x in INT \/ {-infty,+infty} by XBOOLE_0:def 3;
    hence x is ExtInt by Def2;
  end;
end;
@ %def Th4

\begin{registration}
We observe that zero is an extended integer, as are integers.
\end{registration}

<<Register: 0 is an extended integer, as are integers>>=
registration
  cluster zero -> ext-integer for object;
  coherence;
  cluster integer -> ext-integer for object;
  coherence by Th4;
end;
@

\begin{registration}
We note that ``natural'' numbers are ``extended integer'' numbers.
\end{registration}

<<Register: ``natural'' numbers are ``extended integer'' numbers>>=
registration
  cluster natural -> ext-integer for object;
  coherence;
end;
@ 

\begin{registration}
We can use ``positive'', ``negative'', and their negations, as
adjectives for extended integers.
\end{registration}

<<Register: positive, negative, non-negative, non-positive are adjectives for extended integers>>=
registration
  cluster positive for ExtInt;
  existence
  proof
    take 1;
    thus thesis;
  end;
  cluster non positive for ExtInt;
  existence
  proof
    take -1;
    thus thesis;
  end;
  cluster negative for ExtInt;
  existence
  proof
    take -1;
    thus thesis;
  end;
  cluster non negative for ExtInt;
  existence
  proof
    take 1;
    thus thesis;
  end;
end;
@ 

\begin{registration}
Negating an extended integer is an extended integer.
\end{registration}

<<Register: negating an extended integer is an extended integer>>=
registration
  let m be ExtInt;
  cluster - m -> ext-integer;
  coherence
  proof
    per cases by Th4;
    suppose m is Integer;
      then reconsider M=m as Integer;
      -M is Integer;
      hence thesis by XXREAL_3:def 3;
    end;
    suppose m=-infty;
      hence thesis by XXREAL_3:def 3;
    end;
    suppose m=+infty;
      hence thesis by XXREAL_3:def 3;
    end;
  end;
end;
@ 

\begin{registration}
Addition, subtraction, multiplication, maximum, and minimum of extended integers are extended integers.
\end{registration}

<<Register: Addition, multiplication, maximum, and minimum of extended integers are extended integers.>>=
registration
  let m, n be ExtInt;
  cluster min(m, n) -> ext-integer;
  coherence by XXREAL_0:def 9;
  cluster max(m, n) -> ext-integer;
  coherence by XXREAL_0:def 10;
  cluster m + n -> ext-integer;
  coherence
  <<Proof: adding extended integers yields an extended integer>>
  cluster m * n -> ext-integer;
  coherence
  <<Proof: multiplying extended integers yields an extended integer>>
end;
@

\begin{proof}[Proof sketch (adding extended integers)]
This boils down to a proof by cases, which is thoroughly
unenlightening. When adding integers together, we get an integer; when
adding infinity to an integer, we get an infinity.
\end{proof}

<<Proof: adding extended integers yields an extended integer>>=
proof
  per cases by Th4;
  suppose A1: m is Integer;
    then reconsider M=m as Integer;
    per cases by Th4;
    suppose n is Integer;
      then reconsider N=n as Integer;
      M + N is Integer;
      hence thesis by XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A1, XXREAL_3:def 2;
    end;
    suppose n=+infty;
      hence thesis by A1, XXREAL_3:def 2;
    end;
  end;
  suppose A2: m=-infty;
    per cases by Th4;
    suppose n is Integer;
      hence thesis by A2, XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A2, XXREAL_3:def 2;
    end;
    suppose n=+infty;
      hence thesis by A2;
    end;
  end;
  suppose A3: m=+infty;
    per cases by Th4;
    suppose n is Integer;
      hence thesis by A3, XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A3;
    end;
    suppose n=+infty;
      hence thesis by A3;
    end;
  end;
end;
@ 

\begin{proof}[Proof sketch (multiplying extended integers)]
This boils down to a proof by cases, which is thoroughly
unenlightening. When multiplying integers together, we get an integer; when
multiplying infinity to an integer, we get an infinity.
\end{proof}

<<Proof: multiplying extended integers yields an extended integer>>=
proof
  per cases by Th4;
  suppose m is Integer;
    then reconsider M=m as Integer;
    per cases by Th4;
    suppose n is Integer;
      then reconsider N=n as Integer;
      M * N is Integer;
      hence thesis by XXREAL_3:def 5;
    end;
    suppose B1: n=-infty;
      m is positive or m is negative or m is zero;
      hence thesis by B1, XXREAL_3:def 5;
    end;
    suppose B2: n=+infty;
      m is positive or m is negative or m is zero;
      hence thesis by B2, XXREAL_3:def 5;
    end;
  end;
  suppose A2: m=-infty;
    per cases by Th4;
    suppose n is Integer;
      n is positive or n is negative or n is zero;
      hence thesis by A2, XXREAL_3:def 5;
    end;
    suppose n=-infty;
      hence thesis by A2, XXREAL_3:def 5;
    end;
    suppose n=+infty;
      hence thesis by A2, XXREAL_3:def 5;
    end;
  end;
  suppose A3: m=+infty;
    per cases by Th4;
    suppose n is Integer;
      n is positive or n is negative or n is zero;
      hence thesis by A3, XXREAL_3:def 5;
    end;
    suppose n=-infty;
      hence thesis by A3, XXREAL_3:def 5;
    end;
    suppose n=+infty;
      hence thesis by A3;
    end;
  end;
end;
@

\begin{registration}
Subtracting extended integers yields an extended integer.
\end{registration}

<<Register: subtracting extended integers yields an extended integer>>=
registration
  let m, n be ExtInt;
  cluster m - n -> ext-integer;
  coherence
  proof
    (- n) is ext-integer & m + (- n) is ext-integer &
    m - n = m + (- n) by XXREAL_3:def 4;
    hence thesis;
  end;
end;
@ 

\begin{registration}
Non-negative extended integers are extended naturals.
\end{registration}

<<Register: non-negative extended integers are extended naturals>>=
registration
  cluster non negative -> ext-natural for ExtInt;
  coherence
  proof
    let x be ExtInt;
    assume A1: x is non negative;
    x is Integer or x = -infty or x = +infty by Th4;
    hence thesis by A1;
  end;
end;
@

\begin{theorem}
We have $x$ is a positive extended integer if and only if either $x$ is
a positive integer or $x=+\infty$.
\end{theorem}

<<Theorem: positive extended integers are either positive integers or $+\infty$>>=
theorem ThPosExtInt:
  for x being object
  holds x is positive ExtInt iff (x is positive Integer or x = +infty) by Th4;
@ %def ThPosExtInt

\begin{theorem}
We have $x$ is a negative extended integer if and only if either $x$ is
a negative integer or $x=-\infty$.
\end{theorem}

<<Theorem: negative extended integers are either negative integers or $-\infty$>>=
theorem ThNegExtInt:
  for x being object
  holds x is negative ExtInt iff (x is negative Integer or x = -infty) by Th4;
@ %def ThNegExtInt