% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-
\section{Preliminaries}

<<Preliminaries>>=
begin :: Preliminaries

<<Definition: valid radix>>

<<Cluster: existence of valid radix real number>>

<<Cluster: existence of a valid radix natural number>>

<<Registration: valid radix implies positive>>

<<Register: $x^{y}$ is positive>>

<<Theorem: $x\leq y$ and $z>1$ implies $z^{x}\leq z^{y}$>>

<<Theorem: $x,y\in\NN$ implies $x^{y}\in\NN$>>

<<Reserve: $b$ refers to a valid radix real number>>

<<Theorem: exponent for $b$-expansion of $x$ is $\lfloor\log_{b}(x)\rfloor$>>

<<Theorem: $1\leq x b^{-\lfloor\log_{b}(x)\rfloor}<b$>>

<<Theorem: existence of canonical $b$-expansion of $x$>>

<<Theorem: for each $\varepsilon>0$ there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$>>

<<Theorem: convergence and limit of $b$-expansion>>

<<Definition: $b$-expansion of $x$>>

<<Theorem: $b$-expansion of $x$ produces sequence of natural numbers not greater than $b$>>

<<Theorem: $b$-expansion vanishes after $r_{k}=0$>>

<<Theorem: $b$-expansion of $0$>>

<<Theorem: $b$-expansion of 1>>

<<Theorem: $b$-expansion of $b^{n}$>>

<<Theorem: [[digits(b |^ n,b).n=1]] and for $j<n$ [[digits(b |^ n,b).j=0]]>>

<<Definition: $\beta$-radix integer value>>

<<Redefine: [[beta_integer_value]] is [[Nat]] when [[b]] is [[Nat]]>>

<<Register: identify [[beta_integer_value(d,b)]] with [[value(d,b)]] when $b\in\NN$>>

<<Theorem: $\sum_{j=0}^{\infty}d_{j}b^{-j}$ converges to $xb^{-\lfloor\log_{b}(x)\rfloor}$>>

<<Theorem: Uniqueness of partial sums of $\beta$-expansion of $x$>>

<<Theorem: if $c_{j}$ is $b$-expansion of $x$ and $d_{j}=c_{j}b^{-j}$, then $\sum^{n}_{j=0}d_{j}\leq xb^{-\lfloor\log_{b}(x)\rfloor}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$>>

<<Theorem: $xb^{-\lfloor\log_{b}(x)\rfloor}\leq b^{-n}+\sum^{n}_{j=0}d_{j}$>>

<<Definition: $b$ [[-radix_NAT]]>>

<<Theorem: criterion for nonzero elements of $b$-radix $\NN$>>

<<Theorem: 0 is in $\beta$-radix $\NN$>>

<<Register: $b$-radix $\NN$ is nonempty>>

<<Theorem: identify $b$-radix $\NN$ with $\NN$ when $b\in\NN$ is greater than one>>

<<Theorem: $\beta$-radix $\NN$ is non-negative>>

<<Register: elements of $\beta$-radix $\NN$ are non negative>>

<<Theorem: let $n\in\NN_{b}$, if $0<n$, then $1\leq n$>>

<<Theorem: $\beta\NN_{\beta}\subset\NN_{\beta}$>>

<<Theorem: left shifting $\NN_{\beta}$>>

<<Definition: $\beta$-radix integers>>

<<Theorem: $\NN_{\beta}\subset\ZZ_{\beta}$>>

<<Theorem: $0\in\ZZ_{\beta}$>>

<<Register: $\ZZ_{\beta}$ is nonempty, and contains a zero element>>

<<Theorem: criterion for being a member of $\ZZ_{\beta}$>>

<<Theorem: if $b>1$ is a natural number, then $\ZZ_{b}=\ZZ$>>

<<Theorem: let $n\in\ZZ_{b}$; if $0\leq n$, then $n\in\NN_{b}$>>

<<Theorem: Let $n\in\ZZ_{b}$. If $0<n$, then $1\leq n$.>>

<<Theorem: $\ZZ_{\beta}$ is closed under negation>>

<<Theorem: $m\in\ZZ_{\beta}$ and $N\in\NN$, then $m\beta^{N}\in\ZZ_{\beta}$>>

<<Subsection: Defining the extended integers>>
@

\subsection{Valid radix for a non-integer base of numeration}
We will give a generalization of the positional numeral system for a
radix $\beta\in\RR$ such that $\beta>1$. Mizar formalizes positional
number systems in \texttt{[NUMERAL1]}, and we will be consistent with
the notation taken there.

Before getting ahead of ourselves, we need to formalize the notion that
a real number is a valid radix --- that is to say, that $\beta>1$.

\begin{definition}
Let $\beta\in\RR$. We define the attribute $\beta$ is a \define{Valid Radix}
if $\beta>1$.
\end{definition}

\begin{def-remark}
It might be worth exploring the idea that a non-zero non-unit (see
[[ANPROJ10:def 1]] for [[unit]]) natural number is automatically a valid
radix. Right now, I am avoiding ``forcing'' floating-point numbers to
use a valid radix so I can define the basic float formats without
complications.

At the moment, using [[unit]] might be necessary for a completely
different reason. We cannot convince Mizar of the existence of
subnormal floating-point numbers for nonzero non-unit precisions, which
would prevent us from using [[subnormal]] as an adjective.
\end{def-remark}

<<Definition: valid radix>>=
definition
  let IT be Real;
  attr IT is valid_radix means :Def1:
  IT > 1;
end;
@ %def valid_radix Def1

\begin{voc}
We need to add [[valid_radix]] as an attribute to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
Vvalid_radix
@ 

\begin{registration}
We observe that there exists a valid radix real number (which allows us
to use [[valid_radix]] as an adjective).
\end{registration}

A ``registration'' in Mizar is a theorem that instructs Mizar to
automatically process attributes for us. In this case, this is an
existence theorem, and it allows us to use [[valid_radix]] as an
adjective for the [[Real]] type --- so we can work with [[valid_radix Real]]
numbers.

\begin{proof}[Proof sketch]
We just need to prove there exists a real number $x$ such that $x$ is a
valid radix. For example, $x=2$ is such a number.
\end{proof}

<<Cluster: existence of valid radix real number>>=
registration
  cluster valid_radix for Real;
  existence
  proof
    take x=2;
    thus thesis;
  end;
end;
@

\begin{registration}
We observe that there exists a valid radix natural number.
\end{registration}

<<Cluster: existence of a valid radix natural number>>=
registration
  cluster valid_radix for Nat;
  existence
  proof
    take 2;
    thus thesis;
  end;
end;
@ 

\begin{registration}
We observe that valid radix numbers are positive.
\end{registration}

\begin{proof}[Proof sketch]
We just need to prove that for each real number $x$ such that $x$ is a
valid radix that $x$ is positive. But this follows from the definition
of ``positive'' ([[XXREAL_0:def 6]]) and the definition for a valid radix.
\end{proof}

<<Registration: valid radix implies positive>>=
registration
  cluster valid_radix -> positive for Real;
  coherence;
end;
@

\begin{registration}
Let $x$ be a positive real number, and let $y$ be a real number.
Then $x^{y}$ is positive.
\end{registration}

<<Register: $x^{y}$ is positive>>=
registration
  let x be positive Real;
  let y be Real;
  cluster x to_power y -> positive;
  coherence by POWER:34;
end;
@ 

\begin{theorem}
Let $x$, $y$, $z$ be real numbers. If $x\leq y$ and $z>1$,
then $z^{x}\leq z^{y}$.
\end{theorem}

<<Theorem: $x\leq y$ and $z>1$ implies $z^{x}\leq z^{y}$>>=
theorem Th1:
  for x,y,z being Real
  st x <= y & z > 1
  holds z to_power x <= z to_power y
proof
  let x,y,z be Real;
  assume A1: x <= y;
  assume A2: z > 1;
  x < y or x = y by A1, XXREAL_0:1;
  hence thesis by A2, POWER:39;
end;
@ %def Th1

\begin{theorem}
Let $x$, $y$ be real numbers. If $x\in\NN$ and $y\in\NN$,
then $x^{y}\in\NN$.
\end{theorem}

The implementation of $x^{y}$ when $y\in\NN$ in Mizar is denoted [[x |^ y]],
and more generally for $x,y\in\RR$ the implementation is written
[[x to_power y]].

\begin{proof}[Proof sketch]
This follows by unfolding definitions.
\end{proof}

<<Theorem: $x,y\in\NN$ implies $x^{y}\in\NN$>>=
theorem ThNatPowers:
  for x being Real
  for y being Real
  st x in NAT & y in NAT
  holds x to_power y in NAT
proof
  let x be Real;
  let y be Real;
  assume A1: x in NAT;
  assume A2: y in NAT;
  reconsider X=x, Y=y as Nat by A1,A2;
  X to_power Y = X |^ Y;
  hence x to_power y in NAT by ORDINAL1:def 12;
end;
@ %def ThNatPowers

\subsection{Non-integer base of numeration}
Now, when we consider a non-integer base of numeration $\beta>1$ for a
real number $x\in\RR$, we are considering a [possibly infinite] sequence
of finite expansions
\begin{equation}
x = d_{0}d_{1}\cdots d_{n-1}.d_{n}\cdots d_{n+m-1}\dots
\end{equation}
where the $n^{\text{th}}$ entry in the sequence is
$D_{n} = (d_{0},d_{1},\dots,d_{n-1})$. This describes the truncated expansion to
$n$ digits.

The \textsc{ieee} standard, however, works in scientific notation,
writing something like
\begin{equation}
x = d_{0}.d_{1}\cdots d_{n+m-1}\times\beta^{n-1},
\end{equation}
or as the product of an integer with $\beta^{-m}$,
\begin{equation}
x = d_{0}d_{1}\cdots d_{n+m-1}\times\beta^{-m}.
\end{equation}
How do we determine these digits $d_{j}$?

For any positive real number $x>0$, we observe there exists an
integer $N$ such that $\beta^{N}\leq x<\beta^{N+1}$. Then
\begin{equation}
d_{0}=\lfloor x/\beta^{N}\rfloor,\quad\mbox{and}\quad r_{0}=(x/\beta^{N})-d_{0},
\end{equation}
and inductively, for any natural number $j$,
\begin{equation}
d_{j+1}=\lfloor\beta r_{j}\rfloor,\quad\mbox{and}\quad r_{j+1}=(\beta r_{j})-d_{j+1}.
\end{equation}
This produces a canonical sequence of digits which is precisely the
$\beta$-expansion of $x$:
\begin{equation}
x = \sum^{\infty}_{j=0}d_{j}\beta^{N-j}.
\end{equation}
We need to construct the sequence $\{D_{n}\}_{n\in\NN_{0}}$ consisting
of the finite sequences $D_{n}=(d_{0},\dots,d_{n})$ so we might use it
in determining the floating-point number corresponding to $x$ in base
$\beta$.

Mizar implements $x^{y}$ for any $x,y\in\RR$ as ``[[x to_power y]]'' in
Definition [[POWER:def 2]]. For our interests, we will be considering
$\beta^{n}$ for $n\in\ZZ$, which is implemented as ``[[beta #Z n]]''
as defined in Definition [[PREPOWER:def 3]].

\begin{reserve}
We will use $b$ to refer to any valid radix real number.
\end{reserve}

<<Reserve: $b$ refers to a valid radix real number>>=
reserve b for valid_radix Real;
@

\begin{theorem}
Let $x\in\RR$ be positive, let $N\in\ZZ$.
Then $b^{N}\leq x<b^{N+1}$ if and only if $N=\lfloor\log_{b}(x)\rfloor$.
\end{theorem}

\begin{proof}[Proof sketch]
As this is an ``iff'' proof, we will need to provide two proofs (one for
each direction).

The forward direction is straightforward.
We will prove that $N\leq\log_{b}(x)$ and $\log_{b}(x)<N+1$, which
implies the result by definition of $\lfloor-\rfloor$.

The backwards direction
\end{proof}

<<Theorem: exponent for $b$-expansion of $x$ is $\lfloor\log_{b}(x)\rfloor$>>=
theorem Th1b:
  for x being positive Real
  for N being Integer
  holds (b to_power N <= x & x < b to_power (N + 1))
  iff N = [\ log(b, x) /]
proof
  let x be positive Real;
  let N be Integer;
  thus (b to_power N <= x & x < b to_power (N + 1)) implies N = [\ log(b, x) /]
  proof
    assume A1: b to_power N <= x;
    assume A2: x < b to_power (N + 1);
    A3: b <> 1 & b > 1 by Def1;
    
    A4: N <= log(b, x)
    <<Subproof: $N\leq\log_{b}(x)$>>
    log(b,x) < N + 1
    <<Subproof: $\log_{b}(x)<N+1$>>
    then log(b,x) - 1 < (N + 1) - 1 by XREAL_1:14;
    hence thesis by A4, INT_1:def 6;
  end;
  thus N = [\ log(b, x) /] implies (b to_power N <= x & x < b to_power (N + 1))
  <<Subproof: $N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$>>
end;
@ %def Th1b

\begin{proof}[Subproof ($N\leq\log_{b}(x)$)]
We can consider two cases from the assumption $b^{N}\leq x$: either
$b^{N} = x$ or $b^{N}<x$. In the first case, we find $b^{N}=x$ implies
$N=\log_{b}(x)$ by the definition of the logarithm. In the second case,
when $b^{N}<x$, since $b^{N}>0$, we find $N=\log_{b}(b^{N})$ by the law
of logarithms, and then we obtain the result since Theorem [[POWER:57]]
proves $\alpha>1$ and $\beta>0$ and $\gamma>\beta$ implies
$\log_{\alpha}(\gamma) > \log_{\alpha}(\beta)$.
\end{proof}

<<Subproof: $N\leq\log_{b}(x)$>>=
proof
  b to_power N = x or b to_power N < x by A1, XXREAL_0:1;
  then per cases;
  suppose b to_power N = x;
    hence thesis by A3, POWER:def 3;
  end;
  suppose A5: b to_power N < x;
    N = log(b, b to_power N) by A3, POWER:def 3;
    hence thesis by A3, A5, POWER:57;
  end;
end;
@ 

\begin{proof}[Subproof ($\log_{b}(x)<N+1$)]
We see that $b>1$, $x>0$, and $x<b^{N+1}$ implies $\log_{b}(x)<N+1$
thanks to Theorem [[POWER:57]].
\end{proof}

<<Subproof: $\log_{b}(x)<N+1$>>=
proof
  N + 1 = log(b, b to_power (N + 1)) by A3, POWER:def 3;
  hence log(b,x) < (N+1) by A2, A3, POWER:57;
end;
@ 

\begin{proof}[Subproof ($N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$)]
Assuming $N=\lfloor\log_{b}(x)\rfloor$, we can see that
$N\leq\lfloor\log_{b}(x)\rfloor<N+1$. Then it's straightforward using
the properties of exponentiation to see the result.
\end{proof}

<<Subproof: $N\lfloor\log_{b}(x)\rfloor$ implies $b^{N}\leq x<b^{N+1}$>>=
proof
  assume N = [\ log(b, x) /];
  then N <= log(b, x) & log(b,x) - 1 < N by INT_1:def 6;
  then N <= log(b, x) & log(b,x) - 1 + 1 < N + 1 by XREAL_1:8;
  then A1: N <= log(b, x) & log(b, x) < N + 1;
  A2: b to_power N <= b to_power (log(b,x))
    & b to_power (log(b,x)) < b to_power (N + 1)
  proof
    B1: b > 1 by Def1;
    thus b to_power N <= b to_power (log(b,x))
    proof
      per cases by A1, XXREAL_0:1;
      suppose N = log(b, x);
        hence thesis;
      end;
      suppose N < log(b, x);
        hence thesis by B1, POWER:39;
      end;
    end;
    thus b to_power (log(b,x)) < b to_power (N + 1) by A1, B1, POWER:39;
  end;
  b > 0 & b <> 1 by Def1;
  hence (b to_power N <= x & x < b to_power (N + 1)) by A2, POWER:def 3;
end;
@ 

\begin{theorem}
Let $x\in\RR$ be positive. Let $N=\lfloor\log_{b}(x)\rfloor$.
Then $1\leq x b^{-N}<b$.
\end{theorem}

\begin{proof}[Proof sketch]
Using the previous theorem, we see that $b^{N}\leq x<b^{N+1}$,
so multiplying through by $b^{-N}$ yields the results (using a few
identities involving powers).
\end{proof}

<<Theorem: $1\leq x b^{-\lfloor\log_{b}(x)\rfloor}<b$>>=
theorem Th2:
  for x being positive Real
  holds 1 <= x * (b to_power (-[\ log(b, x) /]))
           & x * (b to_power (-[\ log(b, x) /])) < b
proof
  let x be positive Real;
  set N = [\ log(b, x) /];
  A1: (b to_power N) * (b to_power (- N))
     = b to_power (N + (- N)) by POWER:27
    .= 1 by POWER:24;

  hence 1 <= x * (b to_power (- N)) by Th1b, XREAL_1:64;

  b to_power (N + 1) = (b to_power 1) * (b to_power N) by POWER:27
                    .= b * (b to_power N);
  then (b to_power (N + 1)) * (b to_power (- N))
   = b * ((b to_power N) * (b to_power (- N)))
  .= b by A1;
  hence x * (b to_power (- N)) < b by Th1b, XREAL_1:68;
end;
@ %def Th2

\begin{theorem}
Let $x\in\RR$ be a real number, let $b$ be a valid radix real number.
There exists two sequences of real numbers $\{d_{j}\}_{j=0}$ and $\{r_{j}\}_{j=0}$
such that $d_{0}=\lfloor x/b^{\lfloor\log_{b}(x)\rfloor}\rfloor$
and $r_{0}=(x/b^{\lfloor\log_{b}(x)\rfloor})-d_{0}$, and for each $j\in\NN$
we have $d_{j+1}=\lfloor br_{j}\rfloor$ and $r_{j+1}=\beta r_{j}-\lfloor br_{j}\rfloor$.
\end{theorem}

<<Theorem: existence of canonical $b$-expansion of $x$>>=
theorem ThBetaExpansionExistence:
  for x being Real
  ex d, r being Real_Sequence
  st d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
proof
  let x be Real;
  <<Proof step: construct $r_{j}$>>
  <<Proof step: construct $d_{j}$>>

  take d, r;
  <<Proof step: conclude $d_{j}$ and $r_{j}$ satisfy the desired properties>>
end;
@ %def ThBetaExpansionExistence

\begin{proof}[Proof step (construct $r_{j}$)]
We observe that $r_{0} = xb^{-\lfloor\log_{b}(x)\rfloor} - \lfloor xb^{-\lfloor\log_{b}(x)\rfloor}\rfloor$
is a real number, and we can write $r_{n+1}$ in terms of $r_{n}$ using
the ``scheme'' [theorem parametrized by terms and/or predicates] from
the article formalizing sequences. This is because
$r_{n+1}=br_{n}-\lfloor br_{n}\rfloor=\mathcal{R}[r_{n}]$ generates the
rest of the sequence.
\end{proof}

<<Proof step: construct $r_{j}$>>=
reconsider d0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
as Element of REAL by XREAL_0:def 1;
reconsider r0 = x*(b to_power (-[\ log(b,x) /])) - d0
as Element of REAL by XREAL_0:def 1;
deffunc R0() = r0;
deffunc Rrec(Nat, Real) = In(b*$2 - [\ b*$2 /], REAL);

consider r being sequence of REAL such that
A1: r.0 = R0() & for n being Nat holds r.(n + 1) = Rrec(n, r.n)
from NAT_1:sch 12;
reconsider r as Real_Sequence;
@

\begin{proof}[Proof step (construct $d_{j}$)]
We have constructed $r_{j}$ as a real sequence, now we can construct
$d_{j}$ using the exact same strategy. However, $\lfloor br_{n}\rfloor$
is not automatically interpreted as a real number, so we need to tell
Mizar that \emph{it really is real}. This is handled by writing
[[In(..., REAL)]] to cast it as an element of $\RR$.
\end{proof}

<<Proof step: construct $d_{j}$>>=
deffunc D0() = d0;
deffunc Drec(Nat, Real) = In([\ b*(r.$1) /], REAL);
consider d being sequence of REAL such that
A2: d.0 = D0() & for n being Nat holds d.(n + 1) = Drec(n, d.n)
from NAT_1:sch 12;
@

\begin{proof}[Proof step (conclude $d_{j}$ and $r_{j}$ satisfy the desired properties)]
This amounts to looking at the construction of $r_{j}$ and $d_{j}$ and
saying, ``Look, they really do satisfy the desired properties''.
\end{proof}

<<Proof step: conclude $d_{j}$ and $r_{j}$ satisfy the desired properties>>=
thus d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /] by A2;
thus r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
by A1;
thus for j being Nat
holds d.(j+1) = [\ b*(r.j) /]
& r.(j+1) = b*(r.j) - [\ b*(r.j) /]
proof
  let j be Nat;
  thus d.(j + 1) = In([\ b*(r.j) /], REAL) by A2
                .= [\ b*(r.j) /];
  thus r.(j + 1) = Rrec(j, r.j) by A1
                .= b*(r.j) - [\ b*(r.j) /];
end;
@ 

\begin{theorem}
For each $\varepsilon>0$, there exists a $N\in\NN$ such that $b^{-N}<\varepsilon$.
\end{theorem}

This is necessary for proving the beta-expansion of a number converges.

\begin{proof}[Proof sketch]
There are two possible cases:
\begin{enumerate}
\item $\varepsilon\geq1$: We have $b^{-1}<1$. Hence $b^{-N}<1<\varepsilon$.
\item $0<\varepsilon<1$: We see $\log_{b}(\varepsilon)<0$, so
  $-\log_{b}(\varepsilon)>0$. Taking $N=1+\lceil-\log_{b}(\varepsilon)\rceil$
  yields $N>-\log_{b}(\varepsilon)$, so $-N<\log_{b}(\varepsilon)$ and
  in particular $b^{-N}<\varepsilon$ by the law of logarithms.
\end{enumerate}
Thus concludes the proof.
\end{proof}

<<Theorem: for each $\varepsilon>0$ there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$>>=
theorem ThExistenceOfN:
  for epsilon being Real
  st epsilon > 0
  ex N being Nat
  st b to_power -N < epsilon
proof
  let epsilon be Real;
  assume A1: epsilon > 0;
  per cases;
  suppose A2: epsilon >= 1;
    take N=1;
    -1 < 0 & b > 1 by Def1;
    then b to_power -N < b to_power 0 by POWER:39;
    then b to_power -N < 1 by POWER:24;
    hence thesis by A2, XXREAL_0:2;
  end;
  suppose A3: epsilon < 1;
    A4: 0 < -log(b, epsilon)
    proof
      B1: 0 < epsilon & epsilon < 1 & b > 1 by A1, A3, Def1;
      then log(b,1) > log(b,epsilon) by POWER:57;
      then 0 > log(b, epsilon) by B1, POWER:51;
      hence thesis;
    end;
    consider r being Real such that
    A5: r > -log(b, epsilon)
    by XREAL_1:1;
    [/r\]+1 in NAT
    proof
      [/r\] >= 0 by A4, A5, INT_1:def 7;
      hence [/r\]+1 in NAT by INT_1:3;
    end;
    then reconsider N = [/r\]+1 as Nat;
    take N;
    A6: b > 1 by Def1; then
    A7: b to_power (log(b,epsilon)) = epsilon by A1, POWER:def 3;
    [/r\] >= r by INT_1:def 7;
    then [/r\] > -log(b,epsilon) by A5, XXREAL_0:2;
    then [/r\] + 1 > -log(b,epsilon) by XREAL_1:145;
    then -N < -(-log(b,epsilon)) by XREAL_1:24;
    hence b to_power -N < epsilon by A6,A7,POWER:39;
  end;
end;
@ %def ThExistenceOfN

\begin{theorem}
Let $x$ be a real number.
Using the sequence $d_{j}$, $r_{j}$ from the previous theorem,
we see the series
\[\sum^{\infty}_{n=0}d_{n}b^{-n}\]
converges to $x/b^{\lfloor\log_{b}(x)\rfloor}$.
\end{theorem}

\begin{proof}[Proof outline]
The proof is not hard, just tedious. The heart of the proof is the
recognition that:
\begin{itemize}
\item[$(A_{6})$] $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$ by
induction;
\item[$(A_{7})$] for $k\in\NN$ we have $0<r_{k}<1$ since $r_{0}$ is the
  fractional part of $x/b^{\lfloor\log_{b}(x)\rfloor}$ and $r_{k+1}$ is the fractional
  part of $br_{k}$;
\item[$(A_{8})$] the sequence of partial sums $s_{m}$ converges to $x/b^{\lfloor\log_{b}(x)\rfloor}$.
\end{itemize}
Everything else is just straightforward.
\end{proof}

<<Theorem: convergence and limit of $b$-expansion>>=
theorem ThBetaExpansionLimit:
  for x being Real
  for d, r being Real_Sequence
  st d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & (for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /])
  ex s being Real_Sequence
  st s.0 = d.0
  & (for j being Nat holds s.(j + 1) = (s.j) + ((d.(j + 1)) * (b to_power (-j-1))))
  & s is convergent
  & lim s = x * (b to_power (-[\ log(b, x) /]))
proof
  let x be Real;
  let d, r be Real_Sequence;
  assume A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /];
  assume A2: r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/];
  assume A3: for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /];

  reconsider d0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  as Element of REAL by XREAL_0:def 1;
  reconsider r0 = x*(b to_power (-[\ log(b,x) /])) - d0
  as Element of REAL by XREAL_0:def 1;
  deffunc S0() = d.0;
  deffunc Srec(Nat, Real) = In($2 + ((d.($1 + 1)) * (b to_power (-$1 - 1))),
  REAL);

  consider s being sequence of REAL such that
  A4: s.0 = S0() & for n being Nat holds s.(n + 1) = Srec(n, s.n)
  from NAT_1:sch 12;
  reconsider s as Real_Sequence;

  take s;
  thus s.0 = d.0 by A4;
  thus for j being Nat
  holds s.(j + 1) = (s.j) + ((d.(j + 1)) * (b to_power (-j-1)))
  proof
    let j be Nat;
    thus s.(j + 1) = In((s.j) + ((d.(j + 1)) * (b to_power (-j-1))), REAL) by A4
                  .= (s.j) + ((d.(j + 1)) * (b to_power (-j-1)));
  end;

  A5: for k being Nat
  holds d.(k + 1) + r.(k + 1) = b * (r.k) 
  proof
    let k be Nat;
    thus d.(k + 1) + r.(k + 1) = [\ b*(r.k) /] + r.(k + 1) by A3
                              .= [\ b*(r.k) /] + (b*(r.k)-[\ b*(r.k) /]) by A3
                              .= b * (r.k);
  end;

  A6: for n being Nat
  holds s.n + (r.n) * (b to_power -n) = x * (b to_power (-[\ log(b, x) /]))
  <<Proof: $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$>>

  A7: for k being Nat
  holds 0 <= r.k & r.k < 1
  <<Proof: for $k\in\NN$ we have $0<r_{k}<1$>>

  A8: for epsilon being Real st 0 < epsilon
  ex N being Nat st
  for m being Nat st N <= m
  holds |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < epsilon
  <<Proof: $\forall\varepsilon>0,\exists N\in\NN,\forall m\in\NN,m\geq N\implies|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<\varepsilon$>>

  hence s is convergent by SEQ_2:def 6;
  hence lim s = x * (b to_power (-[\ log(b, x) /])) by A8, SEQ_2:def 7;
end;
@ %def ThBetaExpansionExistence

\begin{proof}[Proof sketch ($s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$)]
  This is a proof by induction.

  The base case ($n=0$):
  $s_{0}+r_{0}b^{-0}=xb^{-\lfloor\log_{b}(x)\rfloor}$
  by definition of the sequences $r_{0}$, $d_{0}$, and $s_{0}$.

  The inductive case ($n\to n+1$): assume this is true for arbitrary $n$.
  Then we see that $d_{n+1}+r_{n+1}=br_{n}$, and
  $s_{n+1}+r_{n+1}b^{-(n+1)}=s_{n}+b^{-(n+1)}(d_{n+1}+r_{n+1})=s_{n}+b^{-n}r_{n}$
  which is precisely the inductive hypothesis.
\end{proof}

<<Proof: $s_{n}+r_{n}b^{-n}=xb^{-\lfloor\log_{b}(x)\rfloor}$>>=
proof
  defpred P[Nat] means
  s.$1 + (r.$1) * (b to_power (- $1)) = x * (b to_power (-[\ log(b, x) /]));

  s.0 + (r.0) * (b to_power (- 0))
  = s.0 + (r.0) * 1 by POWER:24
  .= x * (b to_power (-[\ log(b, x) /])) by A1,A2,A4;
  then B1: P[0];

  B2: for k being Nat st P[k] holds P[k + 1]
  proof
    let k be Nat;
    assume B3: P[k];
      
    s.(k + 1) = In(s.k + (d.(k + 1)) * (b to_power (-k - 1)),REAL) by A4; then
    s.(k + 1) + (r.(k + 1)) * (b to_power (- (k + 1)))
    = s.k + (d.(k + 1) + r.(k + 1)) * (b to_power (-k - 1))
    .= s.k + (b * (r.k)) * (b to_power (-k - 1)) by A5
    .= s.k + (r.k) * ((b to_power 1) * (b to_power (-k - 1)))
    .= s.k + (r.k) * (b to_power (-k - 1 + 1)) by POWER:27
    .= s.k + (r.k) * (b to_power -k);
    hence P[k + 1] by B3;
  end;
  
  thus for k being Nat holds P[k] from NAT_1:sch 2(B1, B2);
end;
@ 

\begin{proof}[Proof sketch ($0<r_{k}<1$)]
We see when $k=0$ that $r_{0}$ is the fractional part of
$xb^{-\lfloor\log_{b}(x)\rfloor}$, which is between zero and one.
For $k>0$, we see that $r_{k}$ is the fractional part of $br_{k-1}$
which is between zero and one.
\end{proof}

<<Proof: for $k\in\NN$ we have $0<r_{k}<1$>>=
proof
  let k be Nat;
  per cases;
  suppose k=0;
    then r.k = frac (x * (b to_power (-[\ log(b, x) /]))) by A2, INT_1:def 8;
    hence thesis by INT_1:43;
  end;
  suppose k > 0;
    then k >= 0 + 1 by INT_1:7;
    then consider j being Nat such that
    B1: k = 1 + j by NAT_1:10;
    r.k = b*(r.j) - [\ b*(r.j) /] by A3,B1
       .= frac (b*(r.j)) by INT_1:def 8;
    hence thesis by INT_1:43;
  end;
end;
@ 

\begin{proof}[Proof sketch (Convergence of $s_{m}$)]
We see that there exists an $N\in\NN$ such that $b^{-N}<\varepsilon$.
We see that $s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}=-r_{m}b^{-m}$ and $0<r_{m}<1$,
so $|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<b^{-m}$. Then by
transitivity of inequalities, the result follows.
\end{proof}

<<Proof: $\forall\varepsilon>0,\exists N\in\NN,\forall m\in\NN,m\geq N\implies|s_{m}-xb^{-\lfloor\log_{b}(x)\rfloor}|<\varepsilon$>>=
proof
  let epsilon be Real;
  assume B1: 0 < epsilon;
  then consider N being Nat such that
  B2: b to_power -N < epsilon by ThExistenceOfN;
  take N;
  let m be Nat;
  assume B3: N <= m;
  
  B4: |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < (b to_power -m)
  proof
    s.m + (r.m)*(b to_power -m) - x * (b to_power (-[\ log(b, x) /]))
    = x*(b to_power (-[\log(b, x)/])) - x*(b to_power (-[\log(b,x)/])) by A6
    .= 0;
    then B5: s.m - x * (b to_power (-[\ log(b, x) /]))
    = - (r.m)*(b to_power -m);
    r.m >= 0 & (b to_power -m) >= 0 by A7; then
    ((r.m)*(b to_power -m)) = |.((r.m)*(b to_power -m)).| by COMPLEX1:43
    .= |.-(r.m) * (b to_power -m).|
    by COMPLEX1:52;
    then B6: |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| = (r.m)*(b to_power -m)
    by B5;
    0 < (b to_power -m) & r.m < 1 by A7;
    then (r.m)*(b to_power -m) < 1*(b to_power -m) by XREAL_1:68;
    hence |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < (b to_power -m)
    by B6;
  end;
  -m <= -N & b > 1 by B3,Def1,XREAL_1:24;
  then b to_power -m <= b to_power -N by Th1;
  then b to_power -m < epsilon by B2, XXREAL_0:2;
  hence |.((s.m) - x * (b to_power (-[\ log(b, x) /]))).| < epsilon
  by B4,XXREAL_0:2;
end;
@ 

\begin{definition}
Let $b>1$ be real, let $x$ be a real number.
We define the \define{$b$-Expansion of $x$} to be the sequence $d_{j}$
satisfying: there exists a sequence $r_{j}$ such that
$d_{0}=\lfloor x/b^{\lfloor\log_{b}(x)\rfloor}\rfloor$ and $r_{0}=xb^{\lfloor\log_{b}(x)\rfloor}-d_{0}$,
and for all $j\in\NN$ we have $d_{j+1}=\lfloor br_{j}\rfloor$ and $r_{j+1}=br_{j}-d_{j+1}$.
\end{definition}

Since we're defining a new logical term [``functor'' in Mizar's
  parlance\footnote{This is a term borrowed from Polish logicians before
  category theory became a field.}], we need to prove it is
well-defined. This requires proving its existence and
uniqueness. Luckily, we have already proven existence, we just need to
prove uniqueness.

<<Definition: $b$-expansion of $x$>>=
:: Digits in base b for x*(b to_power (-[\log(b,x)/])), which is x in
:: scientific notation
definition
  let b;
  let x be Real;
  func b-expansion x -> Real_Sequence means :Def2b:
  ex r being Real_Sequence
  st it.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds it.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /];
  existence by ThBetaExpansionExistence;
  uniqueness
  <<Proof: uniqueness of $b$-expansion of $x$>>
end;
@ %def -expansion Def2b

\begin{proof}[Proof sketch (uniqueness of $b$-expansion)]
Let $d^{(1)}$, $d^{(2)}$ be two possible $b$-expansions of $x$.
We prove by complete induction that for any natural number $k$ if
for all $n<k$ we have $d^{(1)}_{n}=d^{(2)}_{n}$, then $d^{(1)}_{k}=d^{(2)}_{k}$.
This implies the two possible candidates for the definition are the same
term. 
\end{proof}

<<Proof: uniqueness of $b$-expansion of $x$>>=
proof
  let d1 be Real_Sequence;
  let d2 be Real_Sequence;
  assume ex r1 being Real_Sequence
  st d1.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r1.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d1.(j+1) = [\ b*(r1.j) /]
  & r1.(j+1) = b*(r1.j) - [\ b*(r1.j) /];
  then consider r1 being Real_Sequence such that
  A1: d1.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r1.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d1.(j+1) = [\ b*(r1.j) /]
  & r1.(j+1) = b*(r1.j) - [\ b*(r1.j) /];
  
  assume ex r2 being Real_Sequence
  st d2.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r2.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d2.(j+1) = [\ b*(r2.j) /]
  & r2.(j+1) = b*(r2.j) - [\ b*(r2.j) /];
  then consider r2 being Real_Sequence such that
  A2: d2.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r2.0 = (x*(b to_power (-[\log(b, x)/]))) - [\(x*(b to_power (-[\log(b, x)/])))/]
  & for j being Nat
  holds d2.(j+1) = [\ b*(r2.j) /]
  & r2.(j+1) = b*(r2.j) - [\ b*(r2.j) /];
  
  defpred P[Nat] means d1.$1 = d2.$1 & r1.$1 = r2.$1;
  
  A3: for k being Nat st (for n being Nat st n < k holds P[n]) holds P[k]
  proof
    let k be Nat;
    assume A4: for n being Nat st n < k holds P[n];
    per cases;
    suppose k = 0;
      hence P[k] by A1,A2;
    end;
    suppose k > 0;
      then consider j being Nat such that
      A5: k = j+1 by NAT_1:6;
      j < k by A5, XREAL_1:145;
      then A6: b*(r1.j) = b*(r2.j) by A4;
      then A7: d1.(j+1) = [\b*(r2.j)/] by A1
                       .= d2.k by A2, A5;
      r1.k = b*(r2.j) - [\ b*(r2.j) /] by A1, A5, A6
          .= r2.k by A2, A5;
      hence P[k] by A5, A7;
    end;
  end;
  for k being Nat holds P[k] from NAT_1:sch 4(A3);
  then for k being Element of NAT holds d1.k = d2.k;
  hence d1 = d2 by FUNCT_2:def 8;
end;
@ 

\begin{voc}
We need to add [[-expansion]] as a term to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
O-expansion
@

\begin{theorem}
Let $x$ be a \emph{positive} real number.
The $b$-expansion of $x$ produces a sequence of digits $\{d_{j}\}$ such
that for each $n\in\NN$ we have $0\leq d_{n}<b$ and $d_{n}\in\NN$.
\end{theorem}

Note that since IEEE floating-point specifically works with non-negative
mantissas, this theorem describes how we produce the digits for the
non-zero floating-point mantissas.

\begin{proof}[Proof sketch]
The key insight is that for each $j\in\NN$ we see that $0\leq r_{j}<1$,
so $0\leq br_{j}<b$ which immediately gives the result for $d_{j+1}$.
The remaining case $d_{0}$ follows immediately by definition.
\end{proof}

<<Theorem: $b$-expansion of $x$ produces sequence of natural numbers not greater than $b$>>=
theorem Th8:
  for x being positive Real
  for n being Nat
  holds 0 <= (b-expansion x).n & (b-expansion x).n < b
  & (b-expansion x).n in NAT
proof
  let x be positive Real;
  let n be Nat;
  set d = b-expansion x;
  consider r being Real_Sequence such that
  A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
  by Def2b;
  
  A2: for j being Nat holds 0 <= r.j & r.j < 1
  proof
    let j be Nat;
    per cases;
    suppose j = 0;
      then r.j = frac (x * (b to_power (-[\ log(b, x) /]))) by A1, INT_1:def 8;
      hence thesis by INT_1:43;
    end;
    suppose j > 0;
      then consider k being Nat such that
      B1: j = k + 1 by NAT_1:6;
      r.j = b*(r.k) - [\ b*(r.k) /] by A1, B1
         .= frac (b * (r.k)) by INT_1:def 8;
      hence thesis by INT_1:43;
    end;
  end;
  
  thus 0 <= (b-expansion x).n & (b-expansion x).n < b & (b-expansion x).n in NAT
  proof
    per cases;
    suppose A3: n = 0;
      [\x * (b to_power (-[\ log(b, x) /]))/] <= x * (b to_power (-[\ log(b, x) /]))
      & x * (b to_power (-[\ log(b, x) /])) < b by Th2, INT_1:def 6;
      hence thesis by A1, A3, INT_1:3,54, XXREAL_0:2;
    end;
    suppose n > 0;
      then consider j being Nat such that
      A4: n = j+1 by NAT_1:6;
      b > 1 & 0 <= r.j & r.j < 1 by A2,Def1; then
      A5: 0 <= b*(r.j) & b*(r.j) < b*1 by XREAL_1:68;
      d.(j + 1) = [\b*(r.j)/] by A1;
      then C1: 0 <= d.(j + 1) by A5, INT_1:54;
      [\b*(r.j)/] <= b*(r.j) & b*(r.j) < b by A5, INT_1:def 6;
      then d.(j + 1) <= b*(r.j) & b*(r.j) < b by A1;
      then C2: d.n < b by A4, XXREAL_0:2;
      d.n = [\b*(r.j)/] by A1,A4;
      hence thesis by A4, C1, C2, INT_1:3;
    end;
  end;
end;
@ %def Th8

\begin{theorem}
If during the $b$-expansion of $x$ we have the residual sequence
eventually hit zero --- i.e., there is some $k\in\NN$ [$k$ for
  ``kritical''] such that $r_{k}=0$ --- then for all $n>k$ we see the
digits of the $b$-expansion vanish $d_{n}=0$.
\end{theorem}

\begin{proof}[Proof sketch]
The key insight is that once $r_{k}=0$, then for all $j\in\NN$ we see
$r_{k+j}=0$. This forces $d_{k+j+1}=0$ for all $j\in\NN$.
\end{proof}

<<Theorem: $b$-expansion vanishes after $r_{k}=0$>>=
theorem ThBetaExpansionHitsZero:
  for x being Real
  for r being Real_Sequence st
  ((b-expansion x).0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds (b-expansion x).(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /])
  for j being Nat st r.j = 0
  for k being Nat st k > j
  holds (b-expansion x).k = 0
proof
  let x be Real;
  let r be Real_Sequence;
  assume A1: (b-expansion x).0 = [\ x * (b to_power (-[\ log(b, x) /])) /];
  assume A2: r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/];
  assume A3: for j being Nat
  holds (b-expansion x).(j+1) = [\ b*(r.j) /]
      & r.(j+1) = b*(r.j) - [\ b*(r.j) /];
  let j be Nat;
  assume A4: r.j = 0;

  defpred P[Nat] means r.(j + $1) = 0;
  A5: for n being Nat st (for m being Nat st m < n holds P[m])
  holds P[n]
  <<Proof: if every $m<n$ has $r_{j+m}=0$, then $r_{j+n}=0$>>

  for n being Nat holds P[n] from NAT_1:sch 4(A5);
  then A6: for n being Nat holds r.(j + n) = 0;
  
  let k be Nat;
  assume k > j;
  then k >= j + 1 by INT_1:7;
  then consider ell being Nat such that
  A7: k = j + 1 + ell by NAT_1:10;
  A8: r.(j + ell) = 0 by A6;
  thus (b-expansion x).k = (b-expansion x).(j + ell + 1) by A7
                        .= [\ b*0 /] by A3, A8
                        .= 0;
end;
@ %def ThBetaExpansionHitsZero

\begin{proof}[Proof sketch ($\forall m<n, r_{j+m}=0\implies r_{j+n}=0$)]
We do this by cases. When $n=0$, the result is immediate.
When $n>0$, we can write $n=m'+1$, and then by the inductive hypothesis
$r_{m'}=0$. This means $br_{m'}=0$ and so its fractional part vanishes,
which means $r_{n}=0$.
\end{proof}

<<Proof: if every $m<n$ has $r_{j+m}=0$, then $r_{j+n}=0$>>=
proof
  let n be Nat;
  assume B1: for m being Nat st m < n holds P[m];
  per cases;
  suppose n = 0;
    hence P[n] by A4;
  end;
  suppose n > 0;
    then consider m being Nat such that
    B2: n = m+1 by NAT_1:6;
    m < m + 1 by XREAL_1:145;
    then m < n by B2;
    then P[m] by B1;
    then B3: r.(j + m) = 0;
    r.(j + n) = r.((j + m) + 1) by B2
             .= b*(r.(j + m)) - [\ b*(r.(j + m)) /] by A3
             .= 0 by B3;
    hence P[n];
  end;
end;
@ 

\begin{corollary}
The $b$-expansion of $0$ is just the zero sequence.
\end{corollary}

\begin{proof}[Proof sketch]
We see that $d_{0}=0$ and $r_{0}=0$. But by the previous theorem, this
means that $r_{j}=0$ for all $j$. This forces $d_{j+1}=0$ for all
$j\in\NN$. Taken together, this forces every digit in the $b$-expansion
of zero to vanish.
\end{proof}

<<Theorem: $b$-expansion of $0$>>=
theorem ThBetaExpansionOfZero:
  for x being zero Real
  for n being Nat
  holds 0 = (b-expansion x).n
proof
  let x be zero Real;
  let n be Nat;
  set d = b-expansion x;
  consider r being Real_Sequence such that
  A1: d.0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  & for j being Nat
  holds d.(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /] by Def2b;

  per cases;
  suppose n = 0;
    hence (b-expansion x).n = 0 by A1;
  end;
  suppose n > 0;
    hence thesis by A1, ThBetaExpansionHitsZero;
  end;
end;
@ %def ThBetaExpansionOfZero

\begin{corollary}
The $b$-expansion of $1$ is $d_{0}=1$ and $d_{j}=0$ for all $j>0$.
\end{corollary}

\begin{proof}[Proof sketch]
We see that $d_{0}=\lfloor 1b^{\log_{b}(1)}\rfloor=1$ immediately since
$\log_{b}(1)=0$ and $b^{0}=1$.
We also see that $r_{0}=0$. Therefore by the previous theorem spawning
all these corollaries,
for all $j>0$ we must have $d_{j}=0$.
\end{proof}

<<Theorem: $b$-expansion of 1>>=
theorem ThBExpansionOfOne:
  (b-expansion 1).0 = 1
  & for j being Nat st j > 0 holds (b-expansion 1).j = 0
proof
  set d = b-expansion 1;
  consider r being Real_Sequence such that
  A1: d.0 = [\ 1 * (b to_power (-[\ log(b, 1) /])) /]
  & r.0 = (1 * (b to_power (-[\ log(b, 1) /]))) - [\ (1 * (b to_power (-[\ log(b, 1) /])))/]
  & for j being Nat
    holds d.(j+1) = [\ b*(r.j) /]
        & r.(j+1) = b*(r.j) - [\ b*(r.j) /] by Def2b;
  A2: b > 0 & b <> 1 by Def1;
  A3: 1 * (b to_power (-[\ log(b, 1) /])) 
   = b to_power (-[\ 0 /]) by A2, POWER:51 
  .= 1 by POWER:24;
  thus d.0 = 1 by A1, A3;
  let j be Nat;
  assume j > 0;
  hence (b-expansion 1).j = 0 by A1, A3, ThBetaExpansionHitsZero;
end;
@ %def ThBExpansionOfOne

\begin{theorem}
Let $b$ be a valid radix real number, let $n$ be any integer.
Then the $b$-expansion of $b^{n}$ is the sequence $d_{0}=1$ and $d_{j}=0$
for all $j>0$.
\end{theorem}

\begin{proof}[Proof sketch]
We see that $d_{0}=b^{n}\cdot b^{-\lfloor\log_{b}(b^{n})\rfloor}=b^{n}b^{-n}=1$,
and then we see that $r_{0}=0$ and therefore $d_{j}=0$ for $j>0$.
\end{proof}

<<Theorem: $b$-expansion of $b^{n}$>>=
theorem ThBExpansionOfPowerOfB:
  for n being Integer
  holds (b-expansion (b to_power n)).0 = 1
  & for j being Nat st j > 0 holds (b-expansion (b to_power n)).j = 0
proof
  let n be Integer;
  set d = b-expansion (b to_power n);
  consider r being Real_Sequence such that
  A1: d.0 = [\ (b to_power n) * (b to_power (-[\log(b,(b to_power n))/]))/]
  & r.0 = ((b to_power n) * (b to_power (-[\ log(b, (b to_power n)) /])))
        - [\ ((b to_power n) * (b to_power (-[\ log(b, (b to_power n)) /])))/]
  & for j being Nat
    holds d.(j+1) = [\ b*(r.j) /]
        & r.(j+1) = b*(r.j) - [\ b*(r.j) /] by Def2b;
  b > 0 & b <> 1 by Def1; then
  A2: (b to_power n) * (b to_power (-[\log(b,b to_power n)/]))
   = (b to_power n) * (b to_power (-[\ n /])) by POWER:def 3
  .= b to_power (n + (-n)) by POWER:27
  .= 1 by POWER:24;
  hence (b-expansion (b to_power n)).0 = 1 by A1;
  thus thesis by A1, A2, ThBetaExpansionHitsZero;
end;
@ %def ThBExpansionOfPowerOfB

\begin{theorem}
Let $b$, $n$ be natural numbers. Let $d$ be the digits of $b^{n}$ in
base $b$. If $b>1$ and $n\neq0$, then the length of the sequence $d$ is
equal to $1+n$ and $d_{n}=1$ and for natural numbers $j<n$ 
we have $d_{j}=0$.
\end{theorem}

\begin{proof}[Proof sketch]
We will construct the sequence $d$ of natural numbers such that $d_{n}=1$
such that for natural numbers $j<n$ we have $d_{j}=0$. Then we will
prove that this sequence really is the digit expansion of $b^{n}$ in
base $b$. This requires proving:
\begin{enumerate}
\item the value of $d$ in base $b$ is $b^{n}$;
\item $d_{\text{len}(d)-1}\neq0$
\item for all natural numbers $j$ such that $j\in\dom(d)$ we have $0\leq d_{j}<b$.
\end{enumerate}
Then we can infer $d$ is the digits of $b^{n}$ in base $b$ by Definition
[[NUMERAL1:def 2]], and that the length of $d$ is $1+n$. The bulk of
this proof requires proving $d$ really is the sequence of digits for
$b^{n}$ in base $b$.
\end{proof}

<<Theorem: [[digits(b |^ n,b).n=1]] and for $j<n$ [[digits(b |^ n,b).j=0]]>>=
theorem Th13:
  for b being Nat st b > 1
  for n being Nat st n <> 0
  holds digits(b |^ n, b).n = 1
  & (for j being Nat st j < n holds digits(b |^ n, b).j = 0)
  & len digits(b |^ n, b) = 1 + n
proof
  let b be Nat;
  assume A1: b > 1;
  let n be Nat;
  assume A2: n <> 0;
  <<Construct the finite sequence $d$ of natural numbers>>

  <<Proof: value of $d$ in base $b$ is $b^{n}$>>
  then A4: value(d,b) = b |^ n by NUMERAL1:def 1;
  A5: b to_power n > 0 by A1;
  d.((len d) - 1) <> 0
  & (for i being Nat st i in dom d holds (0 <= d.i & d.i < b))
  <<Proof: $d_{\text{len}(d)-1}\neq0$ and for $i\in\dom(d)$ we have $0\leq d_{i}<b$>>
  then A6: digits(b |^ n, b) = d & len d = 1 + n
  by A1, A3, A4, A5, NUMERAL1:def 2;

  thus digits(b |^ n, b).n = 1
  proof
    n in Segm (n + 1) by NAT_1:45;
    then n in (n + 1) by ORDINAL1:def 17;
    then d.n = F(n) by A3
            .= 1 by FUNCOP_1:def 8;
    hence thesis by A6;
  end;

  thus for j being Nat st j < n holds digits(b |^ n, b).j = 0
  proof
    let j be Nat;
    assume B1: j < n;
    then j < n + 1 by NAT_1:16, XXREAL_0:2;
    then j in Segm (n + 1) by NAT_1:44;
    then j in (n + 1) by ORDINAL1:def 17;
    hence digits(b |^ n, b).j = F(j) by A3,A6
                             .= 0 by B1, FUNCOP_1:def 8;
  end;

  thus len digits(b |^ n, b) = 1 + n by A6;
end;
@ %def Th13

\begin{proof}[Proof sketch (value of $d$ in base $b$ is $b^{n}$)]
We need to construct a sequence $d'$ such that $\dom(d')=\dom(d)$,
for all natural numbers $j$ such that $j\in\dom(d')$ we have $d'_{j}=d_{j}b^{j}$,
and that $b^{n}=\sum_{j}d'_{j}$.
\end{proof}

<<Proof: value of $d$ in base $b$ is $b^{n}$>>=
ex d9 being XFinSequence of NAT
st (dom d9 = dom d & (for i being Nat st i in dom d9 holds
   d9.i = (d.i) * (b |^ i)) & b |^ n = Sum d9 )
proof
  <<Construct the sequence $d^{\prime}$>>
  take d9;
  
  thus dom d9 = dom d by A3,B1; 
  
  thus (for i being Nat st i in dom d9 holds d9.i = (d.i) * (b |^ i))
  by B1;

  reconsider dd9 = n --> 0 as XFinSequence of NAT;
  b |^ n is Element of NAT by ORDINAL1:def 12; then
  reconsider ff9 = <% (b |^ n) %> as XFinSequence of NAT;
  
  len d9 = len (dd9 ^ ff9)
  & for k being Nat st k < len d9 holds d9.k = (dd9 ^ ff9).k
  proof
    thus len (dd9 ^ ff9) = (len dd9) + 1 by AFINSQ_1:75
                        .= len d9 by B1, FUNCOP_1:13;
    let k be Nat;
    assume Z1: k < len d9;
    Z2: len dd9 = n by FUNCOP_1:13;
    per cases;
    suppose Z3: k = n;
      n in Segm (n + 1) by NAT_1:45;
      then Z4: n in (n + 1) by ORDINAL1:def 17;
      thus d9.k = F2(n) by Z1,Z3,B1,AFINSQ_1:86
               .= F(n)*(b |^ n) by Z4,A3
               .= 1*(b |^ n) by FUNCOP_1:def 8
               .= (dd9 ^ ff9).k by Z2,Z3,AFINSQ_1:36;
    end;
    suppose Z5: k <> n;
      then k in Segm n by Z1,B1,NAT_1:22,NAT_1:44;
      then Z6: k in n by ORDINAL1:def 17;
      then LHS: (dd9 ^ ff9).k = dd9.k by Z2, AFINSQ_1:def 3
                             .= 0 by Z6, FUNCOP_1:7;
      k in Segm (n + 1) by B1,Z1,NAT_1:44;
      then Z7: k in n+1 by ORDINAL1:def 17;
      hence d9.k = F2(k) by B1
                .= IFEQ(k,n,1,0)*(b |^ k) by A3,Z7 
                .= 0*(b |^ k) by Z5,FUNCOP_1:def 8
                .= (dd9 ^ ff9).k by LHS;
    end;
  end;
  then d9 = dd9 ^ ff9 by AFINSQ_1:9;
  hence Sum d9 = (Sum dd9) + (Sum ff9) by AFINSQ_2:55
              .= (Sum dd9) + (b |^ n) by AFINSQ_2:53
              .= 0*n + (b |^ n) by AFINSQ_2:58
              .= b |^ n;
end;
@ 

\begin{proof}[Proof sketch (constructing $d^{\prime}$)]
This is straightforward, we just construct a sequence of length $n+1$
defined componentwise by $d'_{j}=d_{j}b^{j}$ for each $j<n+1$.
\end{proof}

<<Construct the sequence $d^{\prime}$>>=
deffunc F1() = n + 1;
deffunc F2(Nat) = (d.$1)*(b |^ $1);
consider p being XFinSequence such that
B1: len p = F1() & (for k being Nat st k in F1() holds p.k = F2(k))
from AFINSQ_1:sch 2;
for y being object st y in rng p holds y in NAT
proof
  let y be object;
  assume y in rng p;
  then consider i being object such that
  Z1: i in dom p & y = p.i by FUNCT_1:def 3;
  reconsider i as Element of NAT by Z1;
  y = (d.i) * (b |^ i) by Z1,B1;
  
  hence y in NAT by ORDINAL1:def 12;
end;
then reconsider d9=p as XFinSequence of NAT
by TARSKI:def 3, RELAT_1:def 19;
@ 

\begin{proof}[Proof step (construct the sequence $d$)]
Let us define the term
\begin{equation}
\mathcal{F}(j)=\begin{cases}1 &\mbox{if }n=j\\
0 & \mbox{otherwise}.
\end{cases}
\end{equation}
Then we can construct the finite sequence $d$ of length $n+1$ such that
for all natural numbers $k$ such that $k<n+1$ we have $d_{k}=\mathcal{F}(k)$.
\end{proof}

<<Construct the finite sequence $d$ of natural numbers>>=
deffunc F(Nat) = IFEQ($1,n,1,0);
deffunc F1() = n + 1;
consider d being XFinSequence such that
A3: len d = F1() & for k being Nat st k in F1() holds d.k = F(k)
from AFINSQ_1:sch 2;
for y being object st y in rng d holds y in NAT
proof
  let y be object;
  assume y in rng d;
  then consider i being object such that
  B1: i in dom d & y = d.i
  by FUNCT_1:def 3;
  reconsider i as Element of NAT by B1;
  per cases;
  suppose B2: i = n;
    y = F(i) by A3,B1
     .= 1 by B2, FUNCOP_1:def 8;
    hence thesis;
  end;
  suppose B3: i <> n;
    y = F(i) by A3,B1
     .= 0 by B3,FUNCOP_1:def 8;
    hence thesis;
  end;
end;
then reconsider d as XFinSequence of NAT by TARSKI:def 3, RELAT_1:def 19;
@ 

\begin{proof}[Proof sketch ($i\in\dom$ implies $0\leq d_{i}<b$)]
The claim $d_{\text{len}(d)-1}\neq0$ follows by construction of $d$.
\end{proof}

<<Proof: $d_{\text{len}(d)-1}\neq0$ and for $i\in\dom(d)$ we have $0\leq d_{i}<b$>>=
proof
  n < n + 1 by NAT_1:16;
  then n in dom d by A3, AFINSQ_1:86; then
  d.((len d) - 1) = F(n) by A3
                 .= 1 by FUNCOP_1:def 8;
  hence d.((len d) - 1) <> 0;
  let i be Nat;
  assume Z2: i in dom d;
  thus 0 <= d.i;
  per cases;
  suppose i = n;
    then d.i = F(n) by Z2,A3
            .= 1 by FUNCOP_1:def 8;
    hence d.i < b by A1;
  end;
  suppose Z3: i <> n;
    d.i = F(i) by Z2,A3
       .= 0 by Z3, FUNCOP_1:def 8;
    hence d.i < b by A1;
  end;
end;
@ 

\begin{corollary}
Let $b$, $n$ be natural numbers. If $b>1$, then the length of digits for
$b^{n}$ in base $b$ is $1+n$.
\end{corollary}

<<Corollary: length of digit string for $b^{n}$ is $1+n$>>=
theorem
  for b being Nat st b > 1
  for n being Nat
  holds len (digits(b |^ n,b)) = 1 + n
proof
  let b be Nat;
  assume A1: b > 1;
  let n be Nat;
  per cases;
  suppose A2: n = 0;
    then b |^ n = 1 by NEWTON:4;
    then digits(b |^ 0, b) = <% 1 %> by A1,A2,ThDigitsOfOne;
    hence thesis by A2, AFINSQ_1:34;
  end;
  suppose n <> 0;
    hence thesis by A1,Th13;
  end;
end;
@

\begin{definition}
Let $b$ be a positive real.
Let $d$ be a finite sequence of natural numbers.
We define the \define{$\beta$-radix integer value} of $d$ to be the real
number equal to $\sum^{N}_{j=0}d_{j}b^{N-j}$.
\end{definition}

We are going to explicitly follow [[NUMERAL1:def 1]] in our notation and
write this as [[beta_integer_value(d,b)]]. Furthermore, when $b$ is a
[[Nat]], we will identify [[beta_integer_value(d,b)]] as [[value(d,b)]].

<<Definition: $\beta$-radix integer value>>=
definition
  let d be XFinSequence of NAT;
  let b be real Number;
  func beta_integer_value(d,b) -> Real means :Def3a:
  ex d9 being XFinSequence of REAL
  st dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & it = Sum d9;
  existence
  <<Proof: existence of $\beta$ integer value>>
  uniqueness
  <<Proof: uniqueness of $\beta$ integer value>>
end;
@ %def beta_integer_value Def3a

\begin{proof}[Proof sketch ($\beta$ integer value)]
We need to prove there exists a real number $r$ and a finite sequence
$d'$ of real numbers such that for $i$ being a natural number such that
$i\in\dom(d')$ we have $d'_{i}=d_{i}b^{N-i}$ where $N$ is the length of
the sequence, and $r=\sum d'$.

We can construct the sequence $d'$ directly from $d$. The tricky bit is
to prove that every entry in $d'$ is real, so we can reconsider its type
to be a finite sequence of real numbers. This permits us to consider
$\sum d'$.
\end{proof}

<<Proof: existence of $\beta$ integer value>>=
proof
  deffunc F(Nat)=(d.$1)*(b |^ $1);
  consider d9 being XFinSequence such that
  A1: len d9 = len d & for i being Nat st i in len d holds d9.i = F(i)
  from AFINSQ_1:sch 2;
  for a being object st a in rng d9 holds a in REAL
  proof
    let a be object;
    assume a in rng d9;
    then consider i being object such that
    A2: i in dom d9 & d9.i = a by FUNCT_1:def 3;
    reconsider i as Element of NAT by A2;
    a=F(i) by A1,A2;
    hence thesis by XREAL_0:def 1;
  end;
  then rng d9 c= REAL by TARSKI:def 3;
  then reconsider d9 as XFinSequence of REAL by RELAT_1:def 19;
  take r=Sum d9;
  thus thesis by A1;
end;
@

\begin{proof}[Proof sketch (Uniqueness of $\beta$ integer value)]
Let $K$, $L$ be two real numbers. Suppose we have two finite sequences
of real numbers $k$ and $\ell$ which satisfy the definition and $K=\sum k$,
$L = \sum\ell$. Then for
each natural number $i$, we see $k_{i}=\ell_{i}$, and therefore their
sums must be equal.
\end{proof}

<<Proof: uniqueness of $\beta$ integer value>>=
proof
  let k, l be Real;
  given k9 being XFinSequence of REAL such that
  A1: dom k9 = dom d
  & (for i being Nat st i in dom k9 holds k9.i = (d.i)*(b |^ i))
  & k = Sum k9;
  given l9 being XFinSequence of REAL such that
  A2: dom l9 = dom d
  & (for i being Nat st i in dom l9 holds l9.i = (d.i)*(b |^ i))
  & l = Sum l9;
  for i being Nat st i in dom d holds k9.i = l9.i
  proof
    let i be Nat;
    assume i in dom d;
    then A3: i in dom k9 & i in dom l9 by A1,A2;
    hence k9.i = (d.i)*(b |^ i) by A1
              .= l9.i by A2,A3;
  end;
  hence thesis by A1,A2,AFINSQ_1:8;
end;
@ 

\begin{voc}
We need to add [[beta_integer_value]] as a term to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
Obeta_integer_value
@

\begin{definition}
We note that when $b\in\NN$, the $\beta$-integer value of $d$ relative
to $b$ is a natural number.
\end{definition}

This requires a \emph{redefinition} to specialize the type of the term
\emph{and} to specialize the defining criterion for the term. We need to
prove to Mizar that
\begin{enumerate}
\item the new criterion is \textbf{compatible} with the old
one, i.e., for any natural number $a$ we have $a$ satisfies the new definition
if and only if $a$ satisfies the old definition; and
\item the new type is \textbf{coherent}, i.e., that the expression
  really has the specified type.
\end{enumerate}
These are straightforward but tedious to prove.

<<Redefine: [[beta_integer_value]] is [[Nat]] when [[b]] is [[Nat]]>>=
definition
  let d be XFinSequence of NAT;
  let b be natural Number;
  redefine func beta_integer_value(d,b) -> Nat means :Def3b:
  ex d9 being XFinSequence of NAT
  st dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & it = Sum d9;
  compatibility
  <<Proof: compatibility of redefinition of [[beta_integer_value]]>>
  coherence
  <<Proof: coherence of redefinition of [[beta_integer_value]]>>
end;
@ %def Def3b

\begin{proof}[Proof sketch (Compatibility)]
We need to prove the claim ``For all $a$ being natural numbers, we have
$a$ satisfy the new definition if and only if $a =$ [[beta_integer_value(d,b)]].''
More explicitly, 
Since this is an ``iff'' statement, we have two subproofs. One is
fortunately obvious. Proving that the old definition implies the new one
is the nontrivial task, requiring us to observe that the sequence
$d'_{i}=d_{i}b^{i}$ is a sequence of natural numbers, therefore the sum
must be a natural number.
\end{proof}

%% thus for a being Nat holds a = beta_integer_value(d,b)
%%   iff (ex d9 being XFinSequence of NAT
%%   st dom d9 = dom d
%%   & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
%%   & a = Sum d9))

<<Proof: compatibility of redefinition of [[beta_integer_value]]>>=
proof
  let a be Nat;
  thus ((a = beta_integer_value(d,b))
  implies (ex d9 being XFinSequence of NAT
  st dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & a = Sum d9))
  proof 
    assume a = beta_integer_value(d,b);
    then consider d9 being XFinSequence of REAL such that
    A1: dom d9 = dom d
    & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
    & a = Sum d9 by Def3a;
    for y being object st y in rng d9 holds y in NAT
    <<Subproof: $\forall y,y\in\rng(d^{\prime})\implies y\in\NN$>>
    then rng d9 c= NAT by TARSKI:def 3;
    then reconsider k9=d9 as XFinSequence of NAT by RELAT_1:def 19;
    take k9;
    thus thesis by A1;
  end;
  thus (ex d9 being XFinSequence of NAT
  st dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & a = Sum d9) implies (a = beta_integer_value(d,b)) by Def3a;
end;
@

\begin{proof}[{Subproof (range of sequence is in natural numbers)}]
Let $y$ be any object, assuming $y\in\rng(d')$. That is to say, there is
some $i$ such that $d'_{i}=y$. Then $y=d_{i}b^{i}$, which means $y$ is
the product of two natural numbers, therefore $y$ must be a natural number.
\end{proof}

<<Subproof: $\forall y,y\in\rng(d^{\prime})\implies y\in\NN$>>=
proof
  let y be object;
  assume y in rng d9;
  then consider i being object such that
  A2: i in dom d9 & d9.i = y by FUNCT_1:def 3;
  reconsider i as Element of NAT by A2;
  y = (d.i)*(b |^ i) by A1,A2;
  hence y in NAT by ORDINAL1:def 12;
end;    
@ 

\begin{proof}[Proof sketch (Coherence)]
This amounts to observing that the sequence [[d9]] consists of natural
numbers, then the result follows.
\end{proof}

<<Proof: coherence of redefinition of [[beta_integer_value]]>>=
proof
  consider d9 being XFinSequence of REAL such that
  A1: dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & beta_integer_value(d,b) = Sum d9 by Def3a;
  for y being object st y in rng d9 holds y in NAT
  <<Subproof: $\forall y,y\in\rng(d^{\prime})\implies y\in\NN$>>
  then rng d9 c= NAT by TARSKI:def 3;
  then reconsider d9 as XFinSequence of NAT by RELAT_1:def 19;
  d9 is natural-valued;
  hence beta_integer_value(d,b) is Nat by A1;
end;
@

\begin{registration}
Let $d$ be a sequence of natural numbers, let $b$ be a natural number.
We can identify the term [[beta_integer_value(d,b)]] with [[value(d,b)]]
from [[NUMERAL1]] as identical.
\end{registration}

<<Register: identify [[beta_integer_value(d,b)]] with [[value(d,b)]] when $b\in\NN$>>=
registration
  let d be XFinSequence of NAT;
  let b be Nat;
  identify beta_integer_value(d,b) with value(d,b);
  compatibility
  proof
    consider d9 being XFinSequence of NAT such that
    A1: dom d9 = dom d
    & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
    & beta_integer_value(d,b) = Sum d9 by Def3b;
    consider k9 being XFinSequence of NAT such that
    A2: dom k9 = dom d
    & (for i being Nat st i in dom k9 holds k9.i = (d.i)*(b |^ i))
    & value(d,b) = Sum k9 by NUMERAL1:def 1;
    for i being Nat st i in dom d holds k9.i = d9.i
    proof
      let i be Nat;
      assume A3: i in dom d;
      hence k9.i = (d.i)*(b |^ i) by A2
                .= d9.i by A1,A3;
    end;
    hence thesis by A1,A2,AFINSQ_1:8;
  end;
end;
@

\begin{road-map}
OK, now, we want to constructively describe the ``bracketing''
floating-point numbers $v_{1}$ and $v_{2}$ for $x\in\RR$, i.e., where
$v_{1}\leq x\leq v_{2}$. This is done by considering the
$b$-expansion of $x$, truncating it to $p$ digits, and this is the
mantissa for $v_{1}$. Then we obtain $v_{2}$ by adding $1$ to the
resulting $b$-value of the mantissa.

This requires proving the order of real numbers translates to the
lexicographic order of the $b$-expansion of real numbers.
\end{road-map}

\begin{theorem}
Let $x$ be a real number, let $d_{j}$ be the $b$-expansion of $x$. Then 
\begin{equation}
\sum_{j=0}^{\infty}d_{j}b^{-j}=xb^{-\lfloor\log_{b}(x)\rfloor}
\end{equation}
is a convergent series.
\end{theorem}

\begin{proof}[Proof outline]
We construct the sequence $s_{k}$ we used when proving convergence of
the sums of the $\beta$-expansion of $x$, then prove by complete
induction that $s_{k}$ are indeed the partial sums of the
$\beta$-expansion of $x$.
\end{proof}

\begin{thm-remark}
It might be odd, why prove this particular version of the theorem when
we have a perfectly happy theorem with logically equivalent results?
Well, we want to take advantage of Theorem [[SERIES_1:15]] which states
if $b_{k}$ is a summable sequence, then
\begin{equation*}
\sum^{\infty}_{k=0}b_{k}=\sum^{n}_{k=0}b_{k}+\sum^{\infty}_{k=n+1}b_{k}.
\end{equation*}
This is because the first-term on the right-hand side $\sum^{n}_{k=0}b_{k}$
is the significand of a floating-point number when $n=p-1$.
\end{thm-remark}

<<Theorem: $\sum_{j=0}^{\infty}d_{j}b^{-j}$ converges to $xb^{-\lfloor\log_{b}(x)\rfloor}$>>=
theorem Th15:
  for x being Real
  ex d1 being Real_Sequence
  st (for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j))
  & Partial_Sums d1 is convergent
  & lim Partial_Sums d1 = x * (b to_power (-[\ log(b, x) /]))
proof
  let x be Real;
  <<Proof step: construct sequence $d_{1}$>>
  take d1;
  thus for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j)
  by A1;
  
  set d = b-expansion x;
  consider r being Real_Sequence such that
  A2: d.0 = [\ x * (b to_power (-[\log(b,x)/]))/] &
  r.0 = (x * (b to_power (-[\log(b,x)/]))) - [\x * (b to_power (-[\log(b,x)/]))/]
  & for j being Nat holds d.(j + 1) = [\b*(r.j)/]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
  by Def2b;
  
  <<Construct the sequence $s_{k}$>>
  
  set S = (Partial_Sums d1);

  A4: dom S = NAT by SEQ_1:1
           .= dom s by SEQ_1:1;

  <<Proof: $S=s$ by complete induction>>
  then for n being object st n in dom S holds S.n = s.n;
  hence thesis by A3, A4, FUNCT_1:2;
end;
@ %def Th15

\begin{proof}[Proof step (construct $d_{1}$)]
This follows using the scheme constructing real sequences from a term
$\mathcal{F}(n)$. 
\end{proof}

<<Proof step: construct sequence $d_{1}$>>=
deffunc F1(Nat) = ((b-expansion x).$1)*(b to_power (- $1));
consider d1 being Real_Sequence such that
A1: for n being Nat holds d1.n = F1(n) from SEQ_1:sch 1;
@ 

\begin{proof}[Proof sketch (Construct $s_{k}$)]
This follows from our previous theorem concerning the limit of the
$\beta$-expansion of $x$.
\end{proof}

<<Construct the sequence $s_{k}$>>=
consider s being Real_Sequence such that
A3: s.0 = (b-expansion x).0
& (for j being Nat holds s.(j + 1) = (s.j) + ((d.(j + 1)) * (b to_power (-j-1))))
& s is convergent
& lim s = x * (b to_power (-[\ log(b, x) /]))
by A2, ThBetaExpansionLimit;
@

\begin{proof}[Proof sketch ($S=s$)]
This is done by complete induction, i.e., proving that for each natural
number $n$ if every $k<n$ has $S_{k}=s_{k}$, then $S_{n}=s_{n}$. Then
complete induction tells us that $S=s$.

Proving that $S_{n}=s_{n}$ boils down to two cases:
\begin{enumerate}
\item $n=0$, which means that $S_{0}=d'_{0}=s_{0}$;
\item $n>0$, which means there is a $m\in\NN$ such that $n=m+1$; in this
  case, $S_{n}=S_{m+1}=S_{m}+d'_{m+1}$, then using the
  inductive hypothesis that $S_{m}=s_{m}$, we find
  $S_{m+1}=s_{m}+d'_{m+1}$. But the right-hand side of this (i.e.,
  $s_{m}+d'_{m+1}$) is precisely the definition of
  $s_{m+1}$, which proves the claim.
\end{enumerate}
Thus we get the result.
\end{proof}

<<Proof: $S=s$ by complete induction>>=
defpred P[Nat] means S.$1 = s.$1;
A5: for n being Nat st (for k being Nat st k < n holds P[k])
holds P[n]
proof
  let n be Nat;
  assume B1: for k being Nat st k < n holds P[k];
  per cases;
  suppose B2: n = 0;
    S.0 = d1.0 by SERIES_1:def 1
       .= ((b-expansion x).0) * (b to_power (- 0)) by A1
       .= ((b-expansion x).0) * 1 by POWER:24
       .= s.0 by A3;
    hence thesis by B2;
  end;
  suppose n <> 0;
    then consider m being Nat such that
    B3: n = m + 1 by NAT_1:6;
    B4: m < n by B3, NAT_1:13;
    S.(m + 1) = (S.m) + (d1.(m + 1)) by SERIES_1:def 1
    .= (s.m) + (d1.(m + 1)) by B1,B4
    .= (s.m) + (((b-expansion x).(m + 1)) * (b to_power (- (m + 1)))) by A1
    .= (s.m) + (((b-expansion x).(m + 1)) * (b to_power (- m - 1)))
    .= s.(m + 1) by A3;
    hence P[n] by B3;
  end;
end;

for n being Nat holds P[n] from NAT_1:sch 4(A5);
@ 

\begin{theorem}[Uniqueness]
Let $x$ be real. Let $c_{j}$ be the $b$-expansion of $x$.
For any sequence $d$ such that for all natural numbers
$j$ we have $d_{j}=c_{j}b^{-j}$, we see $\sum d_{j}$ is convergent and
$\sum c_{j}=x b^{-\lfloor\log_{b}(x)\rfloor}$.
\end{theorem}

This is a ``helper theorem'' which removes a lot of ``boiler plate''
steps in future proofs.

<<Theorem: Uniqueness of partial sums of $\beta$-expansion of $x$>>=
theorem Th16:
  for x being Real
  for d1 being Real_Sequence
  st (for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j))
  holds Partial_Sums d1 is convergent & d1 is summable
  & lim Partial_Sums d1 = x * (b to_power (-[\ log(b, x) /]))
proof
  let x be Real;
  let d1 be Real_Sequence;
  assume A1: for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j);
  consider d being Real_Sequence such that
  A2: (for j being Nat holds d.j = ((b-expansion x).j)*(b to_power -j)) and
  A3: Partial_Sums d is convergent
  & lim Partial_Sums d = x * (b to_power (-[\ log(b, x) /])) by Th15;
 
  for j being Element of NAT holds d.j = d1.j
  proof
    let j be Element of NAT;
    thus d.j = ((b-expansion x).j)*(b to_power -j) by A2
            .= d1.j by A1;
  end;
  then d = d1 by FUNCT_2:def 8;
  hence thesis by A3, SERIES_1:def 2;
end;
@ %def Th16

\begin{theorem}
Let $x$ be a real number, let $b$ be a valid radix real.
Let $c_{j}$ be the $b$-expansion of $x$, and $d_{j}=c_{j}b^{-j}$.
Then for any $n\in\NN$, we have:
\begin{equation*}
\sum^{n}_{j=0}d_{j}\leq xb^{-\lfloor\log_{b}(x)\rfloor}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}.
\end{equation*}
\end{theorem}

\begin{thm-remark}
This is a critical result for proving there exists a pair of
floating-point numbers ``bracketing'' $x$, which will then be crucial
when proving rounding results in \S4.
\end{thm-remark}

\begin{proof}[Proof sketch]
Let $x_{*}=xb^{-\lfloor\log_{b}(x)\rfloor}$, let $\rho=\sum_{j=n+1}^{\infty}d_{j}$
be the remainder for the $n^{\text{th}}$ partial sum. There are two
claims being made here:
\begin{enumerate}
\item $\sum^{n}_{j=0}d_{j}\leq x_{*}$, and
\item $\displaystyle x_{star}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$.
\end{enumerate}
The first claim can be proven in a straightforward manner, the second
claim requires facts concerning the geometric series.
\end{proof}

<<Theorem: if $c_{j}$ is $b$-expansion of $x$ and $d_{j}=c_{j}b^{-j}$, then $\sum^{n}_{j=0}d_{j}\leq xb^{-\lfloor\log_{b}(x)\rfloor}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$>>=
theorem Th17:
  for x being positive Real
  for n being Nat
  for d1 being Real_Sequence
  st (for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j))
  holds (Partial_Sums d1).n <= x * (b to_power (-[\ log(b, x) /]))
  & x * (b to_power (-[\ log(b, x) /]))
    <= ((([/b\] - 1)/(b - 1))*(b to_power -n)) + (Partial_Sums d1).n
proof
  let x be positive Real;
  let n be Nat;
  let d1 be Real_Sequence;
  assume A1: for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j);
  <<Subproof: $\sum^{n}_{j=0}d_{j}\leq x_{*}$>>
  <<Subproof: $x_{*}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$>>
end;
@ %def Th17

\begin{proof}[Subproof ($\sum^{n}_{j=0}d_{j}\leq x_{*}$)]
The first half of the proof is relatively straightforward, since it
requires proving the $0\leq\rho$ (which follows from claim $A_{4}$)
and $\rho+\sum^{n}_{j=0}d_{j}=x_{*}$
implies $\sum^{n}_{j=0}d_{j}=x_{*}-\rho\leq x_{*}$.
\end{proof}

<<Subproof: $\sum^{n}_{j=0}d_{j}\leq x_{*}$>>=
A2: for j being Nat holds 0 <= d1.j & d1.j < b to_power (1 - j)
proof
  let j be Nat;
  (b-expansion x).j >= 0 by Th8;
  then ((b-expansion x).j)*(b to_power -j) >= 0;
  hence 0 <= d1.j by A1;

  B1: ((b-expansion x).j)*(b to_power -j) < b*(b to_power -j)
  by Th8, XREAL_1:68;
  b*(b to_power -j) = (b to_power 1)*(b to_power -j)
                   .= b to_power (1 + (-j)) by POWER:27
                   .= b to_power (1 - j);
  hence d1.j < b to_power (1 - j) by A1, B1;
end;
A3: Partial_Sums d1 is convergent & d1 is summable
& lim Partial_Sums d1 = x * (b to_power (-[\ log(b, x) /])) by A1, Th16;

A4: 0 <= (Sum (d1 ^\ (n + 1)))
proof
  B1: (d1 ^\ (n + 1)) is summable by A3, SERIES_1:12;
  for j being Nat holds 0 <= (d1 ^\ (n + 1)).j
  proof
    let j be Nat;
    (d1 ^\ (n + 1)).j = d1.((n + 1) + j) by NAT_1:def 3;
    hence 0 <= (d1 ^\ (n + 1)).j by A2;
  end;
  hence thesis by B1, SERIES_1:18;
end;
set alpha = x * (b to_power (-[\ log(b, x) /]));
set remainder = (Sum (d1 ^\ (n + 1)));
alpha = Sum d1 by A3, SERIES_1:def 3
     .= ((Partial_Sums d1).n) + (Sum (d1 ^\ (n + 1))) by A3,SERIES_1:15;
then (((Partial_Sums d1).n) + remainder) - remainder <= alpha
by A4,XREAL_1:43;
hence (Partial_Sums d1).n <= x * (b to_power (-[\ log(b, x) /]));
@ 

\begin{proof}[Proof sketch ($x_{*}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$)]
Let $\kappa_{0}=(\lceil b\rceil-1)b^{-n-1}$ for brevity.
The argument is that: 
\begin{itemize}
\item[$(A_{5})$] $\sum_{j=0}^{\infty}b^{-j}=1/(1-b^{-1})$ and for any
  $c\in\RR$ we see $\sum_{j} c\cdot b^{-j}=c/(1 - b^{-1})$;
\item[$(A_{6})$] $\rho=\sum^{\infty}_{j=n+1}d_{j}\leq \sum_{j=0}^{\infty}\kappa_{0}b^{-j}$;
\item[$(A_{7})$] $\rho + \sum^{n}_{j=0}d_{j}=x_{*}$
\end{itemize}
Therefore by adding $\sum^{n}_{j=0}d_{j}$ to both sides of $(A_{6})$, we
obtain the desired result thanks to $(A_{7})$.
\end{proof}

<<Subproof: $x_{*}\leq\frac{\lceil{b}\rceil-1}{b-1}b^{-n}+\sum^{n}_{j=0}d_{j}$>>=
set k0 = ([/b\] - 1)*(b to_power (- n -1));

A5: (b" GeoSeq) is summable & (k0 (#) (b" GeoSeq)) is summable
& Sum (b" GeoSeq) = 1/(1 - (b "))
proof
  0 < b" & b" < 1" by Def1, XREAL_1:88;
  then |. b" .| < 1 by COMPLEX1:43;
  then (b" GeoSeq) is summable & Sum (b" GeoSeq) = 1/(1 - (b "))
  by SERIES_1:24;
  hence thesis by SERIES_1:10;
end;
for j being Nat
holds 0 <= (d1 ^\ (n + 1)).j
& (d1 ^\ (n + 1)).j <= (k0 (#) ((b") GeoSeq)).j
<<Proof: $0\leq d_{(n+1)+j}\leq\kappa_{0}b^{-j}$>>
then A6: Sum (d1 ^\ (n + 1)) <= Sum (k0 (#) ((b") GeoSeq))
by A5, SERIES_1:20;
A7: (Partial_Sums d1).n + Sum (d1 ^\ (n + 1)) = Sum d1 by A3, SERIES_1:15
.= x * (b to_power (-[\log(b,x)/])) by A3, SERIES_1:def 3;
Sum (k0 (#) ((b ") GeoSeq)) = (([/b\] - 1)/(b - 1))*(b to_power -n)
proof
  (([/b\] - 1)*(b to_power (- n -1))) * (1 / (1 - (b ")))
   = (b to_power (- n -1)) * (([/b\] - 1) * (1 / (1 - (b "))))
  .= (b to_power (- n -1)) * ((([/b\] - 1) * 1)/(1 - (b "))) by XCMPLX_1:74
  .= ((b to_power -n)/(b to_power 1)) * (([/b\] - 1)/(1 - (b "))) by POWER:29
  .= ((b to_power -n) * ([/b\] - 1)) / (b *(1 - (b " ))) by XCMPLX_1:76 
  .= ((b to_power -n) * ([/b\] - 1)) / (b - (b * (b ")))
  .= ((b to_power -n) * ([/b\] - 1)) / (b - 1) by XCMPLX_0:def 7
  .= (([/b\] - 1)/(b - 1))*(b to_power -n) by XCMPLX_1:74;
  hence thesis by A5, SERIES_1:10;
end;
then Sum (k0 (#) ((b") GeoSeq)) <= (([/b\] - 1)/(b - 1))*(b to_power -n);
then Sum (d1 ^\ (n + 1)) <= (([/b\] - 1)/(b - 1))*(b to_power -n)
by A6, XXREAL_0:2;
then (Partial_Sums d1).n + Sum (d1 ^\ (n + 1))
<= (Partial_Sums d1).n + (([/b\] - 1)/(b - 1))*(b to_power -n) by XREAL_1:6;
hence thesis by A7;
@ 

\begin{proof}[Proof sketch ($0\leq d_{j+n+1}\leq \kappa_{0}b^{-j}$)]
The first half of the inequality follows quite straightforwardly from
earlier results, since $b>0$.

The second half, that $d_{j+n+1}\leq\kappa_{0}b^{-j}$ is harder, because
we need to prove a helper lemma that $d_{i}\leq(\lceil b\rceil-1)b^{-i}$
for all $i\in\NN$. Once we have that established, most of the remainder
of the proof consists in algebraic manipulations like $1/b=b^{-1}$, $b^{-((n+1)+j)}=b^{-n-1}b^{-j}$,
and so on.
\end{proof}

<<Proof: $0\leq d_{(n+1)+j}\leq\kappa_{0}b^{-j}$>>=
proof
  let j be Nat;
  B1: (d1 ^\ (n + 1)).j = d1.((n + 1) + j) by NAT_1:def 3;
  hence 0 <= (d1 ^\ (n + 1)).j by A2;
  
  B2: for i being Nat
  holds d1.i <= ([/b\] - 1)*(b to_power -i)
  proof
    let i be Nat;
    (b-expansion x).i in NAT by Th8;
    then reconsider bxi=(b-expansion x).i as Nat;
    b <= [/b\] by INT_1:30,31;
    then bxi < [/b\] by Th8, XXREAL_0:2;
    then (b-expansion x).i <= [/b\] - 1 by INT_1:52;
    then ((b-expansion x).i)*(b to_power -i) <= ([/b\] - 1)*(b to_power -i)
    by XREAL_1:64;
    hence d1.i <= ([/b\] - 1)*(b to_power -i) by A1;
  end;
  
  (b to_power -((n + 1) + j))
  = b to_power ((-(n + 1)) + (-j))
  .= (b to_power (-n -1)) * (b to_power -j) by POWER:27;
  then B3: ([/b\] - 1)*(b to_power -((n + 1) + j))
  = k0 * (b to_power -j)
  .= k0 * ((1 / b) to_power j) by POWER:32
  .= k0 * ((b ") to_power j) by XCMPLX_1:215
  .= k0 * (((b ") GeoSeq).j) by PREPOWER:def 1;
  (d1 ^\ (n + 1)).j <= ([/b\] - 1)*(b to_power -((n + 1) + j)) by B1,B2;
  then (d1 ^\ (n + 1)).j <= k0 * (((b ") GeoSeq).j) by B3;
  hence thesis by VALUED_1:6;
end;
@

\begin{theorem}
Let $x$ be a real number, let $b$ be a valid radix real.
Let $c_{j}$ be the $b$-expansion of $x$, and $d_{j}=c_{j}b^{-j}$.
Then for any $n\in\NN$, we have:
\begin{equation*}
xb^{-\lfloor\log_{b}(x)\rfloor}\leq b^{-n}+\sum^{n}_{j=0}d_{j}
\end{equation*}
\end{theorem}

This theorem will be necessary for giving an upper bound on the
bracketing pair of floating-point numbers surrounding a given real
number, necessary when rounding real numbers to floating-point numbers.

\begin{proof}[Proof sketch]
The basic milestones in the proof:
\begin{itemize}
\item[$(A_{1})$] Construct $d_{j}$
\item[$(A_{2},A_{3})$] Construct the sequence $r_{0}=xb^{-\lfloor\log_{b}(x)\rfloor}-c_{0}$
  and $r_{j+1}=br_{j}-c_{j}$
\item[$(A_{4})$] Using $r_{j}$ construct the sequence $\rho_{j}=r_{j}b^{-j}$
\item[$(A_{5})$] For technical reasons, to satisfy Mizar, we establish
  $\rho_{j}=r_{j}b^{-j}$ as a real sequence.
\item[$(A_{6})$] $\rho_{n}<b^{-n}$
\item[$(A_{7})$] $\rho_{0}+\sum^{0}_{j=0}d_{j}=xb^{-\lfloor\log_{b}(x)\rfloor}$
\item[$(A_{8})$] Assuming $\rho_{k}+\sum^{k}_{j=0}d_{j}=xb^{-\lfloor\log_{b}(x)\rfloor}$
prove $\rho_{k+1}+\sum^{k+1}_{j=0}d_{j}=xb^{-\lfloor\log_{b}(x)\rfloor}$,
simply by unfolding definitions
\end{itemize}
Therefore by induction, from $(A_{7})$ and $(A_{8})$, we infer 
for all $k\in\NN$ that $\rho_{k}+\sum^{k}_{j=0}d_{j}=xb^{-\lfloor\log_{b}(x)\rfloor}$.
The result follows immediately.
\end{proof}

<<Theorem: $xb^{-\lfloor\log_{b}(x)\rfloor}\leq b^{-n}+\sum^{n}_{j=0}d_{j}$>>=
theorem Th18:
  for x being positive Real
  for n being Nat
  for d1 being Real_Sequence
  st (for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j))
  holds x * (b to_power(-[\log(b, x)/])) <= (b to_power -n)+(Partial_Sums d1).n
proof
  let x be positive Real;
  let n be Nat;
  let d1 be Real_Sequence;
  assume A1: for j being Nat holds d1.j = ((b-expansion x).j)*(b to_power -j);

  consider r being Real_Sequence such that
  A2: (b-expansion x).0 = [\ x * (b to_power (-[\ log(b, x) /])) /]
  & r.0 = (x * (b to_power (-[\ log(b, x) /]))) - [\ (x * (b to_power (-[\ log(b, x) /])))/]
  and
  A3: for j being Nat
  holds (b-expansion x).(j+1) = [\ b*(r.j) /]
  & r.(j+1) = b*(r.j) - [\ b*(r.j) /]
  by Def2b;

  deffunc R(Element of NAT) = ((r.$1) * (b to_power - $1));
  consider r9 being Function such that
  A4: dom r9 = NAT & for j being Element of NAT holds r9.j = R(j)
  from FUNCT_1:sch 4;
  for j being Nat holds r9.j is real
  proof
    let j be Nat;
    reconsider k=j as Element of NAT by ORDINAL1:def 12;
    r9.j = R(k) by A4;
    hence r9.j is real;
  end;
  then reconsider r9 as Real_Sequence by A4, SEQ_1:2;
  A5: for j being Nat holds r9.j = (r.j) * (b to_power -j)
  proof
    let j be Nat;
    reconsider k=j as Element of NAT by ORDINAL1:def 12;
    thus r9.j = R(k) by A4
             .= ((r.j) * (b to_power -j));
  end;

  A6: r9.n < b to_power - n
  proof
    per cases;
    suppose B1: n = 0;
      then r.n = frac (x * (b to_power (-[\ log(b, x) /]))) by A2, INT_1:def 8;
      then (r.n) * (b to_power - n) < 1 * (b to_power - n) by INT_1:43, XREAL_1:68;
      hence thesis by A5;
    end;
    suppose n > 0;
      then consider m being Nat such that
      B2: n = m + 1 by NAT_1:6;
      r.n = b*(r.m) - [\ b*(r.m) /] by A3, B2
         .= frac (b*(r.m)) by INT_1:def 8;
      then (r.n) * (b to_power -n) < 1 * (b to_power -n) by INT_1:43, XREAL_1:68;
      hence thesis by A5;
    end;
  end;

  defpred P[Nat] means
  (Partial_Sums d1).$1 + r9.$1 = x * (b to_power(-[\log(b, x)/]));
  A7: P[0]
  proof
    thus (Partial_Sums d1).0 + r9.0 = d1.0 + r9.0 by SERIES_1:def 1
    .= (((b-expansion x).0)*(b to_power - 0)) + r9.0 by A1
    .= ((b-expansion x).0)*1 + (r9.0) by POWER:24
    .= ((b-expansion x).0) + ((r.0) * (b to_power - 0)) by A5
    .= (b-expansion x).0 + (r.0)*1 by POWER:24
    .= x * (b to_power(-[\log(b, x)/])) by A2;
  end;
  A8: for k being Nat st P[k] holds P[k+1]
  proof
    let k be Nat;
    assume B1: P[k];
    B2: d1.(k + 1) + r9.(k + 1)
     = ((b-expansion x).(k + 1))*(b to_power -(k + 1)) + r9.(k + 1) by A1
    .= ((b-expansion x).(k + 1))*(b to_power -(k + 1))
       + (r.(k + 1)) * (b to_power -(k + 1)) by A5
    .= (((b-expansion x).(k + 1)) + r.(k + 1)) * (b to_power -(k + 1))
    .= ([\ b*(r.k) /] + r.(k + 1)) * (b to_power -(k + 1)) by A3
    .= ([\ b*(r.k) /] + (b * (r.k) - [\ b*(r.k) /])) * (b to_power -(k + 1)) by A3
    .= (r.k) * ((b to_power 1) * (b to_power -(k + 1)))
    .= (r.k) * (b to_power (1 + -(k + 1))) by POWER:27
    .= (r.k) * (b to_power - k)
    .= r9.k by A5;
    (Partial_Sums d1).(k + 1) + r9.(k + 1)
     = (Partial_Sums d1).k + d1.(k + 1) + r9.(k + 1) by SERIES_1:def 1
    .= x * (b to_power(-[\log(b, x)/])) by B1, B2;
    hence P[k+1];
  end;

  for k being Nat holds P[k] from NAT_1:sch 2(A7, A8);
  then (Partial_Sums d1).n + r9.n = x * (b to_power(-[\log(b, x)/]));
  hence x * (b to_power(-[\log(b, x)/])) <= (b to_power -n)+(Partial_Sums d1).n
  by A6, XREAL_1:7;
end;
@ %def Th18

\subsection{$\beta$-radix natural numbers and integers}
We will want to refer to the set of ``$\beta$-radix natural numbers''
$\NN_{\beta}$ which consists of real numbers of the form
\begin{equation}
x = d_{n}\beta^{n}+d_{n-1}\beta^{n-1}+\dots+d_{1}\beta+d_{0}
\end{equation}
where $d_{n}\neq0$ and $0\leq d_{j}<\beta$ for each $j=0,1,\dots,n$.
Similarly, the set of $\beta$-integers $\ZZ_{\beta}$ consists of the
real numbers $x$ such that $x\in\NN_{\beta}$ or $-x\in\NN_{\beta}$.

When $\beta$ is an algebraic number, $\NN\subset\NN_{\beta}$ and
$\ZZ\subset\ZZ_{\beta}$, and the usual arithmetic operators are closed
on these sets. In fact, $\ZZ_{\beta}=\ZZ[\beta]$ is a ring extension,
it's quite beautiful, but only when $\beta$ is algebraic.
However, for transcendental $\beta$, this is no longer the case, and we
run into difficulties.

\begin{definition}
We define the set $\beta$-radix $\NN$ to be the subset $\NN_{\beta}$ of $\RR$
consisting of real numbers $x$ such that there exists a finite sequence
$c_{j}$ of natural numbers such that $c_{\|c\|-1}\neq0$ and for all $j$
we have $0\leq c_{j}<\beta$ and $x=\sum_{j}c_{j}\beta^{j}$.
\end{definition}

\begin{proof}[Proof sketch (coherence)]
We see for any object $r$, if $r$ is in $\beta$-radix $\NN$, then $r\in\RR$.
Since $r$ was arbitrary, this establishes that the set $\beta$-radix $\NN$
really is a subset of the reals.
\end{proof}

\begin{def-remark}
This is going to be used when defining floating-point numbers, since the
significand is going to be an element of $b$-radix $\NN$.
\end{def-remark}

<<Definition: $b$ [[-radix_NAT]]>>=
definition
  let b be Real;
  func b-radix_NAT -> Subset of REAL equals :Def5:
  { x where x is Element of REAL : x = 0 or ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b) };
  coherence
  proof
    set IT = { x where x is Element of REAL : x = 0 or
    ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b) };
    for r being object st r in IT holds r in REAL
    proof
      let r be object;
      assume r in IT;
      then consider x being Element of REAL such that
      A1: x=r & (x = 0 or
      ex d being XFinSequence of NAT
      st d.((len d)-1) <> 0
      & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
      & x = beta_integer_value(d,b));
      thus thesis by A1;
    end;
    hence thesis by TARSKI:def 3;
  end;
end;
@ %def -radix_NAT

\begin{voc}
We need to add [[-radix_NAT]] as a functor (``term'') to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
O-radix_NAT
@ 

\begin{theorem}
Let $x\neq0$ and $b$ be arbitrary reals.
Then $x$ is in $b$-radix $\NN$ if and only if there exists a finite
sequence of natural numbers $d$ such that $d_{\|d\|-1}\neq0$ and for all
$j\in\NN$ where defined $0\leq d_{j}<b$ and $x$ is the $b$-integer value
of $d$.
\end{theorem}

\begin{proof}
The forward direction involves unfolding the definitions, and massaging
the Fraenkel terms a bit to assuage Mizar. The backwards direction is obvious.
\end{proof}

<<Theorem: criterion for nonzero elements of $b$-radix $\NN$>>=
theorem ThBetaNATCriterion:
  for b,x being Real st x <> 0
  holds x in b-radix_NAT iff ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b)
proof
  let b,x be Real;
  assume A1: x <> 0;
  thus x in b-radix_NAT implies ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b)
  proof
    assume x in b-radix_NAT;
    then ex r being Element of REAL st r=x & (r = 0 or
    ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & r = beta_integer_value(d,b));
    hence thesis by A1;
  end;
  given d being XFinSequence of NAT such that
  A2: d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b);
  ex r being Element of REAL st r=x & (r = 0 or
  ex d1 being XFinSequence of NAT
  st d1.((len d1)-1) <> 0
  & (for j being Nat st j in dom d1 holds 0 <= d1.j & d1.j < b)
  & r = beta_integer_value(d1,b))
  proof
    reconsider r=x as Element of REAL by XREAL_0:def 1;
    take r;
    thus thesis by A2;
  end;
  hence x in b-radix_NAT;
end;
@ %def ThBetaNATCriterion

\begin{theorem}
Let $\beta$ be real. Then $0$ is an element of $\beta$-radix $\NN$.
\end{theorem}

\begin{proof}[Proof sketch]
This is because 0 is real, and then we just unfold definitions.
\end{proof}

<<Theorem: 0 is in $\beta$-radix $\NN$>>=
theorem ThZeroInBetaNAT:
  for beta being Real holds 0 in beta-radix_NAT
proof
  let beta be Real;
  0 is Element of REAL by XREAL_0:def 1;
  hence thesis;
end;
@ %def ThZeroInBetaNAT

\begin{registration}
We see that $b$-radix $\NN$ is nonempty, since it contains 0.
Further, there is a non-negative element of that set (namely, 0) and
there exists a zero element (namely, zero).
\end{registration}

<<Register: $b$-radix $\NN$ is nonempty>>=
registration
  let beta be Real;
  cluster beta-radix_NAT -> non empty;
  correctness by ThZeroInBetaNAT;
  cluster non negative for Element of beta-radix_NAT;
  existence
  proof
    reconsider x=0 as Element of beta-radix_NAT by ThZeroInBetaNAT;
    take x;
    thus thesis;
  end;
  cluster zero for Element of beta-radix_NAT;
  existence
  proof
    reconsider x=0 as Element of beta-radix_NAT by ThZeroInBetaNAT;
    take x;
    thus thesis;
  end;
end;
@ 

\begin{theorem}
Let $b>1$ be a natural number. Then the set of $b$-radix $\NN$ is just
the usual set $\NN$.
\end{theorem}

\begin{proof}
We see that $b$-radix $\NN$ is a subset of $\NN$. Let $y$ be an element
of $b$-radix $\NN$. Then either $y=0$ (hence in $\NN$) or $y\neq0$,
which means there is a decimal expansion and the resulting value belongs
to $\NN$. Either way, $y\in\NN$. Since $y$ is arbitrary, this
establishes the first claim.

The second claim is that $\NN$ is a subset of $b$-radix $\NN$. Let $y$
be an arbitrary element of $\NN$. Then either $y=0$ (hence an element of
$b$-radix $\NN$ by a previous theorem) or $y\neq0$. In the latter case,
we can take its decimal expansion, and its value belongs to the set
$b$-radix $\NN$. But its value is just $y$. Hence we establish every
element $\NN$ is an element of $b$-radix $\NN$.

Since we have established each set is a subset of the other, this
establishes the set equality we sought.
\end{proof}

<<Theorem: identify $b$-radix $\NN$ with $\NN$ when $b\in\NN$ is greater than one>>=
theorem ThBetaRadixNatCompatibility:
  for b being Nat st b > 1 holds b-radix_NAT = NAT
proof
  let b be Nat;
  assume A1: b > 1;
  for y being object st y in b-radix_NAT holds y in NAT
  proof
    let y be object;
    assume y in b-radix_NAT;
    then consider x being Element of REAL such that
    B1: y = x and
    B2: x = 0 or (ex d being XFinSequence of NAT
    st d.((len d)-1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
    & x = beta_integer_value(d,b));
    per cases by B2;
    suppose x = 0;
      hence thesis by B1;
    end;
    suppose ex d being XFinSequence of NAT
      st d.((len d)-1) <> 0
      & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
      & x = beta_integer_value(d,b);
      then consider d being XFinSequence of NAT such that
      B3: d.((len d)-1) <> 0
      & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
      & x = beta_integer_value(d,b);
      thus y in NAT by B1, B3, ORDINAL1:def 12;
    end;
  end;

  then A2: b-radix_NAT c= NAT by TARSKI:def 3;
  for x being object st x in NAT holds x in b-radix_NAT
  proof
    let x be object;
    assume B1: x in NAT;
    then reconsider n=x as Nat;
    per cases;
    suppose n = 0;
      hence thesis by ThZeroInBetaNAT;
    end;
    suppose B2: n <> 0;
      ex d being XFinSequence of NAT
      st d.((len d)-1) <> 0
      & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
      & n = beta_integer_value(d,b)
      proof
        take d = digits(n,b);
        thus thesis by A1, B2, NUMERAL1:def 2;
      end;
      hence x in b-radix_NAT by B2,ThBetaNATCriterion;
    end;
  end;
  then NAT c= b-radix_NAT by TARSKI:def 3;
  hence b-radix_NAT = NAT by A2, XBOOLE_0:def 10;
end;
@ %def ThBetaRadixNatCompatibility

\begin{theorem}
Let $\beta$ be a positive real.
Let $x$ be an element of $\beta$-radix $\NN$.
Then $x\geq0$.
\end{theorem}

\begin{proof}[Proof sketch]
This boils down to two cases:
\begin{enumerate}
\item $x=0$, in which case we're done.
\item $x\neq0$, in which case there's a digit-expansion for $x$, and
  this gives us $x$ as the sum of non-negative values, which means $x$
  must be non-negative.
\end{enumerate}
Either way, we're forced to conclude $x\geq0$.
\end{proof}

<<Theorem: $\beta$-radix $\NN$ is non-negative>>=
theorem ThBetaRadixNATAreNonNegative:
  for beta being positive Real
  for x being Element of beta-radix_NAT
  holds x >= 0
proof
  let beta be positive Real;
  let x be Element of beta-radix_NAT;
  per cases;
  suppose x = 0;
    hence thesis;
  end;
  suppose x <> 0;
    then consider d being XFinSequence of NAT such that
    A1: d.((len d) - 1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < beta)
    & x = beta_integer_value(d,beta) by ThBetaNATCriterion;
    consider d9 being XFinSequence of REAL such that
    A2: dom d9 = dom d
    & (for j being Nat st j in dom d9 holds d9.j = (d.j)*(beta |^ j))
    & beta_integer_value(d,beta) = Sum d9
    by Def3a;
    for j being Nat st j in dom d9 holds d9.j >= 0
    proof
      let j be Nat;
      assume A3: j in dom d9;
      beta to_power j > 0;
      then beta |^ j > 0;
      then (d.j) * (beta |^ j) >= 0;
      hence thesis by A2,A3;
    end;
    then Sum d9 >= (len d9)*0 by AFINSQ_2:60;
    hence x >= 0 by A1,A2;
  end;
end;
@ %def ThBetaRadixNATAreNonNegative

\begin{registration}
Let $\beta$ be a positive real number.
Then elements of $\beta$-radix $\NN$ are non-negative.
\end{registration}

<<Register: elements of $\beta$-radix $\NN$ are non negative>>=
registration
  let beta be positive Real;
  cluster -> non negative for Element of beta-radix_NAT;
  correctness by ThBetaRadixNATAreNonNegative;
end;
@

\begin{theorem}
Let $n$ be an element of $\NN_{b}$. If $0<n$, then $1\leq n$.
\end{theorem}

<<Theorem: let $n\in\NN_{b}$, if $0<n$, then $1\leq n$>>=
theorem ThSmallestPositiveBetaRadixNat:
  for n being Element of b-radix_NAT
  st 0 < n
  holds 1 <= n
proof
  let n be Element of b-radix_NAT;
  assume A1: 0 < n;
  then consider d being XFinSequence of NAT such that
  A2: d.((len d)-1) <> 0
  & (for j being Nat st j in dom d holds 0 <= d.j & d.j < b)
  & n = beta_integer_value(d,b)
  by ThBetaNATCriterion;
  consider d9 being XFinSequence of REAL such that
  A3: dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(b |^ i))
  & beta_integer_value(d,b) = Sum d9
  by Def3a;

  set y = (d.((len d) - 1)) * (b to_power ((len d) - 1));
  for r being Real st r in rng d9 holds 0 <= r
  proof
    let r be Real;
    assume r in rng d9;
    then consider i being object such that
    B1: i in dom d9 & d9.i = r by FUNCT_1:def 3;
    reconsider i as Element of NAT by B1;
    r = (d.i)*(b to_power i) by A3, B1;
    hence 0 <= r;
  end;
  then A5: d9 is nonnegative-yielding by PARTFUN3:def 4;
  then len d9 = 0 implies contradiction by A1, A2, A3, AFINSQ_2:62;
  then len d9 > 0;
  then 0 + len d9 > 0;
  then A6: len d9 >= 1 by NAT_1:19;
  ex x being object st (x in dom d9 & d9.x = y)
  proof
    1 <= len d by A3,A6;
    then (len d) - 1 in NAT by INT_1:5;
    then reconsider x=(len d) - 1 as Nat;
    take x;
    (len d) - 1 < (len d) - 0 by XREAL_1:15;
    then (len d) - 1 < (len d);
    then x < len d;
    then x < len d9 by A3;
    hence x in dom d9 by AFINSQ_1:86;
    hence d9.x = (d.x) * (b to_power x) by A3
              .= y;
  end;
  then Sum d9 >= y by A5, A6, AFINSQ_2:61;
  then A7: n >= y by A2,A3;
  y >= 1
  proof
    d.((len d) - 1) <> 0 by A2;
    then d.((len d) - 1) > 0;
    then d.((len d) - 1) >= 0 + 1 by INT_1:7;
    then B1: d.((len d) - 1) >= 1;
    (len d) >= 1 by A3,A6;
    then (len d) = 1 or (len d) > 1 by NAT_1:25;
    then per cases;
    suppose len d = 1;
      then (len d) + (- 1) = 0;
      then (b to_power ((len d) - 1)) = 1 by POWER:24;
      hence thesis by B1;
    end;
    suppose len d > 1;
      then (len d) - 1 > 0 by XREAL_1:50;
      then (b to_power ((len d) - 1)) > 1 by Def1, POWER:35;
      then 1 <= (b to_power ((len d) - 1)) & 1 <= d.((len d) -1) by B1;
      then 1 * 1 <= (d.((len d) - 1)) * (b to_power ((len d) - 1)) by XREAL_1:66;
      hence thesis;
    end;
  end;
  hence n >= 1 by A7, XXREAL_0:2;
end;
@ %def ThSmallestPositiveBetaRadixNat

\begin{lemma}
Let $d$ be a finite sequence, let $x$ be an object. If $i\in\dom(d)$,
then $(\langle x\rangle\wedge d)_{i+1}=d_{i}$.
\end{lemma}

\begin{proof}[Proof sketch]
This is because $\|(x)\|\leq i+1$ and $i+1<\|d\|$, which gives the result.
\end{proof}

<<Lemma: [[(<%x%> ^ d).(i + 1) = d.i]]>>=
LmShiftIndex:
  for i being Nat
  for d being XFinSequence
  for x being object
  st i in dom d
  holds (<%x%> ^ d).(i + 1) = d.i
proof
  let i be Nat;
  let d be XFinSequence;
  let x be object;
  assume A1: i in dom d;
  A2: 1 = len <%x%> by AFINSQ_1:def 4;
  len (<%x%>) <= i + 1 & i + 1 < len (<%x%> ^ d)
  proof
    thus len (<%x%>) <= i + 1 by A2, XREAL_1:38;
    i + 1 < 1 + (len d) by A1, AFINSQ_1:86, XREAL_1:6;
    hence i + 1 < len (<%x%> ^ d) by A2, AFINSQ_1:17;
  end;
  hence (<%x%> ^ d).(i + 1) = d.((i + 1) -1) by A2, AFINSQ_1:19
                           .= d.i;
end;
@ %def LmShiftIndex

\begin{theorem}
Let $m\in\NN_{\beta}$. Then $\beta m\in\NN_{\beta}$.
\end{theorem}

\begin{proof}[Proof sketch]
If $m=0$, then the result is obvious. When $m\neq0$, we need to
construct a sequence $d'$ such that $d'_{N}\neq0$ where $N+1=\|d'\|$ is
the length of $d'$, and $0\leq d'_{j}<\beta$ for each $j$, and $\beta m=\sum d'_{j}\beta^{j}$.
We observe that if $d$ is the $\beta$-expansion of $m$, then
$d'=\langle0\rangle\wedge d$ is the desired sequence. We just need to
prove it satisfies the desired properties.
\end{proof}

<<Theorem: $\beta\NN_{\beta}\subset\NN_{\beta}$>>=
<<Lemma: [[(<%x%> ^ d).(i + 1) = d.i]]>>

theorem LmLeftShiftOnceBetaRadixNAT:
  for beta being positive Real
  for m being Element of beta-radix_NAT
  holds beta*m in beta-radix_NAT
proof
  let beta be positive Real;
  let m be Element of beta-radix_NAT;
  per cases;
  suppose A1: m = 0;
    then beta*m = m;
    hence thesis;
  end;
  suppose A2: m <> 0;
    then consider d being XFinSequence of NAT such that
    A3: d.((len d) - 1) <> 0
    & (for j being Nat st j in dom d holds 0 <= d.j & d.j < beta)
    & m = beta_integer_value(d,beta)
    by ThBetaNATCriterion;
    set d1 = <%0%> ^ d;
    A4: len <%0%> = 1 by AFINSQ_1:def 4;
    A5: d1.((len d1) - 1) <> 0
    proof
      (len d) - 1 in dom d by A3, FUNCT_1:def 2;
      then d.((len d) - 1) = d1.((len <%0%>) + ((len d) - 1)) by AFINSQ_1:def 3
                          .= d1.((1 + (len d)) - 1) by A4
                          .= d1.((len d1) - 1) by A4, AFINSQ_1:def 3;
      hence thesis by A3;
    end;
    A6: for j being Nat st j in dom d1 holds 0 <= d1.j & d1.j < beta
    proof
      let j be Nat;
      assume B1: j in dom d1;
      per cases;
      suppose j = 0;
        hence thesis by AFINSQ_1:35;
      end;
      suppose j <> 0;
        then consider k being Nat such that
        B2: j = k + 1 by NAT_1:6;
        k + 1 < len d1 by B1, B2, AFINSQ_1:86;
        then k + 1 < (len <%0%>) + (len d) by AFINSQ_1:17;
        then (k + 1) -1 < (1 + len d) -1 by A4, XREAL_1:9;
        then B3: k in dom d by AFINSQ_1:86;
        then B4: 1 + k < (len <%0%>) + (len d)
        by A4, AFINSQ_1:86, XREAL_1:8;
        j = k + len <%0%> by B2, AFINSQ_1:def 4;
        then d1.j = d.(j - 1) by B2, B4, NAT_1:11, AFINSQ_1:18
                 .= d.k by B2;
        hence thesis by A3, B3;
      end;
    end;
    beta * m = beta_integer_value(d1,beta)
    <<Subproof: $\beta m=\sum_{j}d^{\prime}_{j}$>>
    hence beta*m in beta-radix_NAT by A2,A5,A6,ThBetaNATCriterion;
  end;
end;
@ %def LmLeftShiftOnceBetaRadixNAT

\begin{proof}[Subproof ($\beta m=\sum_{j}d^{\prime}_{j}$)]
We begin by constructing the summands $s_{j}=d_{j}\beta^{j}$ and $s'_{j}=d'_{j}\beta^{j}$,
and we will show that $s'_{j}=(\langle0\rangle\wedge s)_{j}$. The basic
roadmap will be:
\begin{itemize}
\item[$(B_{1})$] $m=\sum s$
\item[$(B_{2})$] $\beta m=\sum s'$ 
\item[$(B_{3})$] $\sum s'_{j}=\sum_{j=1}s'_{j}$
\item[$(B_{4})$] $1<\|s'\|=1+\|d\|$ 
\item[$(B_{5})$] $\|s'|_{j>0}\| = \|\beta s\|$   
\item[$(\star)$] $s'_{i+1}=(\beta s)_{i}$
\end{itemize}
Hence $\sum s'=\sum s$.
\end{proof}

<<Subproof: $\beta m=\sum_{j}d^{\prime}_{j}$>>=
proof
  consider d9 being XFinSequence of REAL such that
  B1: dom d9 = dom d
  & (for i being Nat st i in dom d9 holds d9.i = (d.i)*(beta |^ i))
  & beta_integer_value(d, beta) = Sum d9
  by Def3a;
  consider d91 being XFinSequence of REAL such that
  B2: dom d91 = dom d1
  & (for i being Nat st i in dom d91 holds d91.i = (d1.i)*(beta |^ i))
  & beta_integer_value(d1,beta) = Sum d91
  by Def3a;
  d91 = <%0%> ^ (d91 /^ 1)
  proof
    0 < 1 + len d;
    then 0 < len (<%0%> ^ d) by A4, AFINSQ_1:17;
    then Z1: 0 in dom d91 by B2, AFINSQ_1:66;
    then Z2: dom (d91) /\ 1 = 1 & dom (<% d91.0 %>) = 1
    by CARD_1:49, AFINSQ_1:def 4, ZFMISC_1:46;
    for i being object st i in dom (d91) /\ 1 holds d91.i = <% d91.0 %>.i
    proof
      let i be object;
      assume i in dom (d91) /\ 1;
      then i = 0 by Z2, CARD_1:49, TARSKI:def 1;
      hence thesis;
    end;
    then Z3: d91 | 1 = <% d91.0 %> by Z2, FUNCT_1:46;
    d91.0 = (d1.0)*(beta |^ 0) by B2,Z1
         .= 0 *(beta |^ 0) by AFINSQ_1:35
         .= 0;
    hence thesis by Z3;
  end;
  then
  B3: Sum d91 = (Sum <%0%>) + Sum (d91 /^ 1) by AFINSQ_2:55
             .= 0 + Sum (d91 /^ 1) by AFINSQ_2:53;
  B4: 1 < len d91 & len d91 = 1 + len d
  proof
    for r being Real st r in rng d9 holds 0 <= r
    proof
      let r be Real;
      assume r in rng d9;
      then consider i being object such that
      Z1: i in dom d9 & d9.i = r by FUNCT_1:def 3;
      reconsider i as Nat by Z1;
      r = (d.i)*(beta to_power i) by B1, Z1;
      hence 0 <= r;
    end;
    then d9 is nonnegative-yielding by PARTFUN3:def 4;
    then Sum d9 = 0 iff (len d9 = 0 or d9 = (len d9) --> 0)
    by AFINSQ_2:62;
    then C1: 1 + len d > 1 + 0 by A2, A3, B1, XREAL_1:8;
    len d91 = len (<%0%>) + len d by B2, AFINSQ_1:17
           .= 1 + len d by AFINSQ_1:def 4;
    hence thesis by C1;
  end;
  then
  B5: len (d91 /^ 1) = (len d91) - 1 by AFINSQ_2:7
                    .= ((len <%0%>) + (len d)) - 1 by B2, AFINSQ_1:17
                    .= (1 + (len d)) - 1 by AFINSQ_1:def 4
                    .= len (beta (#) d9) by B1, VALUED_1:def 5;
  for i being Nat
  st i < len (d91 /^ 1)
  holds (d91 /^ 1).i = (beta (#) d9).i
  proof
    let i be Nat;
    assume Z1: i < len (d91 /^ 1);
    dom (beta (#) d9) = dom d9 by VALUED_1:def 5;
    then Z2: i in dom (d91 /^ 1) & i in dom (beta (#) d9)
    & i in dom d9
    by B5,Z1,AFINSQ_1:86;
    len (d91 /^ 1) = (len d91) -' 1 by AFINSQ_2:def 2
                  .= (len d91) - 1 by B4, XREAL_0:def 2;
    then Z3: i + 1 in dom d91 by Z1, XREAL_1:20, AFINSQ_1:86;
    Z4: d1.(i + 1) = d.i by B1, Z2, LmShiftIndex;
    (d91 /^ 1).i = d91.(i + 1) by Z2, AFINSQ_2:def 2
                .= (d1.(i + 1)) * (beta to_power (i + 1)) by B2,Z3
                .= (d.i) * ((beta to_power i) * (beta to_power 1))
                   by Z4, POWER:27
                .= beta * ((d.i) * (beta to_power i))
                .= beta * (d9.i) by Z2, B1
                .= (beta (#) d9).i by VALUED_1:6;
    hence (d91 /^ 1).i = (beta (#) d9).i;
  end;
  then Sum (d91 /^ 1) = Sum (beta (#) d9) by B5, AFINSQ_1:9
                     .= beta * m by A3, B1, AFINSQ_2:64;
  hence thesis by B2,B3;
end;
@ 

\begin{theorem}
Let $\beta>0$ be real, let $m\in\NN_{\beta}$, let $N\in\NN$.
Then $m\beta^{N}\in\NN_{\beta}$.
\end{theorem}

<<Theorem: left shifting $\NN_{\beta}$>>=
theorem ThLeftShiftBetaRadixNAT:
  for beta being positive Real
  for m being Element of beta-radix_NAT
  for N being Integer st N in NAT
  holds m*(beta to_power N) in beta-radix_NAT
proof
  let beta be positive Real;
  let m be Element of beta-radix_NAT;
  let N be Integer;
  assume A1: N in NAT;
  then reconsider N1=N as Nat;
  defpred P[Nat] means m*(beta to_power $1) in beta-radix_NAT;
  A2: for n being Nat st (for k being Nat st k < n holds P[k])
  holds P[n]
  proof
    let n be Nat;
    assume B1: for k being Nat st k < n holds P[k];
    per cases;
    suppose n = 0;
      then m*(beta to_power n) = m * 1 by POWER:24;
      hence thesis;
    end;
    suppose n <> 0;
      then consider k being Nat such that
      B2: n = k + 1 by NAT_1:6;
      k < n by B2, NAT_1:16;
      then B3: m * (beta to_power k) in beta-radix_NAT by B1;
      m * (beta to_power n) 
       = m * ((beta to_power k) * (beta to_power 1)) by B2, POWER:27
      .= beta * (m * (beta to_power k));
      hence P[n] by B3, LmLeftShiftOnceBetaRadixNAT;
    end;
  end;
  for k being Nat holds P[k] from NAT_1:sch 4(A2);
  then P[N1];
  hence thesis;
end;
@ %def ThLeftShiftBetaRadixNAT

\begin{definition}
We define the set of $\beta$-radix integers $\ZZ_{\beta}$ to be the
subset of real numbers $x$ such that either $x\in\NN_{\beta}$ or $-x\in\NN_{\beta}$.
\end{definition}

<<Definition: $\beta$-radix integers>>=
definition
  let beta be Real;
  func beta-radix_INT -> Subset of REAL means :Def6:
  for x being Real
  holds x in it iff x in beta-radix_NAT or -x in beta-radix_NAT;
  existence
  proof
    set IT = {x where x is Element of REAL : x in beta-radix_NAT or -x in beta-radix_NAT };
    
    for y being object st y in IT holds y in REAL
    proof
      let y be object;
      assume y in IT;
      then ex x being Element of REAL st x=y & (x in beta-radix_NAT or -x in beta-radix_NAT);
      hence y in REAL;
    end;
    then reconsider IT as Subset of REAL by TARSKI:def 3;
    take IT;
    for x being Real holds x in IT iff (x in beta-radix_NAT or -x in beta-radix_NAT)
    proof
      let x be Real;
      thus x in IT implies (x in beta-radix_NAT or -x in beta-radix_NAT)
      proof 
        assume x in IT;
        then ex y being Element of REAL st y=x & (y in beta-radix_NAT
        or -y in beta-radix_NAT);
        hence thesis;
      end;
      assume (x in beta-radix_NAT or -x in beta-radix_NAT);
      then x in REAL & (x in beta-radix_NAT or -x in beta-radix_NAT) by XREAL_0:def 1;
      hence x in IT;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    defpred P[Real] means ($1 in beta-radix_NAT or -$1 in beta-radix_NAT);
    let X,Y be Subset of REAL such that
    A1: for x being Real holds x in X iff P[x] and
    A2: for x being Real holds x in Y iff P[x];
    for x being Element of REAL holds x in X iff x in Y
    proof
      let x be Element of REAL;
      hereby 
        assume x in X;
        then P[x] by A1;
        hence x in Y by A2;
      end;
      assume x in Y;
      then P[x] by A2;
      hence x in X by A1;
    end;
    hence X = Y by SUBSET_1:3;
  end;
end;
@ %def -radix_INT Def6

\begin{voc}
We need to add [[-radix_INT]] as a functor (``term'') to our vocabulary file.
\end{voc}

<<DICT/float-1.voc>>=
O-radix_INT
@ 

\begin{theorem}
Let $\beta>0$ be a real number.
Then $\NN_{\beta}\subset\ZZ_{\beta}$.
\end{theorem}

<<Theorem: $\NN_{\beta}\subset\ZZ_{\beta}$>>=
theorem Th20:
  for beta being Real
  holds beta-radix_NAT c= beta-radix_INT
proof
  let beta be Real;
  for x being Element of REAL st x in beta-radix_NAT
  holds x in beta-radix_INT by Def6;
  hence beta-radix_NAT c= beta-radix_INT by SUBSET_1:2;
end;
@ 

\begin{theorem}
Let $\beta$ be a real number. Zero is an element of $\ZZ_{\beta}$.
\end{theorem}

<<Theorem: $0\in\ZZ_{\beta}$>>=
theorem ThZeroInBetaINT:
  for beta being Real holds 0 in beta-radix_INT
proof
  let beta be Real;
  0 in beta-radix_NAT by ThZeroInBetaNAT;
  hence thesis by Def6;
end;
@ %def ThZeroInBetaINT

\begin{registration}
Let $\beta$ be real. Then $\ZZ_{\beta}$ is nonempty, and there exists a
zero element of $\ZZ_{\beta}$.
\end{registration}

<<Register: $\ZZ_{\beta}$ is nonempty, and contains a zero element>>=
registration
  let beta be Real;
  cluster beta-radix_INT -> non empty;
  coherence by ThZeroInBetaINT;
  cluster zero for Element of beta-radix_INT;
  existence
  proof
    reconsider x=0 as Element of beta-radix_INT by ThZeroInBetaINT;
    take x;
    thus thesis;
  end;
end;
@

\begin{theorem}
Let $\beta$ be any real number.
Let $x$ be a real number.
Then $x\in\ZZ_{\beta}$ if and only if there exists a $k\in\NN_{\beta}$
such that $x=k$ or $x=-k$.
\end{theorem}

\begin{thm-remark}
This is a generalization of Mizar's criterion for an object being in the
set $\ZZ$.
\end{thm-remark}

\begin{proof}[Proof sketch]
There are two claims which need to be proven:
\begin{itemize}
\item[$(\Longrightarrow)$] if $x\in\ZZ_{\beta}$, then there exists a
  $k\in\NN_{\beta}$ such that $x=k$ or $x=-k$, which follows by definition; and
\item[$(\Longleftarrow)$] assume there exists a $k\in\NN_{\beta}$ such
  that $x=k$ or $x=-k$, then $x\in\NN_{\beta}$ or $-x\in\NN_{\beta}$,
  and the result follows immediately. 
\end{itemize}
Either way, the proof follows by unfolding definitions.
\end{proof}

<<Theorem: criterion for being a member of $\ZZ_{\beta}$>>=
theorem Th24:
  for beta being Real
  for x being Real
  holds x in beta-radix_INT
    iff ex k being Element of beta-radix_NAT st x=k or x=-k
proof
  let beta be Real;
  let x be Real;
  
  thus x in beta-radix_INT
  implies ex k being Element of beta-radix_NAT st x=k or x=-k
  proof
    assume x in beta-radix_INT;
    then x in beta-radix_NAT or -x in beta-radix_NAT by Def6;
    then consider k being Element of beta-radix_NAT such that
    A1: x=k or -x=k;
    take k;
    thus x=k or x = -k by A1;
  end;
  
  thus (ex k being Element of beta-radix_NAT st x=k or x=-k)
  implies x in beta-radix_INT
  proof
    given k being Element of beta-radix_NAT such that 
    A2: x=k or x=-k;
    x in beta-radix_NAT or -x in beta-radix_NAT by A2;
    hence x in beta-radix_INT by Def6;
  end;
end;
@ %def Th24

\begin{theorem}
Let $b\in\NN$. If $b>1$, then $\ZZ_{b}=\ZZ$.
\end{theorem}

\begin{thm-remark}
This is one way to check the consistency of our generalization of
$\beta$-integers: when we restrict attention to a valid radix, we
recover the familiar integers.
\end{thm-remark}

<<Theorem: if $b>1$ is a natural number, then $\ZZ_{b}=\ZZ$>>=
theorem ThBRadixINTCompatibility:
  for b being Nat st b > 1
  holds b-radix_INT = INT
proof
  let b be Nat;
  assume A1: b > 1;
  then A2: b-radix_NAT = NAT by ThBetaRadixNatCompatibility;
  for x being object st x in b-radix_INT holds x in INT
  proof
    let x be object;
    assume B1: x in b-radix_INT;
    then reconsider y=x as Element of REAL;
    y in NAT or -y in NAT by A2, B1, Def6;
    then consider k being Nat such that
    B2: y=k or -y=k;
    y = k or y = -k by B2;
    hence thesis by INT_1:def 1;
  end;
  then A3: b-radix_INT c= INT by TARSKI:def 3;

  for x being object st x in INT holds x in b-radix_INT
  proof
    let x be object;
    assume B1: x in INT;
    then reconsider y=x as Integer;
    ex k being Nat st y = k or y = -k by B1, INT_1:def 1;
    then consider k being Nat such that
    B2: k = y or k = - y;
    reconsider ell=k as Element of b-radix_NAT by A2, ORDINAL1:def 12;
    y = ell or y = -ell by B2;
    hence x in b-radix_INT by Th24;
  end;
  then INT c= b-radix_INT by TARSKI:def 3;
  hence b-radix_INT = INT by A3, XBOOLE_0:def 10;
end;
@ %def ThBRadixINTCompatibility

\begin{theorem}
Let $n\in\ZZ_{b}$. If $0\leq n$, then $n\in\NN_{b}$.
\end{theorem}

\begin{proof}[Proof sketch]
If $n=0$, then $n\in\NN_{b}$. If $n>0$, then $n\in\NN_{b}$.
\end{proof}

<<Theorem: let $n\in\ZZ_{b}$; if $0\leq n$, then $n\in\NN_{b}$>>=
theorem ThPositiveBetaRadixIntAreBetaRadixNat:
  for n being Element of b-radix_INT
  st 0 <= n
  holds n in b-radix_NAT
proof
  let n be Element of b-radix_INT;
  assume A1: 0 <= n;
  then per cases;
  suppose 0 = n;
    hence thesis;
  end;
  suppose A2: n > 0;
    consider k being Element of b-radix_NAT such that
    A3: n = k or n = -k by Th24;
    thus thesis by A2,A3;
  end;
end;
@ %def ThPositiveBetaRadixIntAreBetaRadixNat

\begin{theorem}
Let $n\in\ZZ_{b}$. If $0<n$, then $1\leq n$.
\end{theorem}

\begin{proof}[Proof sketch]
Since $0<n$, we see $n\in\NN_{b}$, and the result follows from a
previous theorem.
\end{proof}

<<Theorem: Let $n\in\ZZ_{b}$. If $0<n$, then $1\leq n$.>>=
theorem ThSmallestPositiveBetaRadixInt:
  for n being Element of b-radix_INT
  st 0 < n
  holds 1 <= n
proof
  let n be Element of b-radix_INT;
  assume A1: 0 < n;
  then n in b-radix_NAT by ThPositiveBetaRadixIntAreBetaRadixNat;
  hence 1 <= n by A1, ThSmallestPositiveBetaRadixNat;
end;
@ %def ThSmallestPositiveBetaRadixInt

\begin{theorem}
Let $x\in\ZZ_{\beta}$, then $-x\in\ZZ_{\beta}$.
\end{theorem}

This follows from 

<<Theorem: $\ZZ_{\beta}$ is closed under negation>>=
theorem ThBetaRadixIntClosedUnderNegation:
  for beta being positive Real
  for x being Element of beta-radix_INT
  holds -x in beta-radix_INT
proof
  let beta be positive Real;
  let x be Element of beta-radix_INT;
  ex k being Element of beta-radix_NAT st x = k or x = -k by Th24;
  hence -x in beta-radix_INT by Th24;
end;
@ %def ThBetaRadixIntClosedUnderNegation

\begin{theorem}
Let $\beta>0$ be real, let $N\in\NN$, let $m\in\ZZ_{\beta}$.
Then $m\beta^{N}\in\ZZ_{\beta}$.
\end{theorem}

\begin{proof}[Proof sketch]
We can write $m=k$ or $m=-k$ for some $k\in\NN_{\beta}$. In either case,
$k\beta^{N}\in\NN_{\beta}$, so we obtain the result.
\end{proof}

<<Theorem: $m\in\ZZ_{\beta}$ and $N\in\NN$, then $m\beta^{N}\in\ZZ_{\beta}$>>=
theorem ThLeftShiftBetaRadixINT:
  for beta being positive Real
  for m being Element of beta-radix_INT
  for N being Integer st N in NAT
  holds m*(beta to_power N) in beta-radix_INT
proof
  let beta be positive Real;
  let m be Element of beta-radix_INT;
  let N be Integer;
  assume A1: N in NAT;
  consider k being Element of beta-radix_NAT such that
  A2: m=k or m=-k by Th24;
  per cases by A2;
  suppose m=k;
    then m*(beta to_power N)=k*(beta to_power N)
    & k*(beta to_power N) in beta-radix_NAT by A1, ThLeftShiftBetaRadixNAT;
    hence thesis by Th20, TARSKI:def 3;
  end;
  suppose m=-k;
    then m*(beta to_power N)=-(k*(beta to_power N))
    & k*(beta to_power N) in beta-radix_NAT by A1, ThLeftShiftBetaRadixNAT;
    hence thesis by Th24;
  end;
end;
@ %def ThLeftShiftBetaRadixINT

\begin{theorem}
Let $c_{j}$ and $d_{j}$ be sequences of real numbers such that for each
$j\in\NN$ we have $0\leq c_{j}<b$ and $d_{j}=c_{j}b^{-j}$. Then 
$d_{j}$ is summable and moreover
\begin{equation}
\sum_{j=n+1}^{\infty}d_{j} < \frac{b^{1-n}}{1-b^{-1}}.
\end{equation}
\end{theorem}

We see that by direct calculation
\begin{align*}
\sum_{j=n+1}^{\infty}d_{j}
&=\sum_{j=n+1}c_{j}b^{-j}\\
&=\sum_{j=0}c_{j+n+1}b^{-j-n-1}\\
&=b^{-n-1}\sum_{j=0}c_{j+n+1}b^{-j}\\
&<b^{-n-1}\sum_{j=0}b\cdot b^{-j}=\frac{b^{-n-1}\cdot b}{1-b^{-1}}.
\end{align*}
The result follows immediately. We know, just by looking at it, that
$b^{-n}/(1-b)<1$, but Mizar will want a proof.

Since $b>1$ we have $1>b^{-1}>0$, so $1>1-b^{-1}$. Then $1/(1-b^{-1})>1$
and multiplying both sides by $b^{-n}$ yields
\begin{equation}
\frac{b^{-n}}{1-b^{-1}}>b^{-n}.
\end{equation}
I think this is the opposite of what we wanted, since we want to show
that
\begin{equation}
\sum^{n}_{j=0}d_{j}\leq x<\left(\sum^{n}_{j=0}d_{j}\right)+b^{1-n}
\end{equation}
We can see that
\begin{equation}
\frac{b^{-n}}{1-b^{-1}}=b^{-n+1}\left(\frac{b^{-1}-1+1}{1-b^{-1}}\right)=b^{-n+1}\left(\frac{1}{1-b^{-1}}-1\right).
\end{equation}

\begin{theorem}
Let $x$ be a real number, let $n$ and $N$ be natural numbers.
If $b^{n}\leq x<b^{n+1}$, then there exists a finite sequence $c_{j}$ of
length $N+1$ such that $c_{j}=d_{j}b^{-j}$ where $d_{j}$ is the
$b$-expansion of $x$, and $b^{n}\sum c_{j}\leq x<b^{n}(b^{-N}+\sum c_{j})$.
\end{theorem}

\begin{theorem}
Let $n$ be a natural number, let $x$ and $y$ be real numbers.
Suppose $b^{n}\leq x<b^{n+1}$ and $b^{n}\leq y<b^{n+1}$.
Let $c_{j}$ be the $b$-expansion of $x$, and $d_{j}$ be the
$b$-expansion of $y$.
Then $x < y$ if and only if there exists a natural number $N$ such that
for all $j<N$ we have $c_{j}=d_{j}$ and $c_{N}<d_{N}$.
\end{theorem}

<<Theorem: order of reals equivalent to lexicographic order of $b$-expansion>>=
theorem
  for n being Nat
  for x being Real st b to_power n <= x & x < b to_power (n + 1)
  for y being Real st b to_power n <= y & y < b to_power (n + 1)
  holds x < y
  iff ex N being Nat
      st (for j being Nat st j < N
          holds (b-expansion x).j = (b-expansion y).j)
      & (b-expansion x).N < (b-expansion x).N;

@ 


\begin{theorem}
Let $b$ be a valid radix natural number, let $x\in\NN$.
The $\beta$-expansion of $x$ in base $b$ is the same as the digits of
$x$ in base $b$, modulo re-indexing, and the $\beta$ integer value is
the same as the value of these digits in base $b$. 
\end{theorem}

\begin{proof}[Proof outline]
We take $N=\lfloor\log_{b}(x)\rfloor+1$. We need to prove the length of
the digit sequence $\|d\|=N$, and that the sequence of digits $d$ in
base $b$ is just a reindexing of the $b$-expansion of $x$. Proving the
$\beta$-integer value of the digits is $x$ is trivial thanks to our
previous registration identifying it with the numeral value relative to
a base-$b$ value of the digit expansion of $x$.
\end{proof}

<<Theorem: consistency check of $\beta$-expansion and digits>>=
theorem
  for b being valid_radix Nat
  for x being Nat st x <> 0
  ex N being Nat, d being XFinSequence of NAT
  st N = [\log(b,x)/] + 1 & len d = N &
  (for i being Nat st i in dom d holds d.(N - i) = (b-expansion x).i)
  & beta_integer_value(d,b) = x
proof
  let b be valid_radix Nat;
  let x be Nat;
  assume A1: x <> 0;
  [\log(b,x)/] in NAT
  <<Subproof: $\lfloor\log_{b}(x)\rfloor\in\NN$>>
  then reconsider N = [\log(b,x)/] + 1 as Nat by ORDINAL1:def 12;
  take N;
  take d = digits(x,b);
  thus N = [\log(b,x)/] + 1;
  thus len d = N;
::>            *4
  thus (for i being Nat st i in dom d holds d.(N - i) = (b-expansion x).i)
  proof 
    let i be Nat;
    assume Z2: i in dom d;
    thus d.(N - i) = (b-expansion x).i;
::>                                  *4
  end;
  thus beta_integer_value(d,b) = value(d,b)
                              .= x by Def1,NUMERAL1:5;
end;
@

\begin{proof}[Subproof ($\lfloor\log_{b}(x)\rfloor\in\NN$)]
This can be checked by cases, since $x > 1$ or $x=0$ or $x=1$.
These are all straightforward since $b>1$.
\end{proof}

<<Subproof: $\lfloor\log_{b}(x)\rfloor\in\NN$>>=
proof
  A2: b > 1 & b > 0 & b <> 1 by Def1;
  per cases by NAT_1:25;
  suppose x > 1;
    then b > 1 & x > 1 & 1 > 0 by Def1;
    then log(b,x) > log(b,1) by Def1,POWER:57;
    then log(b,x) > 0 by A2,POWER:51;
    then [\log(b,x)/] >= 0 & [\log(b,x)/] is Element of NAT by INT_1:53;
    hence thesis;
  end;
  suppose x = 0;
    hence thesis by A1;
  end;
  suppose x = 1;
    then log(b,x) = log(b,1)
                 .= 0 by A2,POWER:51;
    then [\log(b,x)/] = [\0/]
                     .= 0;
    hence thesis;
  end;
end;  
@ 

\subsection{Extended Integers}
We will need to define the extended integers for usage as exponents in
floating-point formats. This is in analogy to the extended reals, which
just adjoins infinities to the integers. We will follow the
formalization of extended natural numbers in the Mizar article [[COUNTERS]]
for guidance in which theorems to prove.

<<Subsection: Defining the extended integers>>=
::: Extended Integers

<<Definition: Extended Integers>>

<<Theorem: $\ExtNN\properSubset\ExtZZ$ and $\ExtZZ\properSubset\ExtRR$>>

<<Register: $\ExtZZ$ is nonempty and infinite>>

<<Definition: [[ext-integer]] attribute>>

<<Register: $\pm\infty\in\ExtZZ$, $\ExtNN\subset\ExtZZ\subset\ExtRR$>>

<<Register: zero and nonzero extended integers, applicability of [[ext-integer]] to elements of $\ExtNN$, $\ExtZZ$>>

<<Define: [[ExtInt]] type>>

<<Register: sethood for [[ExtInt]]>>

<<Theorem: $\forall x, x\in\ExtZZ\iff x\in\ZZ\lor x=-\infty\lor x=+\infty$>>

<<Register: 0 is an extended integer, as are integers>>

<<Register: ``natural'' numbers are ``extended integer'' numbers>>

<<Register: positive, negative, non-negative, non-positive are adjectives for extended integers>>

<<Register: negating an extended integer is an extended integer>>

<<Register: Addition, multiplication, maximum, and minimum of extended integers are extended integers.>>

<<Register: subtracting extended integers yields an extended integer>>

<<Register: non-negative extended integers are extended naturals>>

<<Theorem: positive extended integers are either positive integers or $+\infty$>>

<<Theorem: negative extended integers are either negative integers or $-\infty$>>
@ 

\begin{definition}
We define the \define{Extended Integers} to be the subset $\ExtZZ$ of
the extended reals $\ExtRR$ such that $\ExtZZ=\ZZ\cup\{\pm\infty\}$.
\end{definition}

\begin{proof}[Proof (well-definedness)]
Mizar requires we prove newly defined terms are well-defined. For terms
defined using [[equals]], this amounts to showing the type for the
explicitly given term is correct.
We need to prove that this term we construct \emph{really is} a subset
of $\ExtRR$, which boils down to showing $\{\pm\infty\}\subset\ExtRR$
and $\ZZ\subset\ExtRR$, then their union is precisely a subset of $\ExtRR$.
\end{proof}

<<Definition: Extended Integers>>=
definition
  func ExtINT -> Subset of ExtREAL equals
  INT \/ {-infty,+infty};
  coherence
  proof
    INT c= REAL & REAL c= ExtREAL by XBOOLE_0:def 8, NUMBERS:5,31; then
    A1: INT c= ExtREAL by XBOOLE_1:1;
    {-infty,+infty} c= ExtREAL by XBOOLE_1:7, XXREAL_0:def 4;
    hence thesis by A1, XBOOLE_1:8;
  end;
end;
@ %def ExtINT

\begin{voc}
We will tell Mizar to add [[ExtINT]] as a new constant for its lexer to
recognize.
\end{voc}

<<DICT/float-1.voc>>=
OExtINT
@ 

\begin{theorem}
We see that $\ZZ\properSubset\ExtZZ$, $\ExtNN\properSubset\ExtZZ$, and $\ExtZZ\properSubset\ExtRR$.
\end{theorem}

\begin{proof}[Proof sketch]
We see that $+\infty\in\ExtZZ$ but $+\infty\notin\ZZ$, which proves the
first claim. Similarly, we see $-\infty\in\ExtZZ$ but
$-\infty\notin\ExtNN$, which proves the second claim. And there exists
some $x\in\RR$ such that $x\notin\ZZ$, and $x\notin\{\pm\infty\}$, which
gives us some $x\in\ExtRR$ but $x\notin\ExtZZ$ establishing the third claim.
\end{proof}

<<Theorem: $\ExtNN\properSubset\ExtZZ$ and $\ExtZZ\properSubset\ExtRR$>>=
theorem Th2:
  INT c< ExtINT & ExtNAT c< ExtINT & ExtINT c< ExtREAL
proof
  thus INT c< ExtINT
  proof
    +infty in {+infty,-infty} by TARSKI:def 2; then
    A1: +infty in ExtINT by XBOOLE_0:def 3;
    not +infty in INT;
    hence thesis by A1, XBOOLE_0:def 8, XBOOLE_1:7;
  end;
  thus ExtNAT c< ExtINT
  proof
    -1 in INT & not -1 in NAT & not -1 in {+infty} by INT_1:def 1;
    then A2: -1 in ExtINT & not -1 in ExtNAT by XBOOLE_0:def 3;
    NAT c= INT & {+infty} c= {-infty,+infty} by NUMBERS:17, ZFMISC_1:7;
    hence thesis by A2, COUNTERS:def 1, XBOOLE_1:13, XBOOLE_0:def 8;
  end;
  thus ExtINT c< ExtREAL
  proof
    not REAL c= INT by XBOOLE_0:def 10, NUMBERS:15,25;
    then consider x being object such that
    A3: x in REAL & not x in INT
    by TARSKI:def 3; 
    not x in {-infty,+infty} by A3, TARSKI:def 2;
    then x in ExtREAL & not x in ExtINT by A3, XXREAL_0:def 4, XBOOLE_0:def 3;
    hence thesis by XBOOLE_0:def 8;
  end;
end;
@ %def Th2

\begin{registration}
The set $\ExtZZ$ is nonempty and infinite.
\end{registration}

<<Register: $\ExtZZ$ is nonempty and infinite>>=
registration
  cluster ExtINT -> non empty infinite;
  coherence by Th2, FINSET_1:1, XBOOLE_0:def 8;
end;
@

\begin{definition}
Let $x$ be an object. We say $x$ is \define{ext-integer} if $x\in\ExtZZ$.
\end{definition}

<<Definition: [[ext-integer]] attribute>>=
definition
  let x be object;
  attr x is ext-integer means :Def2:
  x in ExtINT;
end;
@ %def ext-integer Def2

\begin{voc}
We will not tell Mizar to add [[ext-integer]] as a new attribute for its
lexer to recognize, because the term was used for a similar notation in
the article [[FVALUAT1]].
\end{voc}

\begin{registration}
We note that $\pm\infty$ is an extended-integer; extended integers are
also extended reals; and extended naturals are extended integers.
\end{registration}

<<Register: $\pm\infty\in\ExtZZ$, $\ExtNN\subset\ExtZZ\subset\ExtRR$>>=
registration
  cluster +infty -> ext-integer;
  coherence
  proof
    +infty in {+infty,-infty} by TARSKI:def 2;
    hence thesis by XBOOLE_0:def 3;
  end;
  cluster -infty -> ext-integer;
  coherence
  proof
    -infty in {+infty,-infty} by TARSKI:def 2;
    hence thesis by XBOOLE_0:def 3;
  end;
  cluster ext-integer -> ext-real for object;
  coherence;
  cluster ext-natural -> ext-integer for object;
  coherence
  proof
    let x be object;
    assume x is ext-natural;
    then x in ExtNAT by COUNTERS:def 2;
    hence thesis by Th2, TARSKI:def 3, XBOOLE_0:def 8;
  end;
end;
@

\begin{registration}
We observe there are zero and nonzero extended integers, and the
adjective ``extended-integer'' applies to elements of $\ExtNN$ as well
as $\ExtZZ$.
\end{registration}

<<Register: zero and nonzero extended integers, applicability of [[ext-integer]] to elements of $\ExtNN$, $\ExtZZ$>>=
registration
  cluster zero ext-integer for object;
  existence
  proof
    take 0;
    thus thesis;
  end;
  cluster non zero ext-integer for object;
  existence
  proof
    take 1;
    thus thesis;
  end;
  cluster ext-integer for set;
  existence
  proof
    take 0;
    thus thesis;
  end;
  cluster -> ext-integer for Element of ExtINT;
  coherence;
  cluster -> ext-integer for Element of ExtNAT;
  coherence;
end;
@

\begin{definition*}
We now define the shorthand \define{ExtInt} for an extended-integer-like
Extended real number.
\end{definition*}

Note that this is an un-numbered definition to Mizar, because it's
literally an abbreviation.

<<Define: [[ExtInt]] type>>=
definition
  mode ExtInt is ext-integer ExtReal;
end;
@ %def ExtInt

\begin{voc}
We can have Mizar recall the mode [[ExtInt]] was defined in another
article [[FVALUAT1]], so we reuse it.
\end{voc}

\begin{registration}
We note that the type [[ExtInt]] can be used interchangeably as
``element of Extended Integers'', and thus we instruct Mizar
accordingly. The technical jargon is that [[ExtInt]] has the ``sethood''
property (i.e., there exists a set of all [[ExtInt]]s).
\end{registration}

<<Register: sethood for [[ExtInt]]>>=
registration
  sethood of ExtInt
  proof
    take ExtINT;
    thus thesis by Def2;
  end;
end;
@

\begin{theorem}
Let $x$ be any object. Then $x\in\ExtZZ$ if and only if $x\in\ZZ$ or
$x=+\infty$ or $x=-\infty$.
\end{theorem}

<<Theorem: $\forall x, x\in\ExtZZ\iff x\in\ZZ\lor x=-\infty\lor x=+\infty$>>=
theorem Th4:
  for x being object
  holds x is ExtInt iff (x is Integer or x = -infty or x = +infty)
proof
  let x be object;
  thus x is ExtInt implies (x is Integer or x = -infty or x = +infty)
  proof
    assume A1: x is ExtInt;
    assume A2: not x is Integer & not x = -infty;
    x in INT \/ {-infty, +infty} by A1, Def2;
    then x in INT or x in {-infty, +infty} by XBOOLE_0:def 3;
    hence x = +infty by A2, TARSKI:def 2;
  end;
  thus (x is Integer or x = -infty or x = +infty) implies x is ExtInt
  proof
    assume x is Integer or x = -infty or x = +infty;
    then x in INT or x in {-infty,+infty} by INT_1:def 2, TARSKI:def 2;
    then x in INT \/ {-infty,+infty} by XBOOLE_0:def 3;
    hence x is ExtInt by Def2;
  end;
end;
@ %def Th4

\begin{registration}
We observe that zero is an extended integer, as are integers.
\end{registration}

<<Register: 0 is an extended integer, as are integers>>=
registration
  cluster zero -> ext-integer for object;
  coherence;
  cluster integer -> ext-integer for object;
  coherence by Th4;
end;
@

\begin{registration}
We note that ``natural'' numbers are ``extended integer'' numbers.
\end{registration}

<<Register: ``natural'' numbers are ``extended integer'' numbers>>=
registration
  cluster natural -> ext-integer for object;
  coherence;
end;
@ 

\begin{registration}
We can use ``positive'', ``negative'', and their negations, as
adjectives for extended integers.
\end{registration}

<<Register: positive, negative, non-negative, non-positive are adjectives for extended integers>>=
registration
  cluster positive for ExtInt;
  existence
  proof
    take 1;
    thus thesis;
  end;
  cluster non positive for ExtInt;
  existence
  proof
    take -1;
    thus thesis;
  end;
  cluster negative for ExtInt;
  existence
  proof
    take -1;
    thus thesis;
  end;
  cluster non negative for ExtInt;
  existence
  proof
    take 1;
    thus thesis;
  end;
end;
@ 

\begin{registration}
Negating an extended integer is an extended integer.
\end{registration}

<<Register: negating an extended integer is an extended integer>>=
registration
  let m be ExtInt;
  cluster - m -> ext-integer;
  coherence
  proof
    per cases by Th4;
    suppose m is Integer;
      then reconsider M=m as Integer;
      -M is Integer;
      hence thesis by XXREAL_3:def 3;
    end;
    suppose m=-infty;
      hence thesis by XXREAL_3:def 3;
    end;
    suppose m=+infty;
      hence thesis by XXREAL_3:def 3;
    end;
  end;
end;
@ 

\begin{registration}
Addition, subtraction, multiplication, maximum, and minimum of extended integers are extended integers.
\end{registration}

<<Register: Addition, multiplication, maximum, and minimum of extended integers are extended integers.>>=
registration
  let m, n be ExtInt;
  cluster min(m, n) -> ext-integer;
  coherence by XXREAL_0:def 9;
  cluster max(m, n) -> ext-integer;
  coherence by XXREAL_0:def 10;
  cluster m + n -> ext-integer;
  coherence
  <<Proof: adding extended integers yields an extended integer>>
  cluster m * n -> ext-integer;
  coherence
  <<Proof: multiplying extended integers yields an extended integer>>
end;
@

\begin{proof}[Proof sketch (adding extended integers)]
This boils down to a proof by cases, which is thoroughly
unenlightening. When adding integers together, we get an integer; when
adding infinity to an integer, we get an infinity.
\end{proof}

<<Proof: adding extended integers yields an extended integer>>=
proof
  per cases by Th4;
  suppose A1: m is Integer;
    then reconsider M=m as Integer;
    per cases by Th4;
    suppose n is Integer;
      then reconsider N=n as Integer;
      M + N is Integer;
      hence thesis by XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A1, XXREAL_3:def 2;
    end;
    suppose n=+infty;
      hence thesis by A1, XXREAL_3:def 2;
    end;
  end;
  suppose A2: m=-infty;
    per cases by Th4;
    suppose n is Integer;
      hence thesis by A2, XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A2, XXREAL_3:def 2;
    end;
    suppose n=+infty;
      hence thesis by A2;
    end;
  end;
  suppose A3: m=+infty;
    per cases by Th4;
    suppose n is Integer;
      hence thesis by A3, XXREAL_3:def 2;
    end;
    suppose n=-infty;
      hence thesis by A3;
    end;
    suppose n=+infty;
      hence thesis by A3;
    end;
  end;
end;
@ 

\begin{proof}[Proof sketch (multiplying extended integers)]
This boils down to a proof by cases, which is thoroughly
unenlightening. When multiplying integers together, we get an integer; when
multiplying infinity to an integer, we get an infinity.
\end{proof}

<<Proof: multiplying extended integers yields an extended integer>>=
proof
  per cases by Th4;
  suppose m is Integer;
    then reconsider M=m as Integer;
    per cases by Th4;
    suppose n is Integer;
      then reconsider N=n as Integer;
      M * N is Integer;
      hence thesis by XXREAL_3:def 5;
    end;
    suppose B1: n=-infty;
      m is positive or m is negative or m is zero;
      hence thesis by B1, XXREAL_3:def 5;
    end;
    suppose B2: n=+infty;
      m is positive or m is negative or m is zero;
      hence thesis by B2, XXREAL_3:def 5;
    end;
  end;
  suppose A2: m=-infty;
    per cases by Th4;
    suppose n is Integer;
      n is positive or n is negative or n is zero;
      hence thesis by A2, XXREAL_3:def 5;
    end;
    suppose n=-infty;
      hence thesis by A2, XXREAL_3:def 5;
    end;
    suppose n=+infty;
      hence thesis by A2, XXREAL_3:def 5;
    end;
  end;
  suppose A3: m=+infty;
    per cases by Th4;
    suppose n is Integer;
      n is positive or n is negative or n is zero;
      hence thesis by A3, XXREAL_3:def 5;
    end;
    suppose n=-infty;
      hence thesis by A3, XXREAL_3:def 5;
    end;
    suppose n=+infty;
      hence thesis by A3;
    end;
  end;
end;
@

\begin{registration}
Subtracting extended integers yields an extended integer.
\end{registration}

<<Register: subtracting extended integers yields an extended integer>>=
registration
  let m, n be ExtInt;
  cluster m - n -> ext-integer;
  coherence
  proof
    (- n) is ext-integer & m + (- n) is ext-integer &
    m - n = m + (- n) by XXREAL_3:def 4;
    hence thesis;
  end;
end;
@ 

\begin{registration}
Non-negative extended integers are extended naturals.
\end{registration}

<<Register: non-negative extended integers are extended naturals>>=
registration
  cluster non negative -> ext-natural for ExtInt;
  coherence
  proof
    let x be ExtInt;
    assume A1: x is non negative;
    x is Integer or x = -infty or x = +infty by Th4;
    hence thesis by A1;
  end;
end;
@

\begin{theorem}
We have $x$ is a positive extended integer if and only if either $x$ is
a positive integer or $x=+\infty$.
\end{theorem}

<<Theorem: positive extended integers are either positive integers or $+\infty$>>=
theorem ThPosExtInt:
  for x being object
  holds x is positive ExtInt iff (x is positive Integer or x = +infty) by Th4;
@ %def ThPosExtInt

\begin{theorem}
We have $x$ is a negative extended integer if and only if either $x$ is
a negative integer or $x=-\infty$.
\end{theorem}

<<Theorem: negative extended integers are either negative integers or $-\infty$>>=
theorem ThNegExtInt:
  for x being object
  holds x is negative ExtInt iff (x is negative Integer or x = -infty) by Th4;
@ %def ThNegExtInt