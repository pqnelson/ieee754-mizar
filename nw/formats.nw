% -*- mode: poly-noweb; noweb-code-mode: mizar-mode; -*-
\section{Floating-Point Formats}

<<3. Floating-point formats>>=
begin :: 3. Floating-point formats

<<Definition: $-0$>>

<<Theorem: for $n\in\NN$, $(n,0)\neq+\infty$ and $(n,0)\neq-\infty$>>

<<Theorem: $-0\notin\ExtRR$>>

<<Lemma: $\forall n\in\NN, (n,0)\notin\QQ_{+}$>>

<<Lemma: $\forall a,b\in\NN, a=\{b\}\implies b=0$>>

<<Lemma: $\forall i\in\NN,i\neq0\implies\{i\}\notin\QQ_{+}$>>

<<Lemma: For all $i\in\NN$, $(i,0)$ is not a Dedekind cut>>

<<Theorem: $\forall n\in\NN_{0},(n,0)\notin\ExtRR$>>

<<Definition: [[NaN]]>>

<<Theorem: $\NaN\notin\ExtRR$>>

<<Reserve: parameters for floating-point format>>

<<Definition: subset of floating-point numbers for a format>>

<<Theorem: infinity is a float-poing number>>

<<Theorem: criteria for real numbers to be exact floating-point numbers>>

<<Lemma: if $y$ is floating-point number, then $-y$ is a floating-point number>>

<<Theorem: floating-point numbers closed under negation>>

<<Theorem: criteria for positive real numbers to be exact floating-point numbers>>

<<Theorem: if $b$ is a natural number, then $1\in\FF(b,p,e_{\text{min}},e_{\text{max}})$>>

<<Definition: floating-point format as [[FLOAT]]>>

<<Theorem: smallest floating-point number>>

<<Theorem: floating-point numbers are integer multiples of $b^{e_{\text{min}}-p+1}$>>

<<Definition: normal floating-point number>>

<<Lemma: $b^{1-p}\leq1$ and $1\leq b^{p-1}$>>

<<Lemma: $b\leq b^{e_{\text{max}}}$>>

<<Lemma: $b(b-1)\leq b^{e_{\text{max}}}(b-b^{1-p})$>>

<<Theorem: If $1\in\FF(b,p,-\infty,e_{\text{max}})$, then 1 is normal>>

<<Theorem: If $1\in\FF(b,p,e_{\text{min}},+\infty)$, then 1 is normal>>

<<Theorem: If $b\in\NN$, then there exists a normal floating-point number>>

<<Register: normal floating-point datum>>

<<Definition: subnormal floating-point datum>>
@ 

\subsection{Overview}

\subsubsection{Formats}
The basic idea is that we have a ``floating-point format'', which
``represent'' a finite subset of the extended reals adjoined with a
special [[NaN]] symbol. The standard explicitly states that ``Formats
are characterized by their radix, precision, and exponent range'' and
each format can represent a unique set of ``floating-point data''.

Do not be confused: a floating-point format is uniquely identified by
its tuple of parameters $(\beta,p,e_{\text{min}}, e_{\text{max}})$
\emph{but} it refers a set of ``floating-point data'' [i.e., a finite
subset of the extended reals $\ExtRR$ equipped with the symbol
\texttt{NaN} and adjoined with a ``signed zero'' $-0$ treated as a
numeric].

This is then in contrast to a ``representation'' of floating-point data,
which is the set of triples $(s,e,m)\in\{0,1\}\times\ZZ\times\NN$ within
the specified range, unioned with the signed infinities and both the
quiet and signaling NaN constants.

When we have some floating-point format $F(\beta,p,e_{\text{min}}, e_{\text{max}})$ given, we use a
\emph{rounding function} $R\colon\ExtRR\to F(\beta,p,e_{\text{min}}, e_{\text{max}})$ to map extended real
numbers to floating-point numbers. This $R$ is surjective on
$F(\beta,p,e_{\text{min}}, e_{\text{max}})\setminus\{\mathtt{NaN},-0\}$, $R$ must be monotonic, and preserves
zero $R(0)=+0$ and infinities. There are multiple possible rounding
functions, the IEEE-754 standard gives us 5 possibilities. These
rounding functions parametrize the elementary arithmetic operators
$\star_{R}\colon F\times F\to F$ where
$\star\in\{+,-,\times,\div,\sqrt{\enspace}\}$. But we are getting ahead
of ourselves.

\begin{definition}
We define \define{Signed Zero} to be the term equal to $-0 := (0,0)$.
\end{definition}

This is in accordance with the Mizar formalization of negative
numbers. If $n\in\NN$, then $-n\in\ZZ$ is defined as $(0,n)$. If
$x\in\RR$ is positive, then $-x\in\RR$ is defined as $(0,x)$. It stands
to reason that $-0$ would be defined following the same
pattern. However, this has the peculiar quirk that
$-0=\{\{0\},\{0,0\}\}=\{\{0\}\}=\{1\}$.

<<Definition: $-0$>>=
definition
  func -0 -> object equals [0,0];
  coherence;
end;
@ %def -0

\begin{voc}
We add ``$-0$'' as a token for Mizar to recognize.
\end{voc}

<<DICT/float-1.voc>>=
O-0
@

\begin{theorem}
Let $n$ be a natural number. Then the ordered pair $(n,0)$ is not infinite.
\end{theorem}

\begin{proof}
We begin by observing that $n\in\RR$.
  
For proving $(n,0)\neq+\infty$, this is because the set theoretic
implementation for positive infinity is $+\infty=\RR$. Then $(n,0)=\{\{n\},\{n,0\}\}$
set theoretically, and since $n\in\RR$ this would require $n=\{n\}$
(which violates regularity) or $n=\{n,0\}$ (which violates regularity).

Now, Mizar encodes negatives numbers $-x$ as the ordered pair $(0,x)$ for any $x>0$. 
In fact, $-\infty=(0,+\infty)$. So if $-0=-\infty$, then this would
correspond to $(n,0)=(0,+\infty)$ and projecting the second components
of the ordered pairs gives us $0=+\infty$ which is a contradiction
(since $0\in\RR$, we contradict the axiom of regularity again).
\end{proof}

<<Theorem: for $n\in\NN$, $(n,0)\neq+\infty$ and $(n,0)\neq-\infty$>>=
theorem Th4:
  for n being Nat
  holds [n,0] <> +infty & [n,0] <> -infty
proof
  let n be Nat;
  A1: n in REAL by NUMBERS:19, TARSKI:def 3, ORDINAL1:def 12;
  +infty = [n,0] implies contradiction
  proof
    assume A2: +infty = [n,0];
    then +infty = {{n}, {n,0}} by TARSKI:def 5;
    then n = {n} or n = {n,0};
    then per cases;
    suppose n = {n};
      hence contradiction by ZFMISC_1:140;
    end;
    suppose n = {n,0};
      then n in n or n in 0 by TARSKI:def 2;
      hence contradiction by ORDINAL1:def 13;
    end;
  end;
  hence [n,0] <> +infty;
  thus [n,0] <> -infty by A1, XXREAL_0:def 3, XTUPLE_0:1, ORDINAL1:def 13;
end;
@ 

\begin{theorem}\label{thm:formats:-0-is-not-real}
Signed zero is not an element of the extended reals $-0\notin\ExtRR$.
\end{theorem}

\begin{proof}[Proof sketch]
We can see that $-0\notin\{\pm\infty\}$ by the previous theorem, and
that $-0\notin\RR$. The result follows immediately.
\end{proof}

<<Theorem: $-0\notin\ExtRR$>>=
theorem Th5:
  not -0 in ExtREAL
proof
  [0,0] <> +infty & [0,0] <> -infty by Th4;
  then not (-0 in REAL or -0 in {+infty, -infty})
  by NUMBERS:def 1, ZFMISC_1:56, TARSKI:def 2;
  hence thesis by NUMBERS:def 5, XBOOLE_0:def 3, XXREAL_0:def 2,def 3;
end;
@ %def Th5

\begin{lemma}
There is no natural number $n\in\NN$ such that $(n,0)\in\QQ_{+}$, i.e.,
the ordered pair $(n,0)$ is not a positive rational number.
\end{lemma}

Lemmas are ``private theorems'' which are used to carve out
uninteresting and lengthy subproofs. We will need 4 lemmas to prove
$(n,0)\notin\RR$. 

\begin{proof}[Proof sketch]
Assume for contradiction $(n,0)\in\QQ_{+}$. But rational numbers are
either natural numbers or pairs of natural numbers $(a,b)$ such that
$b\neq0$ and $b\neq1$. However, $(n,0)\notin\NN$, which means that
$(a,b)=(n,0)$ and this gives us the contradiction --- $b=0$ and $b\neq0$.
\end{proof}

<<Lemma: $\forall n\in\NN, (n,0)\notin\QQ_{+}$>>=
Lm1:
  for n being Nat
  holds not [n,0] in RAT+
proof
  let n be Nat;
  assume A1: [n,0] in RAT+;
  n in omega by ORDINAL1:def 12;
  then 0 <> {} by A1, ARYTM_3:33;
  hence contradiction by ORDINAL1:def 13;
end;
@ %def Lm1

\begin{lemma}
Let $a,b\in\NN$. If $a=\{b\}$, then $b=0$.
\end{lemma}

\begin{proof}[Proof sketch]
Assume $a=\{b\}$. Then there exists a natural number $c$ such that
$a=c\cup\{c\}$.
But then this means $\{b\}=\{c\}\cup c$ which forces $c=0$, and
therefore $b=0$.
\end{proof}

<<Lemma: $\forall a,b\in\NN, a=\{b\}\implies b=0$>>=
Lm2:
  for a,b being Nat
  st a = {b}
  holds b = {}
proof
  let a,b be Nat;
  assume A1: a = {b};
  then consider c being Nat such that
  A2: a = succ c by CARD_1:36;
  {b} = c \/ {c} by A1, A2, ORDINAL1:def 1;
  then c = {} by ZFMISC_1:38, ZFMISC_1:140;
  then a = {} \/ {{}} by A2, ORDINAL1:def 1;
  hence thesis by A1, ZFMISC_1:3;
end;
@ %def Lm2

\begin{lemma}
Let $i\in\NN$ be a nonzero natural number $i\neq0$. Then the singleton
consisting of $i$ is not a positive rational number
$\{i\}\notin\QQ_{+}$.
\end{lemma}

\begin{proof}[Proof sketch]
Assume $i\neq0$. This is another proof by contradiction. Assume
$\{i\}\in\QQ_{+}$. Then either $\{i\}\in\NN$ (which leads to
$0\in\{i\}$, i.e., $0=i$ --- a contradiction) or there exists natural
numbers $a,b\in\NN$ such that they are coprime and $b\neq0$ and $b\neq1$
and $\{i\}=(a,b)$.
But then this implies $a=b$ and $\{i\}=\{\{b\}\}$, which means $i=\{b\}$
and by our previous lemma $b=0$ --- contradicting the requirement $b\neq0$.
\end{proof}

<<Lemma: $\forall i\in\NN,i\neq0\implies\{i\}\notin\QQ_{+}$>>=
Lm3:
  for i being Nat st i <> 0
  holds not {i} in RAT+
proof
  let i be Nat such that
  A1: i <> 0;
  assume A2: {i} in RAT+;
  then per cases by ARYTM_3:29;
  suppose {i} in omega;
    then {} in {i} by ORDINAL3:8;
    hence contradiction by A1, ORDINAL1:def 13, TARSKI:def 1;
  end;
  suppose ex a,b being Element of omega st ({i} = [a,b] &
    a,b are_coprime & b <> {} & b <> 1);
    then consider a,b being Element of omega such that
    A3: ({i} = [a,b] & a,b are_coprime & b <> {} & b <> 1);
    {i} = {{a}, {a,b}} by A3, TARSKI:def 5;
    then {a} = {a,b} by ZFMISC_1:5;
    then A4: a = b by ZFMISC_1:5;
    then {i} = {{b}, {b,b}} by A3, TARSKI:def 5
            .= {{b}, {b}} by ENUMSET1:29
            .= {{b}} by ENUMSET1:29;
    hence contradiction by A3, Lm2, ZFMISC_1:3;
  end;
end;
@ %def Lm3

\begin{lemma}
For any nonzero natural number $i\in\NN$,
we have the ordered pair $(i,0)$ is not a Dedekind cut.
\end{lemma}

\begin{proof}[Proof sketch]
If $(i,0)$ were a Dedekind cut, then this would force the singleton
consisting of $i$ to be a positive rational number
$\{i\}\in\QQ_{+}$. This contradicts the previous lemma.
\end{proof}

<<Lemma: For all $i\in\NN$, $(i,0)$ is not a Dedekind cut>>=
Lm4:
  for i being Nat st i <> 0
  holds not [i,0] in DEDEKIND_CUTS
proof
  let i be Nat such that
  A1: i <> 0;
  assume [i,0] in DEDEKIND_CUTS;
  then [i,0] in {A where A is Subset of RAT+ : for r being Element of RAT+
  st r in A holds ((for s being Element of RAT+ st s <=' r holds s in A)
                   & ex s being Element of RAT+ st (s in A & r < s)) }
  by ARYTM_2:def 1;
  then consider A being Subset of RAT+ such that
  A2: [i,0] = A
    & for r being Element of RAT+ st r in A
      holds (for s being Element of RAT+ st s <=' r holds s in A)
          & ex s being Element of RAT+ st s in A & r < s;
  A = {{i}, {i,0}} by A2, TARSKI:def 5;
  then {i} in RAT+ & {i,0} in RAT+ by ZFMISC_1:32;
  hence contradiction by A1, Lm3;
end;
@ %def Lm4

\begin{theorem}
For all $n\in\NN_{0}$, we have $(n,0)\notin\RR$.
\end{theorem}

\begin{proof}[Proof sketch]
We have proven the $n=0$ case already in
Theorem~\ref{thm:formats:-0-is-not-real}, so we just need to consider
the nonzero case. If $(n,0)$ were a positive real number, then either it
is a positive rational number $(n,0)\in\QQ_{+}$ or it is a Dedekind cut (which we know is false
thanks to our lemmas). We can see that $(n,0)$ cannot be a negative real
number, otherwise there would exists a positive real $x\in\RR_{+}$ such
that $(n,0)=(0,x)$ since that's how we encoded $-x=(0,x)$. But this
means the first components of the ordered pairs would be equal, $n=0$,
which contradicts the assumption that $n\neq0$.

Then we see that $(n,0)$ is not $\pm\infty$ due to earlier results, and
this means that $(n,0)$ cannot be an extended real number.
\end{proof}

This will be important because we're going to encode \NaN, \qNaN, \sNaN,
as $(n,0)$ for $n\geq1$. This basically uses Theorem [[ARYTM_3:33]].

<<Theorem: $\forall n\in\NN_{0},(n,0)\notin\ExtRR$>>=
theorem Th6:
  for i being Nat
  holds not [i,0] in ExtREAL
proof
  let i be Nat;
  A1: not [i,0] in REAL
  proof
    per cases;
    suppose i = 0;
      hence thesis by Th5, NUMBERS:def 5, XBOOLE_0:def 3;
    end;
    suppose A1: i <> 0;
      then not ([i,0] in RAT+ or [i,0] in DEDEKIND_CUTS) by Lm1,Lm4;
      then A2: not [i,0] in REAL+ by ARYTM_2:def 2, XBOOLE_0:def 3;
      not [i,0] in [:{0},REAL+:] by A1, ZFMISC_1:105;
      hence thesis by A2, XBOOLE_0:def 3, NUMBERS:def 1;
    end;
  end;
  [i,0] <> +infty & [i,0] <> -infty by Th4;
  then not [i,0] in {+infty,-infty} by TARSKI:def 2;
  then not [i,0] in REAL \/ {+infty,-infty} by A1, XBOOLE_0:def 3;
  hence not [i,0] in ExtREAL by NUMBERS:def 5, XXREAL_0:def 2,def 3;
end;
@ %def Th6

\begin{definition}
We define the symbol \define{NaN} to be the term equal to $\NaN{} := (1,0)$.
\end{definition}

Since Mizar defines the complex numbers as the set
\begin{equation}
\CC = (\hom(\{0,1\},\RR)\setminus\{f\in\hom(\{0,1\},\RR)\mid f(1)=0\})\cup\RR,
\end{equation}
where $\hom(A,B)$ is the set of functions $f\colon A\to B$ from the set
$A$ to the set $B$, this avoids accidental ``collisions'' of
values. That is to say, $(1,0)$ does not refer to a complex number.

<<Definition: [[NaN]]>>=
definition
  func NaN -> object equals [1,0];
  coherence;
end;
@ %def NaN

\begin{voc}
We tell Mizar to expect [[NaN]] to be recognized as a token for a term.
\end{voc}

<<DICT/float-1.voc>>=
ONaN
@ 

\begin{theorem}
We see that $\NaN\notin\ExtRR$.
\end{theorem}

<<Theorem: $\NaN\notin\ExtRR$>>=
theorem
  not NaN in ExtREAL by Th6;
@ 

\begin{reserve}
We will reserve $p$ for some positive natural number, $e_{\text{min}}$
for a negative integer smaller than $-1$ (possibly equal to $-\infty$),
$e_{\text{max}}$ for a positive integer or $+\infty$.
\end{reserve}

The rationale for $e_{\text{min}}<-1$ is that subnormal floating-point
numbers don't exist for $e_{\text{min}}=-1$ or
$e_{\text{min}}=0$. Actually, this isn't true, it works fine even if we
take $e_{\text{min}}=0$.

<<Reserve: parameters for floating-point format>>=
reserve beta for valid_radix Real;
reserve p for positive Integer;
reserve eMin for negative ExtInt;
reserve eMax for positive ExtNat;
@ 

\begin{definition}
Let $b$ be a valid radix real number, let $p$ be a natural number,
let $e_{\text{min}}\in\ZZ\cup\{-\infty\}$ and
$e_{\text{max}}\in\NN\cup\{+\infty\}$ be negative and positive integers
or infinities.
We define the set of \define{Floating-Point Numbers} to be the subset
$\FF_{n}(b,p,e_{\text{min}},e_{\text{max}})$ of $\ExtRR$ equal to
$\{x\in\RR \mid \exists M,e\in\ZZ, x=M\cdot b^{e-p+1}\land
|M|\leq b^{p}-1\land e_{\text{min}}-1<e\leq e_{\text{max}}\}\cup\{\pm\infty\}$.
\end{definition}

\begin{remark}
We should really have the set be
$\{x\in\RR \mid \exists M,e\in\ZZ, x=M\cdot b^{e-p+1}\land
|M|\leq b^{p}-1\land e_{\text{min}}\leq e\leq e_{\text{max}}\}\cup\{\pm\infty\}$
if we were trying to \emph{literally} formalize the Standard, but this
is logically equivalent to the definition offered. The reason why we use
$e_{\text{min}}-1<e\leq e_{\text{max}}$ instead of
$e_{\text{min}}\leq e\leq e_{\text{max}}$ is for the case when
$e_{\text{min}}=-\infty$ we run into difficulties.
\end{remark}

We're allowing the exponents to possible be infinite because other users
of our formalization may wish to prove results using, e.g., Trefethan
and Bau's ``idealized floating-point arithmetic'' which has
$e_{\text{min}}=-\infty$ and $e_{\text{max}}=+\infty$.

We should adhere to Mizar's naming conventions, and use
[[SCREAMING_SNAKE_CASE]] when defining new sets of numbers. After all,
we're really defining the set of floating-point numbers here. We will
use the identifier [[FLOAT]] for the floating-point format, and
[[Float]] for elements of [[FLOAT]]. We are currently going to define
the set [[FLOAT_NUMBER]] as a subset of the extended reals.

<<Definition: subset of floating-point numbers for a format>>=
definition
  let b, p, eMin, eMax;
  func FLOAT_NUMBER(b, p, eMin, eMax) -> Subset of ExtREAL equals
  {x where x is Real : ex M, e being Integer
   st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
   & eMin - 1 < e & e <= eMax } \/ {+infty, -infty};
  coherence
  proof
    set NUM = {x where x is Real : ex M, e being Integer
    st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
    & eMin - 1 < e & e <= eMax };
    set IT = NUM \/ {+infty, -infty};
    for x being object st x in IT holds x in ExtREAL
    proof
      let x be object;
      assume Z1: x in IT;
      then per cases by XBOOLE_0:def 3;
      suppose A1: x in NUM;
        then ex y being Real st x = y & ex M, e being Integer
        st y = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
        & eMin - 1 < e & e <= eMax;
        then x in REAL by XREAL_0:def 1;
        hence x in ExtREAL by XBOOLE_0:def 3, XXREAL_0:def 4;
      end;
      suppose A2: x in {-infty, +infty};
        hence x in ExtREAL by XBOOLE_0:def 3, XXREAL_0:def 4;
      end;
    end;
    hence thesis by TARSKI:def 3;
  end;
end;
@ %def FLOAT_NUMBER

\begin{theorem}
Infinity is a floating-point number.
\end{theorem}

This is explicitly part of the standard, in \S3.2, that $+\infty$ and
$-\infty$ are floating-point numbers.

\begin{remark}
We will adopt the naming convention that theorems which appear in the
Standard will be labeled ``$\mathtt{St}cs\beta x$'' where $c$ is the
clause, $s$ the subclause, $\beta$ the sub-subclause, and $x$ is a
unique number.
\end{remark}

<<Theorem: infinity is a float-poing number>>=
theorem St3200:
  -infty in FLOAT_NUMBER(b, p, eMin, eMax)
  & +infty in FLOAT_NUMBER(b, p, eMin, eMax)
proof
  -infty in {-infty,+infty} by TARSKI:def 2;
  hence -infty in FLOAT_NUMBER(b, p, eMin, eMax) by XBOOLE_0:def 3;
  +infty in {-infty,+infty} by TARSKI:def 2;
  hence +infty in FLOAT_NUMBER(b, p, eMin, eMax) by XBOOLE_0:def 3;
end;
@ %def St3200

\begin{theorem}
Let $x$ be a real number.
Then $x\in\FF_{n}(b,p,e_{\text{min}},e_{\text{max}})$
if and only if there exists integers $e$ and $M$ such that
$x=M\cdot(b^{e-p+1})$ and $|M|\leq b^{p-1}$ and $e_{\text{min}}-1<e\leq e_{\text{max}}$.
\end{theorem}

\begin{proof}[Proof sketch]
This is a classic ``unroll the definitions'' proof, and just allows us
to side-step awkwardly using Fraenkel terms (the set construction object).
\end{proof}

<<Theorem: criteria for real numbers to be exact floating-point numbers>>=
theorem Th11:
  for x being Real
  holds x in FLOAT_NUMBER(b, p, eMin, eMax) iff
  (ex M, e being Integer
  st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax)
proof
  set NUM = {x where x is Real : ex M, e being Integer
   st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
   & eMin - 1 < e & e <= eMax };
  let x be Real;
  thus x in FLOAT_NUMBER(b, p, eMin, eMax) implies
  (ex M, e being Integer
  st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax)
  proof
    assume A1: x in FLOAT_NUMBER(b, p, eMin, eMax);
    then x in NUM or x in {+infty, -infty} by XBOOLE_0:def 3;
    then ex y being Real st x = y & ex M, e being Integer
    st y = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
    & eMin - 1 < e & e <= eMax by TARSKI:def 2;
    hence thesis;
  end;
  thus (ex M, e being Integer
  st x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax) implies x in FLOAT_NUMBER(b, p, eMin, eMax)
  proof
    given M, e being Integer such that 
    A1: x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
    & eMin - 1 < e & e <= eMax;
    x in NUM by A1;
    hence x in FLOAT_NUMBER(b, p, eMin, eMax) by XBOOLE_0:def 3;
  end;
end;
@ %def Th11

\begin{lemma}
Let $y$ be an extended real number. If $y\in\RR$ and $y$ is a
floating-point number, then $-y$ is a floating-point number.
\end{lemma}

<<Lemma: if $y$ is floating-point number, then $-y$ is a floating-point number>>=
Lm7:
  for y being ExtReal st y in REAL
  holds y in FLOAT_NUMBER(b, p, eMin, eMax)
  implies (- y) in FLOAT_NUMBER(b, p, eMin, eMax)
proof
  let y be ExtReal;
  assume A2: y in REAL;
  assume y in FLOAT_NUMBER(b, p, eMin, eMax);
  then consider M, e being Integer such that
  A3: y = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax
  by A2, Th11;
  A4: (- M) * (b to_power (e - p + 1))
  = - (M * (b to_power (e - p + 1)))
  .= (-1) * ((M * (b to_power (e - p + 1))) qua ExtReal)
  .= (-1) * (y) by A3
  .= - y by XXREAL_3:91;
  |.(- M).| = |.M.| by COMPLEX1:52;
  hence (- y) in FLOAT_NUMBER(b, p, eMin, eMax) by A3,A4,Th11;
end;
@ %def Lm7

\begin{theorem}
Let $x$ be an extended real number. Then $x$ is a floating-point number
if and only if $-x$ is a floating-point number.
\end{theorem}

\begin{proof}[Proof sketch]
This is a proof by cases. Case 1: $x\in\RR$. Then we use the previous
lemma to obtain the result. Case 2: $x=-\infty$. Then $-x=+\infty$ which
is a floating-point number. Case 3: $x=+\infty$. Then $-x=-\infty$ which
is a floating-point number.
\end{proof}

<<Theorem: floating-point numbers closed under negation>>=
theorem
  for x being ExtReal
  holds x in FLOAT_NUMBER(b, p, eMin, eMax)
  iff (- x) in FLOAT_NUMBER(b, p, eMin, eMax)
proof
  let x be ExtReal;
  A1: - -infty = +infty & - +infty = -infty by XXREAL_3:def 3;
  x in REAL \/ {+infty, -infty} by XXREAL_0:def 1,def 4;
  then x in REAL or x in {+infty, -infty} by XBOOLE_0:def 3;
  then per cases by TARSKI:def 2;
  suppose CASE1: x in REAL;
    thus x in FLOAT_NUMBER(b, p, eMin, eMax)
    implies (- x) in FLOAT_NUMBER(b, p, eMin, eMax) by CASE1,Lm7;
  
    A2: - x in REAL by CASE1, XREAL_0:def 1;
    assume (- x) in FLOAT_NUMBER(b, p, eMin, eMax);
    then - (- x) = x & - (- x) in FLOAT_NUMBER(b, p, eMin, eMax) by Lm7,A2;
    hence x in FLOAT_NUMBER(b, p, eMin, eMax);
    hence thesis by Lm7;
  end;
  suppose CASE2: x=+infty;
    hence thesis by A1, CASE2, St3200;
  end;
  suppose CASE3: x=-infty;
    hence thesis by A1, CASE3, St3200;
  end;
end;
@ 

\begin{theorem}
Let $x$ be a positive real number.
Then $x\in\FF_{n}(b,p,e_{\text{min}},e_{\text{max}})$
if and only if there exists integers $e$ and $M$ such that
$x=M\cdot(b^{e-p+1})$ and $0<M\leq b^{p-1}$ and $e_{\text{min}}-1<e\leq e_{\text{max}}$.
\end{theorem}

<<Theorem: criteria for positive real numbers to be exact floating-point numbers>>=
theorem Th12:
  for x being positive Real
  holds x in FLOAT_NUMBER(b, p, eMin, eMax) iff
  (ex M, e being Integer
  st x = M * (b to_power (e - p + 1)) & 0 < M & M <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax)
proof
  let x be positive Real;
  thus x in FLOAT_NUMBER(b, p, eMin, eMax) implies (ex M, e being Integer
  st x = M * (b to_power (e - p + 1)) & 0 < M & M <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax)
  proof
    assume x in FLOAT_NUMBER(b, p, eMin, eMax);
    then consider M, e being Integer such that
    A1: x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
    & eMin - 1 < e & e <= eMax by Th11;
    take M, e;
    thus thesis by A1, COMPLEX1:43;
  end;
  given M, e being Integer such that 
  A2: x = M * (b to_power (e - p + 1)) & 0 < M & M <= b to_power (p-1) & eMin - 1 < e & e <= eMax;
  |.M.| = M by A2, COMPLEX1:43;
  hence thesis by A2, Th11;
end;
@ %def Th12

\begin{theorem}
Let $b\in\NN$ be a valid radix.
Then $1\in\FF(b,p,e_{\text{min}},e_{\text{max}})$.
\end{theorem}

<<Theorem: if $b$ is a natural number, then $1\in\FF(b,p,e_{\text{min}},e_{\text{max}})$>>=
theorem Th17:
  for b being valid_radix Nat
  holds 1 in FLOAT_NUMBER(b, p, eMin, eMax)
proof
  let b be valid_radix Nat;
  1 is positive Real;
  ex M, e being Integer
  st 1 = M * (b to_power (e - p + 1)) & 0 < M & M <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax
  proof
    p >= 0 + 1 by INT_1:7;
    then A1: p - 1 in NAT by INT_1:5;
    then reconsider p1=p - 1 as Nat;
    b to_power (p - 1) = b |^ p1 by POWER:41;
    then reconsider M = b to_power (p - 1) as Integer;
    take M;
    take e = 0;
    thus M * (b to_power (e - p + 1))
          = (b to_power (p - 1)) * (b to_power (e - p + 1))
         .= b to_power ((p - 1) + (e - p + 1)) by POWER:27
         .= 1 by POWER:24;
    thus 0 < M;
    thus M <= b to_power (p-1);
    thus eMin - 1 < e;
    thus e <= eMax;
  end;
  hence 1 in FLOAT_NUMBER(b, p, eMin, eMax) by Th12;
end;
@ %def Th17

\begin{definition}
Let $\beta$ be a valid radix real number, let $p$ be a natural number,
let $e_{\text{min}}\in\ZZ\cup\{-\infty\}$ and
$e_{\text{max}}\in\NN\cup\{+\infty\}$ be negative and positive integers
or infinities.
We define the \define{Floating-Point Format} to be the set
$\FF(\beta,p,e_{\text{min}},e_{\text{max}})$ consisting of:
\begin{enumerate}
\item for any $x\in\RR$, we have $x\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})$ if and only if there are integers $M$ and $e$ such that
  $x=M\beta^{e-p}$ and $|M|\leq \beta^{p}-1$ and
  $e_{\text{min}}\leq e\leq e_{\text{max}}$
\item $-\infty\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})$
\item $+\infty\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})$
\item $\NaN\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})$
\item $-0\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})$
\end{enumerate}
\end{definition}

<<Definition: floating-point format as [[FLOAT]]>>=
definition
  let beta, p, eMin, eMax;
  func FLOAT(beta, p, eMin, eMax) -> set equals
  FLOAT_NUMBER(beta, p, eMin, eMax) \/ {-0, NaN};
  coherence;
end;
@ %def FLOAT

\begin{voc}
We will tell Mizar to add [[FLOAT_NUMBER]] and [[FLOAT]] as new
constants for its lexer to recognize.
\end{voc}

<<DICT/float-1.voc>>=
OFLOAT_NUMBER
OFLOAT
@ 

\begin{theorem}
When $e_{\text{min}}\in\ZZ$ is finite, the smallest positive
floating-point number for 
$\FF(b,p,e_{\text{min}},e_{\text{max}})$ is $b^{e_{\text{min}}-p+1}$.
\end{theorem}

When we allow $e_{\text{min}}=-\infty$, this theorem fails to hold
(obviously).

<<Theorem: smallest floating-point number>>=
theorem St3300:
  for eMin being negative Integer
  for x being ExtReal
  st x in FLOAT_NUMBER(b, p, eMin, eMax)
   & x > 0
   holds b to_power (eMin - p + 1) <= x
proof
  let eMin be negative Integer;
  let x be ExtReal;
  assume A1: x in FLOAT_NUMBER(b, p, eMin, eMax);
  assume A2: x > 0;
  x in REAL \/ {+infty,-infty} by XXREAL_0:def 1,def 4;
  then x in REAL or x in {+infty,-infty} by XBOOLE_0:def 3;
  then per cases by TARSKI:def 2;
  suppose x in REAL;
    then reconsider X=x as positive Real by A2;
    consider M, e being Integer such that
    A3: X = M * (b to_power (e - p + 1)) & 0 < M & M <= b to_power (p-1)
    & eMin - 1 < e & e <= eMax by A1, Th12;
    eMin - 1 + 1 <= e by A3, INT_1:7;
    then eMin + (1 - p) <= e + (1 - p) by XREAL_1:6;
    then A4: (b to_power (eMin - p + 1)) <= (b to_power (e - p + 1))
    by Def1, Th1;
    0 + 1 <= M by A3, INT_1:7;
    then 1 * (b to_power (e - p + 1)) <= M * (b to_power (e - p + 1))
    by XREAL_1:64;
    hence (b to_power (eMin - p + 1)) <= x by A3, A4, XXREAL_0:2;
  end;
  suppose x=+infty;
    hence b to_power (eMin - p + 1) <= x by XREAL_0:def 1, XXREAL_0:9;
  end;
  suppose x=-infty;
    hence thesis by A2;
  end;
end;
@

\begin{theorem}
When $e_{\text{min}}\in\ZZ$ is finite, every floating-point number in
$\FF(b,p,e_{\text{min}},e_{\text{max}})$ is an integer multiple of
$b^{e_{\text{min}}-p+1}$.
\end{theorem}

The standard says this in passing, but doesn't prove it.

<<Theorem: floating-point numbers are integer multiples of $b^{e_{\text{min}}-p+1}$>>=
theorem St3301:
  for eMin being negative Integer
  for x being Real
  st x in FLOAT_NUMBER(b, p, eMin, eMax) & b in INT
  ex n being Integer
  st n*(b to_power (eMin - p + 1)) = x
proof
  let eMin be negative Integer;
  let x be Real;
  assume A1: x in FLOAT_NUMBER(b, p, eMin, eMax);
  assume b in INT;
  then A2: b in NAT by INT_1:3;
  consider M, e being Integer such that
  A3: x = M * (b to_power (e - p + 1)) & |.M.| <= b to_power (p-1)
  & eMin - 1 < e & e <= eMax by A1,Th11;
  (eMin - 1) + 1 <= e by A3, INT_1:7;
  then eMin - eMin <= e - eMin by XREAL_1:9;
  then e - eMin in NAT by INT_1:3;
  then b to_power (e - eMin) in NAT by A2, ThNatPowers;
  then reconsider n = M * (b to_power (e - eMin)) as Integer;
  take n;
  thus n*(b to_power (eMin - p + 1))
   = (M * (b to_power (e - eMin))) * (b to_power (eMin - p + 1))
  .= M * ((b to_power (e - eMin)) * (b to_power (eMin - p + 1)))
  .= M * (b to_power ((e - eMin) + (eMin - p + 1))) by POWER:27
  .= M * (b to_power (e - p + 1))
  .= x by A3;
end;
@

\begin{definition}
Let $x$ be a floating-point datum belonging to the format $\FF(b,p,e_{\text{min}},e_{\text{max}})$.
We say $x$ is \define{Normal} if
\begin{enumerate}
\item when $e_{\text{min}}=-\infty$, $x\neq0$;
\item when $e_{\text{min}}\neq-\infty$ but $e_{\text{max}}=+\infty$,
  the magnitude of $x$ is not less than $b^{e_{\text{min}}}\leq|x|$;
\item otherwise, its magnitude lies between
  $b^{e_{\text{min}}}\leq|x|\leq b^{e_{\text{max}}}\cdot(b-b^{1-p})$.
\end{enumerate}
\end{definition}

\begin{remark}
The Standard really specifies only case (3), since they have exponents
be integers. We generalize to cases (1) and (2) in a manner to make sure
non-normal numbers [zero] remain non-normal.
\end{remark}

This definition gives us a peculiar situation: zero is not a normal
floating-point number. Neither is it a subnormal number (which are
defined to be nonzero). Perhaps there is a good rationale for this, but
it seems unintuitive that $0$ is not normal.

<<Definition: normal floating-point number>>=
definition
  let b, p, eMin, eMax;
  let IT be Element of FLOAT(b,p,eMin,eMax);
  attr IT is normal means :Def8:
  IT <> 0 if eMin =-infty,
  ex iMin being negative Integer st iMin = eMin
  & ex x being Real st x = IT
  & b to_power iMin <= |.x.| if eMin <> -infty & eMax = +infty
  otherwise ex iMin being negative Integer st iMin = eMin
  & ex iMax being positive Integer st iMax = eMax
  & ex x being Real st x = IT
  & b to_power iMin <= |.x.|
  & |.x.| <= (b to_power iMax)*(b - (b to_power (1 - p)));
  consistency;
end;
@ %def normal Def8

The question of \emph{when do normal floating-point numbers exist} is
rather tricky to answer in the abstract, because we can always pick an
arbitrarily small base to complicate things. When we work with
$e_{\text{min}}$ and $e_{\text{max}}$ being integers, the condition for
the existence of at least one normal floating-point number boils down to
\begin{equation}
b^{e_{\text{min}}}\leq b^{1+e_{\text{max}}}(1 - b^{-p}).
\end{equation}

\begin{proposition}
When $e_{\text{min}}+e_{\text{max}}=1$, and $b=1+\varepsilon$ for $0<\varepsilon\ll4/(1+e_{\text{max}})$,
there are no normal floating-point numbers.
\end{proposition}
\begin{proof}
When $b=1+\varepsilon$ for a positive but tiny $\varepsilon$, we
see the Binomial series truncated to first order gives us
\begin{equation}
1 + e_{\text{min}}\varepsilon\leq (1 + [1 + e_{\text{max}}]\varepsilon)(1 - (1 - p\varepsilon)) 
= (1 + [1 + e_{\text{max}}]\varepsilon)p\varepsilon.
\end{equation}
Rearranging terms, we see this requires
\begin{equation}
1 + e_{\text{min}}\varepsilon\leq p\varepsilon + [1 + e_{\text{max}}]p\varepsilon^{2},
\end{equation}
or equivalently
\begin{equation}
1\leq(p- e_{\text{min}})\varepsilon + [1 + e_{\text{max}}]p\varepsilon^{2}.
\end{equation}
If we use the condition that the IEEE Standard uses relating exponents,
$e_{\text{max}}+e_{\text{min}}=1$, and if we stipulate that $p>2$ and
$e_{\text{max}}>1$, then we obtain the inequality
\begin{equation}
p + (1 + e_{\text{max}}) + 2p(1 + e_{\text{max}})\varepsilon\geq2 +
\sqrt{p^{2} + (e_{\text{max}}-1)^{2}+p(6e_{\text{max}}+2)}.
\end{equation}
This gives us the inequality
\begin{equation}
\varepsilon\geq\frac{2 - p - (1 + e_{\text{max}}) + \sqrt{p^{2} + (e_{\text{max}}-1)^{2}+p(6e_{\text{max}}+2)}}{2p(1 + e_{\text{max}})}>0.
\end{equation}
When $p=7$ and $e_{\text{max}}=96$ (i.e., we use the decimale-32 format
from the IEEE standard), we see that we need
$\varepsilon\geq(4\sqrt{205}-51)/679\approx0.00923606$ for a normal
floating-point number to exist. So for smaller bases (say, $b=1+10^{-5}$),
there are no normal floating-point numbers with precision $p=7$ and
exponent bounds $e_{\text{max}}=96$, $e_{\text{min}}=-95$. Worse, there
are no values of $p$ and $e_{\text{max}}$ for which the right-hand side
vanishes --- i.e., for which $\varepsilon\geq0$.

When this inequality \emph{fails} to hold is of interest to us,
specifically when
\begin{equation}
\varepsilon<\frac{2 - p - (1 + e_{\text{max}}) + \sqrt{p^{2} + (e_{\text{max}}-1)^{2}+p(6e_{\text{max}}+2)}}{2p(1 + e_{\text{max}})}.
\end{equation}
We can rearrange this expression to find
\begin{subequations}
\begin{equation}
1 + e_{\text{max}} < \frac{1}{\varepsilon+2\varepsilon^{2}},
\end{equation}
and
\begin{equation}
2 < p < \frac{1 + \varepsilon - e_{\text{max}}\varepsilon}{\varepsilon + (1+e_{\text{max}})\varepsilon^{2}}.
\end{equation}
Observe since $0<\varepsilon\ll 1$, the upper bound on $p$ is meaningless.
\end{subequations}
The first inequality can be rearranged to find
\begin{equation}
4\varepsilon < \sqrt{\frac{9+e_{\text{max}}}{1+e_{\text{max}}}}-1 < \frac{4}{1+e_{\text{max}}}.
\end{equation}
Thus we obtain a criterion for the non-existence of normal floating-point
numbers for an arbitrary radix $b=1+\varepsilon$ (for $0<\varepsilon\ll1$) when $e_{\text{min}}+e_{\text{max}}=1$.
\end{proof}

We need to prove a number of lemmas concerning the bounds on powers of
the radix.

\begin{lemma}
Let $b$ be a valid radix number. Then $b^{1-p}\leq1$ and $1\leq b^{p-1}$.
\end{lemma}

\begin{proof}[Proof sketch]
Since $p\geq1$, then $0\geq 1-p$ and so $b^{0}\geq b^{1-p}$.
Similar reasoning gives $p-1\geq0$ thus $b^{p-1}\geq b^{0}$.
\end{proof}

<<Lemma: $b^{1-p}\leq1$ and $1\leq b^{p-1}$>>=
Lm19:
  b to_power (1 - p) <= 1
  & 1 <= b to_power (p - 1)
proof
  A1: p >= 0 + 1 by INT_1:7;
  then 1 - p <= 1 - 1 by XREAL_1:13;
  then b to_power (1 - p) <= b to_power 0 by Def1,Th1;
  hence b to_power (1 - p) <= 1 by POWER:24;
  1 - 1 <= p - 1 by A1, XREAL_1:9;
  then b to_power 0 <= b to_power (p - 1) by Def1,Th1;
  hence 1 <= b to_power (p - 1) by POWER:24;
end;
@ %def Lm19

\begin{lemma}
Let $e_{\text{max}}$ be a positive integer. Then $b\leq b^{e_{\text{max}}}$.
\end{lemma}

<<Lemma: $b\leq b^{e_{\text{max}}}$>>=
Lm20:
  for eMax being positive Integer
  holds b <= b to_power eMax
proof
  let eMax be positive Integer;
  0 + 1 <= eMax by INT_1:7;
  then b to_power 1 <= b to_power eMax by Def1,Th1;
  hence b <= b to_power eMax by POWER:25;
end;
@ %def Lm20

\begin{lemma}
Let $e_{\text{max}}$ be a positive integer. Then $b(b-1)\leq b^{e_{\text{max}}}(b-b^{1-p})$.
\end{lemma}

<<Lemma: $b(b-1)\leq b^{e_{\text{max}}}(b-b^{1-p})$>>=
Lm21:
  for eMax being positive Integer
  holds b * (b - 1) <= (b to_power eMax)*(b - (b to_power (1 - p)))
proof
  let eMax be positive Integer;
  A1: 0 <= b - 1 & 0 <= b
  proof
    b > 1 by Def1;
    hence 0 <= b - 1 by XREAL_1:48;
    thus 0 <= b;
  end;
  1 >= b to_power (1 - p) by Lm19;
  then A2: b - 1 <= b - (b to_power (1 - p)) by XREAL_1:13;
  b <= b to_power eMax by Lm20;
  hence b * (b - 1) <= (b to_power eMax)*(b - (b to_power (1 - p)))
  by A1, A2, XREAL_1:66;
end;
@ %def Lm21

\begin{theorem}
If $1\in\FF(b,p,-\infty,e_{\text{max}})$, then 1 is normal.
\end{theorem}

<<Theorem: If $1\in\FF(b,p,-\infty,e_{\text{max}})$, then 1 is normal>>=
theorem ThNormalFloatInNegInfty:
  for x being Element of FLOAT(b, p, eMin, eMax)
  st x=1 & eMin=-infty
  holds x is normal
proof
  let x be Element of FLOAT(b, p, eMin, eMax);
  assume A1: x=1;
  assume eMin=-infty;
  hence x is normal by A1,Def8;
end;
@ %def ThNormalFloatInNegInfty

\begin{theorem}
If $1\in\FF(b,p,e_{\text{min}},+\infty)$, then 1 is normal.
\end{theorem}

<<Theorem: If $1\in\FF(b,p,e_{\text{min}},+\infty)$, then 1 is normal>>=
theorem ThNormalFloatInPosInfty:
  for x being Element of FLOAT(b, p, eMin, eMax)
  st x=1 & eMax=+infty
  holds x is normal
proof
  let x be Element of FLOAT(b, p, eMin, eMax);
  assume A1: x=1;
  assume A2: eMax=+infty;
  per cases;
  suppose eMin=-infty;
    hence thesis by ThNormalFloatInNegInfty,A1;
  end;
  suppose A3: eMin <> -infty;
    then reconsider iMin = eMin as negative Integer by ThNegExtInt;
    reconsider x1=x as Real by A1;
    b > 1 by Def1;
    then b to_power iMin < |.x1.| by A1,COMPLEX1:48,POWER:36;
    hence x is normal by A2,Def8;
  end;
end;
@ %def ThNormalFloatInPosInfty

\begin{theorem}
If $b\in\NN$, then there exists a normal element of $\FF(b,p,e_{\text{min}},e_{\text{max}})$.
\end{theorem}

<<Theorem: If $b\in\NN$, then there exists a normal floating-point number>>=
theorem ThExistenceNormalFloat:
  for b being valid_radix Nat
  ex x being Element of FLOAT(b, p, eMin, eMax)
  st x is normal
proof
  let b be valid_radix Nat;
  1 in FLOAT_NUMBER(b, p, eMin, eMax) by Th17; then
  A1: 1 in FLOAT(b, p, eMin, eMax) by XBOOLE_0:def 3;
  per cases;
  suppose eMin=-infty;
    hence thesis by A1, ThNormalFloatInNegInfty;
  end;
  suppose eMax=+infty;
    hence thesis by A1, ThNormalFloatInPosInfty;
  end;
  suppose A2: eMin <> -infty & eMax <> +infty;
    then reconsider iMin=eMin as negative Integer by ThNegExtInt;
    reconsider iMax=eMax as positive Integer by A2, ThPosExtInt;
    reconsider x0 = 1 as Element of FLOAT(b, p, eMin, eMax) by A1;
    take x0;
    ex x being Real st x = x0
    & b to_power iMin <= |.x.|
    & |.x.| <= (b to_power iMax)*(b - (b to_power (1 - p)))
    proof
      take x = 1;
      thus x = x0;
      b > 1 & iMin < 0 by Def1;
      hence b to_power iMin <= |.x.| by COMPLEX1:48, POWER:36;
      1 < b by Def1;
      then A3: 1 + 1 <= b by INT_1:7;
      then 2 + (- 1) <= b + (- 1) by XREAL_1:6;
      then A4: 2 * 1 <= b * (b - 1) by A3, XREAL_1:66;
      b * (b - 1) <= (b to_power iMax)*(b - (b to_power (1 - p))) by Lm21;
      then 2 <= (b to_power iMax)*(b - (b to_power (1 - p))) by A4, XXREAL_0:2;
      hence |.x.| <= (b to_power iMax)*(b - (b to_power (1 - p)))
      by COMPLEX1:48, XXREAL_0:2;
    end;
    hence x0 is normal by Def8;
  end;
end;
@ %def ThExistenceNormalFloat

\begin{registration}
Observe there exists a normal floating-point datum (take $b^{e_{\text{min}}}$).
\end{registration}

<<Register: normal floating-point datum>>=
registration
  let b be valid_radix Nat, p, eMin, eMax;
  cluster normal for Element of FLOAT(b,p,eMin,eMax);
  existence by ThExistenceNormalFloat;
end;
@ 

\begin{definition}
Let $x$ be a floating-point datum belonging to the format $\FF(b,p,e_{\text{min}},e_{\text{max}})$.
We say $x$ is \define{Subnormal} if its magnitude lies between
$0<|x|<b^{e_{\text{min}}}$.
\end{definition}

\begin{remark}
The Standard says that ``floating-point numbers for a format with magnitude less than $b^{e_{\text{min}}}$ are called subnormal because their
magnitudes lie between zero and the smallest normal magnitude.''
In particular, this means that subnormal numbers must be finite.
\end{remark}

<<Definition: subnormal floating-point datum>>=
definition
  let b, p, eMin, eMax;
  let IT be Element of FLOAT(b,p,eMin,eMax);
  attr IT is subnormal means
  ex x being Real st x = IT &
  ex iMin being negative Integer st iMin = eMin
  & 0 < |.x.| & |.x.| < b to_power iMin;
end;
@ %def subnormal

\begin{registration}
Observe that $b^{e_{\text{min}}-p+1}$ is a subnormal floating-point number.
\end{registration}

<<Register: subnormal for floating-point numbers>>=
registration
  let b, p, eMin, eMax;
  cluster normal for Element of FLOAT(b,p,eMin,eMax);
  existence
  proof
    set M = 1, e = eMin;
    set x = M * (b to_power (e - p + 1));
    x in FLOAT_NUMBER(b,p,eMin,eMax);
    then reconsider f=x as Element of FLOAT(b,p,eMin,eMax);
    take f;
    0 < |.x.| & |.x.| < b to_power eMin;
    hence thesis;
  end;
end;
@ 

\begin{definition}
Let $\beta$ be a valid radix real number, let $p$ be a natural number,
let $e_{\text{min}}\in\ZZ\cup\{-\infty\}$ and
$e_{\text{max}}\in\NN\cup\{+\infty\}$ be negative and positive integers
or infinities.
We define the set of \define{Floating-Point Representations} to be the
set $\FF_{r}(\beta,p,e_{\text{min}},e_{\text{max}})$ equal to
$\{(s,e,m)\in\{0,1\}\times\ZZ\times\NN\mid (-1)^{s}m\times\beta^{e}\in\FF(\beta,p,e_{\text{min}},e_{\text{max}})\lor(s=1,e=m=0)\}\cup\{+\infty,-\infty,\qNaN,\sNaN\}$.
\end{definition}

This is a little too clever: signed zeros are now treated ``as if'' they
were a distinct real number (not equal to zero), but infinities as well
as \qNaN\ and \sNaN\ are treated as formal symbols. It is not until the
binary encoding do we treat $-\infty$ as $(1,e_{\text{max}},0)$ and
$+\infty$ as $(0,e_{\text{max}},0)$ (and similarly for the NaNs). We
should really be doing it \emph{here}, but the IEEE committee felt
differently. This is how the text read in the 2008 revision, as well.

However, one merit of this approach is that we could formalize a notion
of representations for ``idealized floating point'' which would take
$e_{\text{min}}=-\infty$ and $e_{\text{max}}=+\infty$. If we used
triples exclusively as the definition of a representation, then we'd
have to allow $e\in\ZZ\cup\{+\infty\}$ and insist $e=+\infty$ be
reserved for \NaN\ and $\pm\infty$. I'm not sure that's much better.

<<Definition: Floating-point representation>>=
definition
  let beta, p, eMin, eMax;
  func FLOAT_REP(beta, p, eMin, eMax) -> set equals
  {[s,e,m] where s is Element of {0,1}, e is Int, m is Nat :
  (s = 1 & e = 0 & m = 0)
  or (ex x being Element of FLOAT_NUMBER(beta, p, eMin, eMax)
      st x = ((-1) |^ s) * m * (beta to_power (e - p + 1)))} 
  \/ {-infty, +infty, qNaN, sNaN};
  coherence;
end;
@ %def FLOAT_REP

